[
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#draft-notice",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#draft-notice",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-frequency-and-tools",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-frequency-and-tools",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0% \n  \n  \n    Rarely \n    5.1% \n  \n  \n    Sometimes \n    23.1% \n  \n  \n    Regularly \n    23.1% \n  \n  \n    All the time \n    48.7% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    89.5% \n    10.5% \n  \n  \n    Data cleaning \n    84.6% \n    15.4% \n  \n  \n    Data linking \n    84.6% \n    15.4% \n  \n  \n    Data transfer / migration \n    76% \n    24% \n  \n  \n    Data visualisation \n    86.8% \n    13.2% \n  \n  \n    Machine learning \n    81.8% \n    18.2% \n  \n  \n    Modelling \n    85.7% \n    14.3% \n  \n  \n    Quality assurance \n    69% \n    31% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    30.8% \n    64.1% \n    5.1% \n  \n  \n    Java / Scala \n    20.5% \n    76.9% \n    2.6% \n  \n  \n    Javascript / Typescript \n    20.5% \n    76.9% \n    2.6% \n  \n  \n    Matlab \n    35.9% \n    43.6% \n    20.5% \n  \n  \n    Python \n    89.7% \n    10.3% \n    0% \n  \n  \n    R \n    97.4% \n    2.6% \n    0% \n  \n  \n    SAS \n    2.6% \n    92.3% \n    5.1% \n  \n  \n    SPSS \n    5.1% \n    82.1% \n    12.8% \n  \n  \n    SQL \n    69.2% \n    28.2% \n    2.6% \n  \n  \n    Stata \n    10.3% \n    84.6% \n    5.1% \n  \n  \n    VBA \n    25.6% \n    74.4% \n    0% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    12.8% \n    5.1% \n    82.1% \n  \n  \n    Java / Scala \n    0% \n    7.7% \n    92.3% \n  \n  \n    Javascript / Typescript \n    2.6% \n    5.1% \n    92.3% \n  \n  \n    Matlab \n    35.9% \n    2.6% \n    61.5% \n  \n  \n    Python \n    38.5% \n    2.6% \n    59% \n  \n  \n    R \n    87.2% \n    5.1% \n    7.7% \n  \n  \n    SAS \n    7.7% \n    7.7% \n    84.6% \n  \n  \n    SPSS \n    20.5% \n    10.3% \n    69.2% \n  \n  \n    SQL \n    41% \n    2.6% \n    56.4% \n  \n  \n    Stata \n    7.7% \n    10.3% \n    82.1% \n  \n  \n    VBA \n    15.4% \n    12.8% \n    71.8% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    66.7% \n    13.3% \n    20% \n  \n  \n    Java / Scala \n    100% \n    0% \n    0% \n  \n  \n    Javascript / Typescript \n    87.5% \n    12.5% \n    0% \n  \n  \n    Matlab \n    36.4% \n    27.3% \n    36.4% \n  \n  \n    Python \n    58.3% \n    38.9% \n    2.8% \n  \n  \n    R \n    10.5% \n    89.5% \n    0% \n  \n  \n    SAS \n    25% \n    0% \n    75% \n  \n  \n    SPSS \n    11.1% \n    11.1% \n    77.8% \n  \n  \n    SQL \n    42.9% \n    53.6% \n    3.6% \n  \n  \n    Stata \n    40% \n    40% \n    20% \n  \n  \n    VBA \n    40% \n    60% \n    0%"
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-capability",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-capability",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.4% \n  \n  \n    Slightly worse \n    6.9% \n  \n  \n    No change \n    17.2% \n  \n  \n    Slightly better \n    34.5% \n  \n  \n    Significantly better \n    37.9% \n  \n\n\n\na Sample size = 29\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    25.6% \n  \n  \n    In education \n    59% \n  \n  \n    In private sector employment \n    2.6% \n  \n  \n    In public sector employment \n    0% \n  \n  \n    Self-taught \n    12.8% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 39"
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-practices",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-practices",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    76.9% \n    10.3% \n    5.1% \n    5.1% \n    0% \n    2.6% \n  \n  \n    Automated data quality assurance \n    5.1% \n    20.5% \n    17.9% \n    33.3% \n    15.4% \n    7.7% \n  \n  \n    Code review \n    0% \n    7.7% \n    30.8% \n    43.6% \n    15.4% \n    2.6% \n  \n  \n    Coding guidelines / Style guides \n    7.7% \n    20.5% \n    10.3% \n    35.9% \n    20.5% \n    5.1% \n  \n  \n    Functions \n    0% \n    7.7% \n    10.3% \n    23.1% \n    38.5% \n    20.5% \n  \n  \n    Open source own code \n    5.1% \n    23.1% \n    12.8% \n    43.6% \n    7.7% \n    7.7% \n  \n  \n    Packaging code \n    5.1% \n    46.2% \n    25.6% \n    17.9% \n    5.1% \n    0% \n  \n  \n    Standard directory structure \n    12.8% \n    20.5% \n    17.9% \n    17.9% \n    20.5% \n    10.3% \n  \n  \n    Unit testing \n    30.8% \n    10.3% \n    12.8% \n    33.3% \n    10.3% \n    2.6% \n  \n  \n    Use open source software \n    7.7% \n    0% \n    2.6% \n    10.3% \n    20.5% \n    59% \n  \n  \n    Version control \n    5.1% \n    23.1% \n    5.1% \n    33.3% \n    20.5% \n    12.8% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    23.1% \n    46.2% \n    12.8% \n    15.4% \n    2.6% \n    0% \n  \n  \n    Code comments \n    2.6% \n    0% \n    7.7% \n    10.3% \n    25.6% \n    53.8% \n  \n  \n    Data or assumptions registers \n    25.6% \n    53.8% \n    7.7% \n    5.1% \n    7.7% \n    0% \n  \n  \n    Desk notes \n    23.1% \n    17.9% \n    15.4% \n    28.2% \n    12.8% \n    2.6% \n  \n  \n    Documentation for each function or class \n    7.7% \n    28.2% \n    17.9% \n    12.8% \n    28.2% \n    5.1% \n  \n  \n    Flow charts \n    5.1% \n    46.2% \n    20.5% \n    25.6% \n    2.6% \n    0% \n  \n  \n    README files \n    5.1% \n    20.5% \n    17.9% \n    15.4% \n    28.2% \n    12.8% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    25.6% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what dependency management is \n    20.5% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    12.8% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what continuous integration is \n    33.3% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    2.6% \n  \n  \n    No \n    69.2% \n  \n  \n    I don't know what reproducible workflows are \n    28.2% \n  \n\n\n\na Sample size = 39"
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#rap-knowledge-and-opinions",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#rap-knowledge-and-opinions",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    69.2% \n  \n  \n    I don't know what a RAP champion is \n    15.4% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    10.3% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    2.6% \n  \n  \n    I know who the RAP champion in my department is \n    2.6% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    25% \n    16.7% \n    33.3% \n    25% \n    0% \n  \n  \n    I feel confident implementing RAP in my work \n    16.7% \n    33.3% \n    16.7% \n    33.3% \n    0% \n  \n  \n    I feel supported to implement RAP in my work \n    16.7% \n    33.3% \n    16.7% \n    33.3% \n    0% \n  \n  \n    I know where to find resources to help me implement RAP \n    25% \n    41.7% \n    8.3% \n    16.7% \n    8.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    25% \n    0% \n    25% \n    50% \n    0% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    0% \n    25% \n    50% \n    25% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.3% \n    8.3% \n    25% \n    58.3% \n    0% \n  \n\n\n\na Sample size = 12"
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#rap-scores",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#rap-scores",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    79.5% \n  \n  \n    Team open source code \n    Basic \n    15.4% \n  \n  \n    Version control \n    Basic \n    33.3% \n  \n  \n    Peer review \n    Basic \n    17.9% \n  \n  \n    AQUA book guidance \n    Basic \n    2.6% \n  \n  \n    Documentation \n    Basic \n    35.9% \n  \n  \n    Functions \n    Advanced \n    59% \n  \n  \n    Unit testing \n    Advanced \n    12.8% \n  \n  \n    Function documentation \n    Advanced \n    33.3% \n  \n  \n    Code packages \n    Advanced \n    5.1% \n  \n  \n    Follow code style guidelines \n    Advanced \n    25.6% \n  \n  \n    Continuous integration \n    Advanced \n    12.8% \n  \n  \n    Dependency management \n    Advanced \n    25.6% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    7.7% \n  \n  \n    1 \n    41% \n  \n  \n    2 \n    25.6% \n  \n  \n    3 \n    12.8% \n  \n  \n    4 \n    10.3% \n  \n  \n    5 \n    2.6% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.1% \n  \n  \n    1 \n    28.2% \n  \n  \n    2 \n    20.5% \n  \n  \n    3 \n    12.8% \n  \n  \n    4 \n    10.3% \n  \n  \n    5 \n    5.1% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 39"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#draft-notice",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#draft-notice",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    15% \n  \n  \n    Rarely \n    10% \n  \n  \n    Sometimes \n    30% \n  \n  \n    Regularly \n    30% \n  \n  \n    All the time \n    15% \n  \n\n\n\na Sample size = 20\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    75% \n    25% \n  \n  \n    Data cleaning \n    94.4% \n    5.6% \n  \n  \n    Data linking \n    87.5% \n    12.5% \n  \n  \n    Data transfer / migration \n    63.6% \n    36.4% \n  \n  \n    Data visualisation \n    61.1% \n    38.9% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    69.2% \n    30.8% \n  \n  \n    Quality assurance \n    55.6% \n    44.4% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    75% \n    25% \n  \n  \n    Java / Scala \n    0% \n    80% \n    20% \n  \n  \n    Javascript / Typescript \n    15% \n    70% \n    15% \n  \n  \n    Matlab \n    40% \n    50% \n    10% \n  \n  \n    Python \n    95% \n    0% \n    5% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SAS \n    60% \n    35% \n    5% \n  \n  \n    SPSS \n    50% \n    30% \n    20% \n  \n  \n    SQL \n    90% \n    10% \n    0% \n  \n  \n    Stata \n    40% \n    50% \n    10% \n  \n  \n    VBA \n    80% \n    20% \n    0% \n  \n\n\n\na Sample size = 20\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    10% \n    0% \n    90% \n  \n  \n    Java / Scala \n    5% \n    0% \n    95% \n  \n  \n    Javascript / Typescript \n    5% \n    0% \n    95% \n  \n  \n    Matlab \n    10% \n    0% \n    90% \n  \n  \n    Python \n    50% \n    0% \n    50% \n  \n  \n    R \n    70% \n    0% \n    30% \n  \n  \n    SAS \n    15% \n    0% \n    85% \n  \n  \n    SPSS \n    45% \n    0% \n    55% \n  \n  \n    SQL \n    85% \n    0% \n    15% \n  \n  \n    Stata \n    15% \n    0% \n    85% \n  \n  \n    VBA \n    50% \n    0% \n    50% \n  \n\n\n\na Sample size = 20\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    0% \n    0% \n    100% \n  \n  \n    Java / Scala \n    0% \n    0% \n    100% \n  \n  \n    Javascript / Typescript \n    66.7% \n    33.3% \n    0% \n  \n  \n    Matlab \n    77.8% \n    11.1% \n    11.1% \n  \n  \n    Python \n    47.4% \n    52.6% \n    0% \n  \n  \n    R \n    30% \n    70% \n    0% \n  \n  \n    SAS \n    76.9% \n    15.4% \n    7.7% \n  \n  \n    SPSS \n    35.7% \n    35.7% \n    28.6% \n  \n  \n    SQL \n    10.5% \n    84.2% \n    5.3% \n  \n  \n    Stata \n    66.7% \n    22.2% \n    11.1% \n  \n  \n    VBA \n    41.2% \n    52.9% \n    5.9%"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-capability",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-capability",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    12.5% \n  \n  \n    No change \n    6.2% \n  \n  \n    Slightly better \n    37.5% \n  \n  \n    Significantly better \n    43.8% \n  \n\n\n\na Sample size = 16\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    5.9% \n  \n  \n    In education \n    70.6% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    11.8% \n  \n  \n    Self-taught \n    11.8% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 17"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    35.3% \n    5.9% \n    0% \n    17.6% \n    29.4% \n    11.8% \n  \n  \n    Automated data quality assurance \n    5.9% \n    11.8% \n    23.5% \n    35.3% \n    23.5% \n    0% \n  \n  \n    Code review \n    0% \n    0% \n    5.9% \n    11.8% \n    52.9% \n    29.4% \n  \n  \n    Coding guidelines / Style guides \n    5.9% \n    5.9% \n    11.8% \n    17.6% \n    41.2% \n    17.6% \n  \n  \n    Functions \n    0% \n    5.9% \n    5.9% \n    11.8% \n    41.2% \n    35.3% \n  \n  \n    Open source own code \n    23.5% \n    47.1% \n    11.8% \n    5.9% \n    5.9% \n    5.9% \n  \n  \n    Packaging code \n    5.9% \n    41.2% \n    17.6% \n    29.4% \n    5.9% \n    0% \n  \n  \n    Standard directory structure \n    35.3% \n    17.6% \n    5.9% \n    0% \n    29.4% \n    11.8% \n  \n  \n    Unit testing \n    41.2% \n    5.9% \n    5.9% \n    23.5% \n    23.5% \n    0% \n  \n  \n    Use open source software \n    5.9% \n    0% \n    5.9% \n    11.8% \n    29.4% \n    47.1% \n  \n  \n    Version control \n    5.9% \n    23.5% \n    5.9% \n    5.9% \n    23.5% \n    35.3% \n  \n\n\n\na Sample size = 17\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    11.8% \n    11.8% \n    23.5% \n    23.5% \n    23.5% \n    5.9% \n  \n  \n    Code comments \n    0% \n    0% \n    0% \n    5.9% \n    17.6% \n    76.5% \n  \n  \n    Data or assumptions registers \n    0% \n    11.8% \n    5.9% \n    17.6% \n    47.1% \n    17.6% \n  \n  \n    Desk notes \n    23.5% \n    5.9% \n    11.8% \n    5.9% \n    29.4% \n    23.5% \n  \n  \n    Documentation for each function or class \n    11.8% \n    11.8% \n    17.6% \n    11.8% \n    11.8% \n    35.3% \n  \n  \n    Flow charts \n    5.9% \n    29.4% \n    11.8% \n    17.6% \n    29.4% \n    5.9% \n  \n  \n    README files \n    5.9% \n    17.6% \n    0% \n    29.4% \n    29.4% \n    17.6% \n  \n\n\n\na Sample size = 17\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    35.3% \n  \n  \n    No \n    17.6% \n  \n  \n    I don't know what dependency management is \n    47.1% \n  \n\n\n\na Sample size = 17\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    17.6% \n  \n  \n    No \n    35.3% \n  \n  \n    I don't know what continuous integration is \n    47.1% \n  \n\n\n\na Sample size = 17\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    41.2% \n  \n  \n    I don't know what reproducible workflows are \n    58.8% \n  \n\n\n\na Sample size = 17"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    5% \n  \n  \n    I don't know what a RAP champion is \n    20% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    45% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    30% \n  \n\n\n\na Sample size = 20\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    10.5% \n    26.3% \n    15.8% \n    31.6% \n    15.8% \n  \n  \n    I feel confident implementing RAP in my work \n    5.3% \n    26.3% \n    26.3% \n    21.1% \n    21.1% \n  \n  \n    I feel supported to implement RAP in my work \n    5.3% \n    15.8% \n    10.5% \n    57.9% \n    10.5% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.3% \n    26.3% \n    15.8% \n    36.8% \n    15.8% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.3% \n    21.1% \n    15.8% \n    36.8% \n    21.1% \n  \n  \n    I think it is important to implement RAP in my work \n    5.3% \n    10.5% \n    10.5% \n    42.1% \n    31.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.3% \n    10.5% \n    15.8% \n    36.8% \n    31.6% \n  \n\n\n\na Sample size = 19"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    76.5% \n  \n  \n    Team open source code \n    Basic \n    11.8% \n  \n  \n    Version control \n    Basic \n    58.8% \n  \n  \n    Peer review \n    Basic \n    82.4% \n  \n  \n    AQUA book guidance \n    Basic \n    41.2% \n  \n  \n    Documentation \n    Basic \n    41.2% \n  \n  \n    Functions \n    Advanced \n    76.5% \n  \n  \n    Unit testing \n    Advanced \n    23.5% \n  \n  \n    Function documentation \n    Advanced \n    47.1% \n  \n  \n    Code packages \n    Advanced \n    5.9% \n  \n  \n    Follow code style guidelines \n    Advanced \n    58.8% \n  \n  \n    Continuous integration \n    Advanced \n    17.6% \n  \n  \n    Dependency management \n    Advanced \n    35.3% \n  \n\n\n\na Sample size = 17\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    0% \n  \n  \n    1 \n    23.5% \n  \n  \n    2 \n    11.8% \n  \n  \n    3 \n    23.5% \n  \n  \n    4 \n    11.8% \n  \n  \n    5 \n    29.4% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 17\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.5% \n  \n  \n    1 \n    17.6% \n  \n  \n    2 \n    5.9% \n  \n  \n    3 \n    11.8% \n  \n  \n    4 \n    11.8% \n  \n  \n    5 \n    23.5% \n  \n  \n    6 \n    5.9% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 17"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#draft-notice",
    "href": "departments/department-for-digital-culture-media-and-sport.html#draft-notice",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#coding-frequency-and-tools",
    "href": "departments/department-for-digital-culture-media-and-sport.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    28% \n  \n  \n    Rarely \n    16% \n  \n  \n    Sometimes \n    28% \n  \n  \n    Regularly \n    20% \n  \n  \n    All the time \n    8% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    52% \n    48% \n  \n  \n    Data cleaning \n    57.9% \n    42.1% \n  \n  \n    Data linking \n    75% \n    25% \n  \n  \n    Data transfer / migration \n    45.5% \n    54.5% \n  \n  \n    Data visualisation \n    47.8% \n    52.2% \n  \n  \n    Machine learning \n    80% \n    20% \n  \n  \n    Modelling \n    56.2% \n    43.8% \n  \n  \n    Quality assurance \n    32% \n    68% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4% \n    76% \n    20% \n  \n  \n    Java / Scala \n    8% \n    72% \n    20% \n  \n  \n    Javascript / Typescript \n    8% \n    72% \n    20% \n  \n  \n    Matlab \n    0% \n    76% \n    24% \n  \n  \n    Python \n    76% \n    20% \n    4% \n  \n  \n    R \n    88% \n    12% \n    0% \n  \n  \n    SAS \n    4% \n    68% \n    28% \n  \n  \n    SPSS \n    40% \n    48% \n    12% \n  \n  \n    SQL \n    32% \n    48% \n    20% \n  \n  \n    Stata \n    12% \n    64% \n    24% \n  \n  \n    VBA \n    44% \n    48% \n    8% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    12% \n    4% \n    84% \n  \n  \n    Java / Scala \n    0% \n    4% \n    96% \n  \n  \n    Javascript / Typescript \n    0% \n    4% \n    96% \n  \n  \n    Matlab \n    8% \n    8% \n    84% \n  \n  \n    Python \n    48% \n    4% \n    48% \n  \n  \n    R \n    68% \n    8% \n    24% \n  \n  \n    SAS \n    8% \n    4% \n    88% \n  \n  \n    SPSS \n    28% \n    4% \n    68% \n  \n  \n    SQL \n    48% \n    4% \n    48% \n  \n  \n    Stata \n    16% \n    4% \n    80% \n  \n  \n    VBA \n    28% \n    4% \n    68% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    25% \n    0% \n    75% \n  \n  \n    Java / Scala \n    100% \n    0% \n    0% \n  \n  \n    Javascript / Typescript \n    100% \n    0% \n    0% \n  \n  \n    Matlab \n    0% \n    0% \n    100% \n  \n  \n    Python \n    36.8% \n    63.2% \n    0% \n  \n  \n    R \n    22.7% \n    77.3% \n    0% \n  \n  \n    SAS \n    33.3% \n    0% \n    66.7% \n  \n  \n    SPSS \n    41.7% \n    41.7% \n    16.7% \n  \n  \n    SQL \n    20% \n    33.3% \n    46.7% \n  \n  \n    Stata \n    20% \n    40% \n    40% \n  \n  \n    VBA \n    36.4% \n    63.6% \n    0%"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#coding-capability",
    "href": "departments/department-for-digital-culture-media-and-sport.html#coding-capability",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    41.2% \n  \n  \n    No change \n    5.9% \n  \n  \n    Slightly better \n    47.1% \n  \n  \n    Significantly better \n    5.9% \n  \n\n\n\na Sample size = 17\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    20% \n  \n  \n    In education \n    60% \n  \n  \n    In private sector employment \n    10% \n  \n  \n    In public sector employment \n    5% \n  \n  \n    Self-taught \n    5% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 20"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#coding-practices",
    "href": "departments/department-for-digital-culture-media-and-sport.html#coding-practices",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    22.2% \n    22.2% \n    16.7% \n    27.8% \n    5.6% \n    5.6% \n  \n  \n    Automated data quality assurance \n    16.7% \n    44.4% \n    16.7% \n    16.7% \n    0% \n    5.6% \n  \n  \n    Code review \n    0% \n    5.6% \n    11.1% \n    27.8% \n    22.2% \n    33.3% \n  \n  \n    Coding guidelines / Style guides \n    16.7% \n    22.2% \n    0% \n    27.8% \n    11.1% \n    22.2% \n  \n  \n    Functions \n    16.7% \n    16.7% \n    11.1% \n    16.7% \n    11.1% \n    27.8% \n  \n  \n    Open source own code \n    22.2% \n    61.1% \n    11.1% \n    5.6% \n    0% \n    0% \n  \n  \n    Packaging code \n    33.3% \n    50% \n    0% \n    0% \n    5.6% \n    11.1% \n  \n  \n    Standard directory structure \n    38.9% \n    22.2% \n    16.7% \n    0% \n    11.1% \n    11.1% \n  \n  \n    Unit testing \n    50% \n    16.7% \n    16.7% \n    5.6% \n    0% \n    11.1% \n  \n  \n    Use open source software \n    11.1% \n    11.1% \n    5.6% \n    11.1% \n    27.8% \n    33.3% \n  \n  \n    Version control \n    11.1% \n    61.1% \n    16.7% \n    5.6% \n    0% \n    5.6% \n  \n\n\n\na Sample size = 18\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    27.8% \n    11.1% \n    11.1% \n    27.8% \n    16.7% \n    5.6% \n  \n  \n    Code comments \n    5.6% \n    5.6% \n    0% \n    5.6% \n    27.8% \n    55.6% \n  \n  \n    Data or assumptions registers \n    16.7% \n    16.7% \n    16.7% \n    22.2% \n    11.1% \n    16.7% \n  \n  \n    Desk notes \n    33.3% \n    22.2% \n    5.6% \n    16.7% \n    11.1% \n    11.1% \n  \n  \n    Documentation for each function or class \n    27.8% \n    27.8% \n    16.7% \n    16.7% \n    5.6% \n    5.6% \n  \n  \n    Flow charts \n    11.1% \n    38.9% \n    22.2% \n    27.8% \n    0% \n    0% \n  \n  \n    README files \n    16.7% \n    33.3% \n    16.7% \n    16.7% \n    11.1% \n    5.6% \n  \n\n\n\na Sample size = 18\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    5.6% \n  \n  \n    No \n    33.3% \n  \n  \n    I don't know what dependency management is \n    61.1% \n  \n\n\n\na Sample size = 18\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    61.1% \n  \n  \n    I don't know what continuous integration is \n    38.9% \n  \n\n\n\na Sample size = 18\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    38.9% \n  \n  \n    I don't know what reproducible workflows are \n    61.1% \n  \n\n\n\na Sample size = 18"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-digital-culture-media-and-sport.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    40% \n  \n  \n    I don't know what a RAP champion is \n    28% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    24% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    8% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    6.7% \n    46.7% \n    33.3% \n    0% \n    13.3% \n  \n  \n    I feel confident implementing RAP in my work \n    13.3% \n    20% \n    26.7% \n    20% \n    20% \n  \n  \n    I feel supported to implement RAP in my work \n    6.7% \n    33.3% \n    40% \n    13.3% \n    6.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    13.3% \n    40% \n    26.7% \n    13.3% \n    6.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    0% \n    13.3% \n    40% \n    26.7% \n    20% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    6.7% \n    13.3% \n    46.7% \n    33.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    6.7% \n    26.7% \n    40% \n    20% \n    6.7% \n  \n\n\n\na Sample size = 15"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#rap-scores",
    "href": "departments/department-for-digital-culture-media-and-sport.html#rap-scores",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    61.1% \n  \n  \n    Team open source code \n    Basic \n    0% \n  \n  \n    Version control \n    Basic \n    5.6% \n  \n  \n    Peer review \n    Basic \n    55.6% \n  \n  \n    AQUA book guidance \n    Basic \n    11.1% \n  \n  \n    Documentation \n    Basic \n    16.7% \n  \n  \n    Functions \n    Advanced \n    38.9% \n  \n  \n    Unit testing \n    Advanced \n    11.1% \n  \n  \n    Function documentation \n    Advanced \n    11.1% \n  \n  \n    Code packages \n    Advanced \n    16.7% \n  \n  \n    Follow code style guidelines \n    Advanced \n    33.3% \n  \n  \n    Continuous integration \n    Advanced \n    0% \n  \n  \n    Dependency management \n    Advanced \n    5.6% \n  \n\n\n\na Sample size = 18\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    16.7% \n  \n  \n    1 \n    38.9% \n  \n  \n    2 \n    27.8% \n  \n  \n    3 \n    11.1% \n  \n  \n    4 \n    5.6% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 18\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    44.4% \n  \n  \n    1 \n    27.8% \n  \n  \n    2 \n    11.1% \n  \n  \n    3 \n    5.6% \n  \n  \n    4 \n    5.6% \n  \n  \n    5 \n    5.6% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 18"
  },
  {
    "objectID": "departments/department-for-education.html#draft-notice",
    "href": "departments/department-for-education.html#draft-notice",
    "title": "Department summary: Department for Education",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-for-education.html#coding-frequency-and-tools",
    "href": "departments/department-for-education.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Education",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    4.8% \n  \n  \n    Rarely \n    7.1% \n  \n  \n    Sometimes \n    9.5% \n  \n  \n    Regularly \n    42.9% \n  \n  \n    All the time \n    35.7% \n  \n\n\n\na Sample size = 42\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    90.2% \n    9.8% \n  \n  \n    Data cleaning \n    92.3% \n    7.7% \n  \n  \n    Data linking \n    94.1% \n    5.9% \n  \n  \n    Data transfer / migration \n    78.3% \n    21.7% \n  \n  \n    Data visualisation \n    81.6% \n    18.4% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    79.2% \n    20.8% \n  \n  \n    Quality assurance \n    80.5% \n    19.5% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.1% \n    66.7% \n    26.2% \n  \n  \n    Java / Scala \n    4.8% \n    81% \n    14.3% \n  \n  \n    Javascript / Typescript \n    2.4% \n    85.7% \n    11.9% \n  \n  \n    Matlab \n    7.1% \n    61.9% \n    31% \n  \n  \n    Python \n    57.1% \n    35.7% \n    7.1% \n  \n  \n    R \n    97.6% \n    0% \n    2.4% \n  \n  \n    SAS \n    9.5% \n    66.7% \n    23.8% \n  \n  \n    SPSS \n    52.4% \n    35.7% \n    11.9% \n  \n  \n    SQL \n    85.7% \n    9.5% \n    4.8% \n  \n  \n    Stata \n    23.8% \n    61.9% \n    14.3% \n  \n  \n    VBA \n    66.7% \n    28.6% \n    4.8% \n  \n\n\n\na Sample size = 42\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.1% \n    14.3% \n    78.6% \n  \n  \n    Java / Scala \n    2.4% \n    11.9% \n    85.7% \n  \n  \n    Javascript / Typescript \n    7.1% \n    14.3% \n    78.6% \n  \n  \n    Matlab \n    11.9% \n    16.7% \n    71.4% \n  \n  \n    Python \n    28.6% \n    7.1% \n    64.3% \n  \n  \n    R \n    83.3% \n    0% \n    16.7% \n  \n  \n    SAS \n    28.6% \n    4.8% \n    66.7% \n  \n  \n    SPSS \n    42.9% \n    9.5% \n    47.6% \n  \n  \n    SQL \n    76.2% \n    0% \n    23.8% \n  \n  \n    Stata \n    16.7% \n    7.1% \n    76.2% \n  \n  \n    VBA \n    26.2% \n    7.1% \n    66.7% \n  \n\n\n\na Sample size = 42\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    40% \n    20% \n    40% \n  \n  \n    Java / Scala \n    66.7% \n    0% \n    33.3% \n  \n  \n    Javascript / Typescript \n    0% \n    33.3% \n    66.7% \n  \n  \n    Matlab \n    37.5% \n    0% \n    62.5% \n  \n  \n    Python \n    53.8% \n    38.5% \n    7.7% \n  \n  \n    R \n    16.7% \n    81% \n    2.4% \n  \n  \n    SAS \n    14.3% \n    14.3% \n    71.4% \n  \n  \n    SPSS \n    30.8% \n    53.8% \n    15.4% \n  \n  \n    SQL \n    13.5% \n    83.8% \n    2.7% \n  \n  \n    Stata \n    46.2% \n    30.8% \n    23.1% \n  \n  \n    VBA \n    62.1% \n    34.5% \n    3.4%"
  },
  {
    "objectID": "departments/department-for-education.html#coding-capability",
    "href": "departments/department-for-education.html#coding-capability",
    "title": "Department summary: Department for Education",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    2.8% \n  \n  \n    Slightly worse \n    11.1% \n  \n  \n    No change \n    11.1% \n  \n  \n    Slightly better \n    41.7% \n  \n  \n    Significantly better \n    33.3% \n  \n\n\n\na Sample size = 36\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    14.3% \n  \n  \n    In education \n    54.8% \n  \n  \n    In private sector employment \n    4.8% \n  \n  \n    In public sector employment \n    9.5% \n  \n  \n    Self-taught \n    16.7% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 42"
  },
  {
    "objectID": "departments/department-for-education.html#coding-practices",
    "href": "departments/department-for-education.html#coding-practices",
    "title": "Department summary: Department for Education",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    22.5% \n    10% \n    2.5% \n    25% \n    25% \n    15% \n  \n  \n    Automated data quality assurance \n    5% \n    10% \n    15% \n    32.5% \n    30% \n    7.5% \n  \n  \n    Code review \n    0% \n    0% \n    10% \n    20% \n    35% \n    35% \n  \n  \n    Coding guidelines / Style guides \n    7.5% \n    10% \n    0% \n    25% \n    32.5% \n    25% \n  \n  \n    Functions \n    2.5% \n    10% \n    22.5% \n    10% \n    27.5% \n    27.5% \n  \n  \n    Open source own code \n    22.5% \n    42.5% \n    15% \n    2.5% \n    12.5% \n    5% \n  \n  \n    Packaging code \n    12.5% \n    47.5% \n    17.5% \n    7.5% \n    7.5% \n    7.5% \n  \n  \n    Standard directory structure \n    20% \n    17.5% \n    7.5% \n    17.5% \n    12.5% \n    25% \n  \n  \n    Unit testing \n    30% \n    15% \n    12.5% \n    27.5% \n    7.5% \n    7.5% \n  \n  \n    Use open source software \n    5% \n    12.5% \n    2.5% \n    5% \n    25% \n    50% \n  \n  \n    Version control \n    0% \n    25% \n    10% \n    17.5% \n    20% \n    27.5% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    10% \n    10% \n    15% \n    32.5% \n    17.5% \n    15% \n  \n  \n    Code comments \n    0% \n    5% \n    0% \n    5% \n    17.5% \n    72.5% \n  \n  \n    Data or assumptions registers \n    5% \n    5% \n    12.5% \n    25% \n    27.5% \n    25% \n  \n  \n    Desk notes \n    25% \n    25% \n    7.5% \n    20% \n    7.5% \n    15% \n  \n  \n    Documentation for each function or class \n    12.5% \n    32.5% \n    12.5% \n    17.5% \n    15% \n    10% \n  \n  \n    Flow charts \n    5% \n    27.5% \n    35% \n    25% \n    5% \n    2.5% \n  \n  \n    README files \n    2.5% \n    22.5% \n    15% \n    27.5% \n    12.5% \n    20% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    32.5% \n  \n  \n    No \n    32.5% \n  \n  \n    I don't know what dependency management is \n    35% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15% \n  \n  \n    No \n    27.5% \n  \n  \n    I don't know what continuous integration is \n    57.5% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    65% \n  \n  \n    I don't know what reproducible workflows are \n    35% \n  \n\n\n\na Sample size = 40"
  },
  {
    "objectID": "departments/department-for-education.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-education.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Education",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    19.5% \n  \n  \n    I don't know what a RAP champion is \n    24.4% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    39% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    17.1% \n  \n\n\n\na Sample size = 41\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.7% \n    14.7% \n    20.6% \n    23.5% \n    26.5% \n  \n  \n    I feel confident implementing RAP in my work \n    8.8% \n    17.6% \n    20.6% \n    35.3% \n    17.6% \n  \n  \n    I feel supported to implement RAP in my work \n    8.8% \n    11.8% \n    35.3% \n    17.6% \n    26.5% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.9% \n    20.6% \n    26.5% \n    23.5% \n    23.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    14.7% \n    5.9% \n    23.5% \n    26.5% \n    29.4% \n  \n  \n    I think it is important to implement RAP in my work \n    8.8% \n    5.9% \n    23.5% \n    20.6% \n    41.2% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.8% \n    11.8% \n    17.6% \n    38.2% \n    23.5% \n  \n\n\n\na Sample size = 34"
  },
  {
    "objectID": "departments/department-for-education.html#rap-scores",
    "href": "departments/department-for-education.html#rap-scores",
    "title": "Department summary: Department for Education",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    75% \n  \n  \n    Team open source code \n    Basic \n    17.5% \n  \n  \n    Version control \n    Basic \n    47.5% \n  \n  \n    Peer review \n    Basic \n    70% \n  \n  \n    AQUA book guidance \n    Basic \n    40% \n  \n  \n    Documentation \n    Basic \n    32.5% \n  \n  \n    Functions \n    Advanced \n    55% \n  \n  \n    Unit testing \n    Advanced \n    15% \n  \n  \n    Function documentation \n    Advanced \n    25% \n  \n  \n    Code packages \n    Advanced \n    15% \n  \n  \n    Follow code style guidelines \n    Advanced \n    57.5% \n  \n  \n    Continuous integration \n    Advanced \n    15% \n  \n  \n    Dependency management \n    Advanced \n    32.5% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    5% \n  \n  \n    1 \n    27.5% \n  \n  \n    2 \n    15% \n  \n  \n    3 \n    15% \n  \n  \n    4 \n    15% \n  \n  \n    5 \n    15% \n  \n  \n    6 \n    7.5% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    30% \n  \n  \n    1 \n    17.5% \n  \n  \n    2 \n    15% \n  \n  \n    3 \n    7.5% \n  \n  \n    4 \n    15% \n  \n  \n    5 \n    7.5% \n  \n  \n    6 \n    5% \n  \n  \n    7 \n    2.5% \n  \n\n\n\na Sample size = 40"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#draft-notice",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#draft-notice",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    22.9% \n  \n  \n    Rarely \n    11.4% \n  \n  \n    Sometimes \n    11.4% \n  \n  \n    Regularly \n    31.4% \n  \n  \n    All the time \n    22.9% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    79.3% \n    20.7% \n  \n  \n    Data cleaning \n    77.8% \n    22.2% \n  \n  \n    Data linking \n    76.5% \n    23.5% \n  \n  \n    Data transfer / migration \n    80% \n    20% \n  \n  \n    Data visualisation \n    76.7% \n    23.3% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    82.4% \n    17.6% \n  \n  \n    Quality assurance \n    73.1% \n    26.9% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.7% \n    71.4% \n    22.9% \n  \n  \n    Java / Scala \n    17.1% \n    62.9% \n    20% \n  \n  \n    Javascript / Typescript \n    14.3% \n    57.1% \n    28.6% \n  \n  \n    Matlab \n    8.6% \n    45.7% \n    45.7% \n  \n  \n    Python \n    60% \n    31.4% \n    8.6% \n  \n  \n    R \n    91.4% \n    8.6% \n    0% \n  \n  \n    SAS \n    11.4% \n    65.7% \n    22.9% \n  \n  \n    SPSS \n    25.7% \n    57.1% \n    17.1% \n  \n  \n    SQL \n    54.3% \n    34.3% \n    11.4% \n  \n  \n    Stata \n    22.9% \n    57.1% \n    20% \n  \n  \n    VBA \n    48.6% \n    42.9% \n    8.6% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    11.4% \n    8.6% \n    80% \n  \n  \n    Java / Scala \n    5.7% \n    14.3% \n    80% \n  \n  \n    Javascript / Typescript \n    8.6% \n    11.4% \n    80% \n  \n  \n    Matlab \n    17.1% \n    11.4% \n    71.4% \n  \n  \n    Python \n    45.7% \n    8.6% \n    45.7% \n  \n  \n    R \n    80% \n    0% \n    20% \n  \n  \n    SAS \n    2.9% \n    14.3% \n    82.9% \n  \n  \n    SPSS \n    14.3% \n    11.4% \n    74.3% \n  \n  \n    SQL \n    51.4% \n    8.6% \n    40% \n  \n  \n    Stata \n    5.7% \n    11.4% \n    82.9% \n  \n  \n    VBA \n    20% \n    14.3% \n    65.7% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    20% \n    20% \n    60% \n  \n  \n    Java / Scala \n    75% \n    0% \n    25% \n  \n  \n    Javascript / Typescript \n    50% \n    33.3% \n    16.7% \n  \n  \n    Matlab \n    25% \n    12.5% \n    62.5% \n  \n  \n    Python \n    30.4% \n    60.9% \n    8.7% \n  \n  \n    R \n    15.2% \n    81.8% \n    3% \n  \n  \n    SAS \n    80% \n    0% \n    20% \n  \n  \n    SPSS \n    50% \n    40% \n    10% \n  \n  \n    SQL \n    21.7% \n    60.9% \n    17.4% \n  \n  \n    Stata \n    75% \n    25% \n    0% \n  \n  \n    VBA \n    61.1% \n    33.3% \n    5.6%"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-capability",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-capability",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    13.3% \n  \n  \n    Slightly worse \n    13.3% \n  \n  \n    No change \n    6.7% \n  \n  \n    Slightly better \n    46.7% \n  \n  \n    Significantly better \n    20% \n  \n\n\n\na Sample size = 30\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    6.5% \n  \n  \n    In education \n    64.5% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    3.2% \n  \n  \n    Self-taught \n    22.6% \n  \n  \n    Other \n    3.2% \n  \n\n\n\na Sample size = 31"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    29.6% \n    14.8% \n    18.5% \n    18.5% \n    18.5% \n    0% \n  \n  \n    Automated data quality assurance \n    3.7% \n    22.2% \n    18.5% \n    29.6% \n    22.2% \n    3.7% \n  \n  \n    Code review \n    0% \n    14.8% \n    14.8% \n    25.9% \n    33.3% \n    11.1% \n  \n  \n    Coding guidelines / Style guides \n    3.7% \n    18.5% \n    7.4% \n    18.5% \n    37% \n    14.8% \n  \n  \n    Functions \n    0% \n    7.4% \n    11.1% \n    14.8% \n    33.3% \n    33.3% \n  \n  \n    Open source own code \n    0% \n    37% \n    14.8% \n    25.9% \n    18.5% \n    3.7% \n  \n  \n    Packaging code \n    7.4% \n    29.6% \n    22.2% \n    22.2% \n    18.5% \n    0% \n  \n  \n    Standard directory structure \n    25.9% \n    3.7% \n    14.8% \n    18.5% \n    29.6% \n    7.4% \n  \n  \n    Unit testing \n    22.2% \n    14.8% \n    14.8% \n    29.6% \n    11.1% \n    7.4% \n  \n  \n    Use open source software \n    3.7% \n    3.7% \n    0% \n    18.5% \n    18.5% \n    55.6% \n  \n  \n    Version control \n    3.7% \n    18.5% \n    7.4% \n    7.4% \n    40.7% \n    22.2% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    18.5% \n    44.4% \n    7.4% \n    11.1% \n    14.8% \n    3.7% \n  \n  \n    Code comments \n    0% \n    3.7% \n    3.7% \n    3.7% \n    33.3% \n    55.6% \n  \n  \n    Data or assumptions registers \n    22.2% \n    40.7% \n    7.4% \n    14.8% \n    14.8% \n    0% \n  \n  \n    Desk notes \n    18.5% \n    7.4% \n    18.5% \n    29.6% \n    25.9% \n    0% \n  \n  \n    Documentation for each function or class \n    3.7% \n    22.2% \n    22.2% \n    7.4% \n    29.6% \n    14.8% \n  \n  \n    Flow charts \n    0% \n    55.6% \n    14.8% \n    25.9% \n    3.7% \n    0% \n  \n  \n    README files \n    0% \n    25.9% \n    3.7% \n    14.8% \n    44.4% \n    11.1% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    33.3% \n  \n  \n    No \n    37% \n  \n  \n    I don't know what dependency management is \n    29.6% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    18.5% \n  \n  \n    No \n    48.1% \n  \n  \n    I don't know what continuous integration is \n    33.3% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    7.4% \n  \n  \n    No \n    59.3% \n  \n  \n    I don't know what reproducible workflows are \n    33.3% \n  \n\n\n\na Sample size = 27"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    14.3% \n  \n  \n    I don't know what a RAP champion is \n    17.1% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    37.1% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.7% \n  \n  \n    I know who the RAP champion in my department is \n    25.7% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    10% \n    20% \n    20% \n    43.3% \n    6.7% \n  \n  \n    I feel confident implementing RAP in my work \n    10% \n    16.7% \n    23.3% \n    33.3% \n    16.7% \n  \n  \n    I feel supported to implement RAP in my work \n    16.7% \n    20% \n    43.3% \n    16.7% \n    3.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    10% \n    30% \n    16.7% \n    40% \n    3.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    10% \n    6.7% \n    30% \n    46.7% \n    6.7% \n  \n  \n    I think it is important to implement RAP in my work \n    6.7% \n    6.7% \n    13.3% \n    40% \n    33.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    10% \n    10% \n    20% \n    53.3% \n    6.7% \n  \n\n\n\na Sample size = 30"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    74.1% \n  \n  \n    Team open source code \n    Basic \n    22.2% \n  \n  \n    Version control \n    Basic \n    63% \n  \n  \n    Peer review \n    Basic \n    44.4% \n  \n  \n    AQUA book guidance \n    Basic \n    18.5% \n  \n  \n    Documentation \n    Basic \n    51.9% \n  \n  \n    Functions \n    Advanced \n    66.7% \n  \n  \n    Unit testing \n    Advanced \n    18.5% \n  \n  \n    Function documentation \n    Advanced \n    44.4% \n  \n  \n    Code packages \n    Advanced \n    18.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    51.9% \n  \n  \n    Continuous integration \n    Advanced \n    18.5% \n  \n  \n    Dependency management \n    Advanced \n    33.3% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    11.1% \n  \n  \n    1 \n    18.5% \n  \n  \n    2 \n    11.1% \n  \n  \n    3 \n    22.2% \n  \n  \n    4 \n    22.2% \n  \n  \n    5 \n    11.1% \n  \n  \n    6 \n    3.7% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    11.1% \n  \n  \n    1 \n    14.8% \n  \n  \n    2 \n    25.9% \n  \n  \n    3 \n    22.2% \n  \n  \n    4 \n    14.8% \n  \n  \n    5 \n    7.4% \n  \n  \n    6 \n    3.7% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 27"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#draft-notice",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#draft-notice",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.9% \n  \n  \n    Rarely \n    10.4% \n  \n  \n    Sometimes \n    17% \n  \n  \n    Regularly \n    29.6% \n  \n  \n    All the time \n    34.1% \n  \n\n\n\na Sample size = 135\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    84.9% \n    15.1% \n  \n  \n    Data cleaning \n    81.1% \n    18.9% \n  \n  \n    Data linking \n    82% \n    18% \n  \n  \n    Data transfer / migration \n    68.6% \n    31.4% \n  \n  \n    Data visualisation \n    82.7% \n    17.3% \n  \n  \n    Machine learning \n    92.5% \n    7.5% \n  \n  \n    Modelling \n    87.4% \n    12.6% \n  \n  \n    Quality assurance \n    69.2% \n    30.8% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    16.3% \n    65.9% \n    17.8% \n  \n  \n    Java / Scala \n    15.6% \n    68.9% \n    15.6% \n  \n  \n    Javascript / Typescript \n    13.3% \n    68.1% \n    18.5% \n  \n  \n    Matlab \n    15.6% \n    50.4% \n    34.1% \n  \n  \n    Python \n    70.4% \n    23.7% \n    5.9% \n  \n  \n    R \n    92.6% \n    6.7% \n    0.7% \n  \n  \n    SAS \n    11.1% \n    75.6% \n    13.3% \n  \n  \n    SPSS \n    14.1% \n    71.1% \n    14.8% \n  \n  \n    SQL \n    57% \n    37% \n    5.9% \n  \n  \n    Stata \n    11.1% \n    72.6% \n    16.3% \n  \n  \n    VBA \n    34.1% \n    59.3% \n    6.7% \n  \n\n\n\na Sample size = 135\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    11.1% \n    4.4% \n    84.4% \n  \n  \n    Java / Scala \n    3.7% \n    6.7% \n    89.6% \n  \n  \n    Javascript / Typescript \n    8.1% \n    5.2% \n    86.7% \n  \n  \n    Matlab \n    23.7% \n    5.9% \n    70.4% \n  \n  \n    Python \n    39.3% \n    3.7% \n    57% \n  \n  \n    R \n    80.7% \n    1.5% \n    17.8% \n  \n  \n    SAS \n    7.4% \n    6.7% \n    85.9% \n  \n  \n    SPSS \n    20.7% \n    8.1% \n    71.1% \n  \n  \n    SQL \n    48.1% \n    4.4% \n    47.4% \n  \n  \n    Stata \n    7.4% \n    7.4% \n    85.2% \n  \n  \n    VBA \n    19.3% \n    8.9% \n    71.9% \n  \n\n\n\na Sample size = 135\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    48.3% \n    27.6% \n    24.1% \n  \n  \n    Java / Scala \n    79.2% \n    8.3% \n    12.5% \n  \n  \n    Javascript / Typescript \n    50% \n    31.8% \n    18.2% \n  \n  \n    Matlab \n    28.9% \n    17.8% \n    53.3% \n  \n  \n    Python \n    49% \n    42.3% \n    8.7% \n  \n  \n    R \n    14.8% \n    82.8% \n    2.3% \n  \n  \n    SAS \n    50% \n    25% \n    25% \n  \n  \n    SPSS \n    26.3% \n    23.7% \n    50% \n  \n  \n    SQL \n    26.1% \n    61.4% \n    12.5% \n  \n  \n    Stata \n    52.4% \n    19% \n    28.6% \n  \n  \n    VBA \n    46.9% \n    46.9% \n    6.1%"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-capability",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-capability",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7.3% \n  \n  \n    Slightly worse \n    13.8% \n  \n  \n    No change \n    12.8% \n  \n  \n    Slightly better \n    38.5% \n  \n  \n    Significantly better \n    27.5% \n  \n\n\n\na Sample size = 109\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    16.4% \n  \n  \n    In education \n    57% \n  \n  \n    In private sector employment \n    2.3% \n  \n  \n    In public sector employment \n    4.7% \n  \n  \n    Self-taught \n    17.2% \n  \n  \n    Other \n    2.3% \n  \n\n\n\na Sample size = 128"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-practices",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-practices",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    56.9% \n    13.8% \n    8.1% \n    11.4% \n    8.9% \n    0.8% \n  \n  \n    Automated data quality assurance \n    6.5% \n    19.5% \n    14.6% \n    34.1% \n    18.7% \n    6.5% \n  \n  \n    Code review \n    0% \n    15.4% \n    18.7% \n    35.8% \n    25.2% \n    4.9% \n  \n  \n    Coding guidelines / Style guides \n    4.9% \n    20.3% \n    6.5% \n    30.1% \n    26.8% \n    11.4% \n  \n  \n    Functions \n    2.4% \n    12.2% \n    8.9% \n    24.4% \n    29.3% \n    22.8% \n  \n  \n    Open source own code \n    4.1% \n    35.8% \n    14.6% \n    30.9% \n    8.9% \n    5.7% \n  \n  \n    Packaging code \n    7.3% \n    41.5% \n    23.6% \n    14.6% \n    10.6% \n    2.4% \n  \n  \n    Standard directory structure \n    17.1% \n    17.9% \n    12.2% \n    22% \n    22% \n    8.9% \n  \n  \n    Unit testing \n    24.4% \n    17.1% \n    10.6% \n    30.9% \n    12.2% \n    4.9% \n  \n  \n    Use open source software \n    4.1% \n    4.9% \n    5.7% \n    13% \n    20.3% \n    52% \n  \n  \n    Version control \n    6.5% \n    29.3% \n    8.9% \n    18.7% \n    22.8% \n    13.8% \n  \n\n\n\na Sample size = 123\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    17.9% \n    45.5% \n    10.6% \n    14.6% \n    5.7% \n    5.7% \n  \n  \n    Code comments \n    0.8% \n    4.9% \n    4.9% \n    11.4% \n    26% \n    52% \n  \n  \n    Data or assumptions registers \n    22% \n    48.8% \n    10.6% \n    11.4% \n    6.5% \n    0.8% \n  \n  \n    Desk notes \n    14.6% \n    17.9% \n    13% \n    30.1% \n    17.1% \n    7.3% \n  \n  \n    Documentation for each function or class \n    5.7% \n    27.6% \n    19.5% \n    16.3% \n    22% \n    8.9% \n  \n  \n    Flow charts \n    2.4% \n    48% \n    19.5% \n    22.8% \n    6.5% \n    0.8% \n  \n  \n    README files \n    2.4% \n    22% \n    11.4% \n    25.2% \n    26.8% \n    12.2% \n  \n\n\n\na Sample size = 123\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    26% \n  \n  \n    No \n    43.9% \n  \n  \n    I don't know what dependency management is \n    30.1% \n  \n\n\n\na Sample size = 123\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15.4% \n  \n  \n    No \n    45.5% \n  \n  \n    I don't know what continuous integration is \n    39% \n  \n\n\n\na Sample size = 123\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    5.7% \n  \n  \n    No \n    65.9% \n  \n  \n    I don't know what reproducible workflows are \n    28.5% \n  \n\n\n\na Sample size = 123"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    42.5% \n  \n  \n    I don't know what a RAP champion is \n    17.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    17.9% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    6% \n  \n  \n    I know who the RAP champion in my department is \n    15.7% \n  \n\n\n\na Sample size = 134\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.1% \n    19.2% \n    26.9% \n    32.1% \n    7.7% \n  \n  \n    I feel confident implementing RAP in my work \n    12.8% \n    20.5% \n    20.5% \n    33.3% \n    12.8% \n  \n  \n    I feel supported to implement RAP in my work \n    15.4% \n    25.6% \n    34.6% \n    21.8% \n    2.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    14.1% \n    35.9% \n    14.1% \n    28.2% \n    7.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    11.5% \n    6.4% \n    28.2% \n    38.5% \n    15.4% \n  \n  \n    I think it is important to implement RAP in my work \n    2.6% \n    6.4% \n    19.2% \n    41% \n    30.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    9% \n    16.7% \n    20.5% \n    46.2% \n    7.7% \n  \n\n\n\na Sample size = 78"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-scores",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-scores",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    72.4% \n  \n  \n    Team open source code \n    Basic \n    14.6% \n  \n  \n    Version control \n    Basic \n    36.6% \n  \n  \n    Peer review \n    Basic \n    30.1% \n  \n  \n    AQUA book guidance \n    Basic \n    9.8% \n  \n  \n    Documentation \n    Basic \n    35% \n  \n  \n    Functions \n    Advanced \n    52% \n  \n  \n    Unit testing \n    Advanced \n    17.1% \n  \n  \n    Function documentation \n    Advanced \n    30.9% \n  \n  \n    Code packages \n    Advanced \n    13% \n  \n  \n    Follow code style guidelines \n    Advanced \n    38.2% \n  \n  \n    Continuous integration \n    Advanced \n    15.4% \n  \n  \n    Dependency management \n    Advanced \n    26% \n  \n\n\n\na Sample size = 123\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    13.8% \n  \n  \n    1 \n    31.7% \n  \n  \n    2 \n    21.1% \n  \n  \n    3 \n    15.4% \n  \n  \n    4 \n    12.2% \n  \n  \n    5 \n    4.9% \n  \n  \n    6 \n    0.8% \n  \n\n\n\na Sample size = 123\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.8% \n  \n  \n    1 \n    24.4% \n  \n  \n    2 \n    22% \n  \n  \n    3 \n    12.2% \n  \n  \n    4 \n    9.8% \n  \n  \n    5 \n    5.7% \n  \n  \n    6 \n    2.4% \n  \n  \n    7 \n    0.8% \n  \n\n\n\na Sample size = 123"
  },
  {
    "objectID": "departments/department-for-international-trade.html#draft-notice",
    "href": "departments/department-for-international-trade.html#draft-notice",
    "title": "Department summary: Department for International Trade",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-for-international-trade.html#coding-frequency-and-tools",
    "href": "departments/department-for-international-trade.html#coding-frequency-and-tools",
    "title": "Department summary: Department for International Trade",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    28.4% \n  \n  \n    Rarely \n    13.6% \n  \n  \n    Sometimes \n    13.6% \n  \n  \n    Regularly \n    22.7% \n  \n  \n    All the time \n    21.6% \n  \n\n\n\na Sample size = 88\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    65.5% \n    34.5% \n  \n  \n    Data cleaning \n    75.8% \n    24.2% \n  \n  \n    Data linking \n    66.7% \n    33.3% \n  \n  \n    Data transfer / migration \n    51.4% \n    48.6% \n  \n  \n    Data visualisation \n    57.9% \n    42.1% \n  \n  \n    Machine learning \n    71.4% \n    28.6% \n  \n  \n    Modelling \n    65.8% \n    34.2% \n  \n  \n    Quality assurance \n    44% \n    56% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.8% \n    71.6% \n    21.6% \n  \n  \n    Java / Scala \n    6.8% \n    71.6% \n    21.6% \n  \n  \n    Javascript / Typescript \n    8% \n    71.6% \n    20.5% \n  \n  \n    Matlab \n    2.3% \n    71.6% \n    26.1% \n  \n  \n    Python \n    59.1% \n    33% \n    8% \n  \n  \n    R \n    90.9% \n    4.5% \n    4.5% \n  \n  \n    SAS \n    11.4% \n    68.2% \n    20.5% \n  \n  \n    SPSS \n    20.5% \n    58% \n    21.6% \n  \n  \n    SQL \n    55.7% \n    31.8% \n    12.5% \n  \n  \n    Stata \n    29.5% \n    52.3% \n    18.2% \n  \n  \n    VBA \n    26.1% \n    60.2% \n    13.6% \n  \n\n\n\na Sample size = 88\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4.5% \n    10.2% \n    85.2% \n  \n  \n    Java / Scala \n    3.4% \n    11.4% \n    85.2% \n  \n  \n    Javascript / Typescript \n    2.3% \n    11.4% \n    86.4% \n  \n  \n    Matlab \n    14.8% \n    10.2% \n    75% \n  \n  \n    Python \n    35.2% \n    9.1% \n    55.7% \n  \n  \n    R \n    65.9% \n    4.5% \n    29.5% \n  \n  \n    SAS \n    8% \n    11.4% \n    80.7% \n  \n  \n    SPSS \n    29.5% \n    9.1% \n    61.4% \n  \n  \n    SQL \n    35.2% \n    8% \n    56.8% \n  \n  \n    Stata \n    25% \n    8% \n    67% \n  \n  \n    VBA \n    8% \n    8% \n    84.1% \n  \n\n\n\na Sample size = 88\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    55.6% \n    11.1% \n    33.3% \n  \n  \n    Java / Scala \n    66.7% \n    0% \n    33.3% \n  \n  \n    Javascript / Typescript \n    75% \n    12.5% \n    12.5% \n  \n  \n    Matlab \n    13.3% \n    0% \n    86.7% \n  \n  \n    Python \n    46.6% \n    43.1% \n    10.3% \n  \n  \n    R \n    29.3% \n    68.3% \n    2.4% \n  \n  \n    SAS \n    58.8% \n    0% \n    41.2% \n  \n  \n    SPSS \n    38.1% \n    4.8% \n    57.1% \n  \n  \n    SQL \n    41.5% \n    50.9% \n    7.5% \n  \n  \n    Stata \n    42.1% \n    26.3% \n    31.6% \n  \n  \n    VBA \n    72% \n    20% \n    8%"
  },
  {
    "objectID": "departments/department-for-international-trade.html#coding-capability",
    "href": "departments/department-for-international-trade.html#coding-capability",
    "title": "Department summary: Department for International Trade",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    6.8% \n  \n  \n    Slightly worse \n    15.3% \n  \n  \n    No change \n    25.4% \n  \n  \n    Slightly better \n    32.2% \n  \n  \n    Significantly better \n    20.3% \n  \n\n\n\na Sample size = 59\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    26% \n  \n  \n    In education \n    44.2% \n  \n  \n    In private sector employment \n    1.3% \n  \n  \n    In public sector employment \n    22.1% \n  \n  \n    Self-taught \n    5.2% \n  \n  \n    Other \n    1.3% \n  \n\n\n\na Sample size = 77"
  },
  {
    "objectID": "departments/department-for-international-trade.html#coding-practices",
    "href": "departments/department-for-international-trade.html#coding-practices",
    "title": "Department summary: Department for International Trade",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    22.2% \n    22.2% \n    14.3% \n    19% \n    17.5% \n    4.8% \n  \n  \n    Automated data quality assurance \n    7.9% \n    34.9% \n    19% \n    20.6% \n    12.7% \n    4.8% \n  \n  \n    Code review \n    4.8% \n    14.3% \n    6.3% \n    25.4% \n    34.9% \n    14.3% \n  \n  \n    Coding guidelines / Style guides \n    12.7% \n    17.5% \n    14.3% \n    11.1% \n    36.5% \n    7.9% \n  \n  \n    Functions \n    7.9% \n    11.1% \n    7.9% \n    19% \n    27% \n    27% \n  \n  \n    Open source own code \n    31.7% \n    36.5% \n    11.1% \n    11.1% \n    7.9% \n    1.6% \n  \n  \n    Packaging code \n    22.2% \n    49.2% \n    11.1% \n    9.5% \n    3.2% \n    4.8% \n  \n  \n    Standard directory structure \n    31.7% \n    15.9% \n    14.3% \n    11.1% \n    20.6% \n    6.3% \n  \n  \n    Unit testing \n    39.7% \n    15.9% \n    12.7% \n    15.9% \n    3.2% \n    12.7% \n  \n  \n    Use open source software \n    19% \n    9.5% \n    9.5% \n    11.1% \n    25.4% \n    25.4% \n  \n  \n    Version control \n    15.9% \n    31.7% \n    6.3% \n    11.1% \n    20.6% \n    14.3% \n  \n\n\n\na Sample size = 63\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    25.4% \n    33.3% \n    11.1% \n    17.5% \n    7.9% \n    4.8% \n  \n  \n    Code comments \n    7.9% \n    9.5% \n    4.8% \n    6.3% \n    17.5% \n    54% \n  \n  \n    Data or assumptions registers \n    11.1% \n    30.2% \n    4.8% \n    11.1% \n    30.2% \n    12.7% \n  \n  \n    Desk notes \n    30.2% \n    31.7% \n    12.7% \n    14.3% \n    11.1% \n    0% \n  \n  \n    Documentation for each function or class \n    19% \n    34.9% \n    7.9% \n    9.5% \n    17.5% \n    11.1% \n  \n  \n    Flow charts \n    15.9% \n    41.3% \n    12.7% \n    17.5% \n    9.5% \n    3.2% \n  \n  \n    README files \n    14.3% \n    36.5% \n    7.9% \n    14.3% \n    14.3% \n    12.7% \n  \n\n\n\na Sample size = 63\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    15.9% \n  \n  \n    No \n    31.7% \n  \n  \n    I don't know what dependency management is \n    52.4% \n  \n\n\n\na Sample size = 63\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    11.1% \n  \n  \n    No \n    39.7% \n  \n  \n    I don't know what continuous integration is \n    49.2% \n  \n\n\n\na Sample size = 63\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    1.6% \n  \n  \n    No \n    39.7% \n  \n  \n    I don't know what reproducible workflows are \n    58.7% \n  \n\n\n\na Sample size = 63"
  },
  {
    "objectID": "departments/department-for-international-trade.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-international-trade.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for International Trade",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    16.3% \n  \n  \n    I don't know what a RAP champion is \n    16.3% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    19.8% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    47.7% \n  \n\n\n\na Sample size = 86\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    25.7% \n    21.6% \n    21.6% \n    21.6% \n    9.5% \n  \n  \n    I feel confident implementing RAP in my work \n    21.6% \n    17.6% \n    24.3% \n    21.6% \n    14.9% \n  \n  \n    I feel supported to implement RAP in my work \n    10.8% \n    16.2% \n    31.1% \n    29.7% \n    12.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    10.8% \n    17.6% \n    20.3% \n    33.8% \n    17.6% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    12.2% \n    12.2% \n    29.7% \n    31.1% \n    14.9% \n  \n  \n    I think it is important to implement RAP in my work \n    5.4% \n    2.7% \n    39.2% \n    29.7% \n    23% \n  \n  \n    I understand what the key components of the RAP methodology are \n    18.9% \n    23% \n    23% \n    23% \n    12.2% \n  \n\n\n\na Sample size = 74"
  },
  {
    "objectID": "departments/department-for-international-trade.html#rap-scores",
    "href": "departments/department-for-international-trade.html#rap-scores",
    "title": "Department summary: Department for International Trade",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    50.8% \n  \n  \n    Team open source code \n    Basic \n    9.5% \n  \n  \n    Version control \n    Basic \n    34.9% \n  \n  \n    Peer review \n    Basic \n    49.2% \n  \n  \n    AQUA book guidance \n    Basic \n    22.2% \n  \n  \n    Documentation \n    Basic \n    25.4% \n  \n  \n    Functions \n    Advanced \n    54% \n  \n  \n    Unit testing \n    Advanced \n    15.9% \n  \n  \n    Function documentation \n    Advanced \n    28.6% \n  \n  \n    Code packages \n    Advanced \n    7.9% \n  \n  \n    Follow code style guidelines \n    Advanced \n    44.4% \n  \n  \n    Continuous integration \n    Advanced \n    11.1% \n  \n  \n    Dependency management \n    Advanced \n    15.9% \n  \n\n\n\na Sample size = 63\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.2% \n  \n  \n    1 \n    23.8% \n  \n  \n    2 \n    20.6% \n  \n  \n    3 \n    17.5% \n  \n  \n    4 \n    7.9% \n  \n  \n    5 \n    4.8% \n  \n  \n    6 \n    3.2% \n  \n\n\n\na Sample size = 63\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    31.7% \n  \n  \n    1 \n    22.2% \n  \n  \n    2 \n    15.9% \n  \n  \n    3 \n    11.1% \n  \n  \n    4 \n    7.9% \n  \n  \n    5 \n    7.9% \n  \n  \n    6 \n    3.2% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 63"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#draft-notice",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#draft-notice",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#coding-frequency-and-tools",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    14.3% \n  \n  \n    Rarely \n    17.9% \n  \n  \n    Sometimes \n    17.9% \n  \n  \n    Regularly \n    25% \n  \n  \n    All the time \n    25% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    85.2% \n    14.8% \n  \n  \n    Data cleaning \n    79.2% \n    20.8% \n  \n  \n    Data linking \n    88.2% \n    11.8% \n  \n  \n    Data transfer / migration \n    72.7% \n    27.3% \n  \n  \n    Data visualisation \n    83.3% \n    16.7% \n  \n  \n    Machine learning \n    75% \n    25% \n  \n  \n    Modelling \n    75% \n    25% \n  \n  \n    Quality assurance \n    71.4% \n    28.6% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    75% \n    25% \n  \n  \n    Java / Scala \n    3.6% \n    75% \n    21.4% \n  \n  \n    Javascript / Typescript \n    14.3% \n    71.4% \n    14.3% \n  \n  \n    Matlab \n    0% \n    53.6% \n    46.4% \n  \n  \n    Python \n    89.3% \n    7.1% \n    3.6% \n  \n  \n    R \n    96.4% \n    0% \n    3.6% \n  \n  \n    SAS \n    17.9% \n    57.1% \n    25% \n  \n  \n    SPSS \n    64.3% \n    25% \n    10.7% \n  \n  \n    SQL \n    78.6% \n    14.3% \n    7.1% \n  \n  \n    Stata \n    46.4% \n    39.3% \n    14.3% \n  \n  \n    VBA \n    50% \n    39.3% \n    10.7% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.6% \n    7.1% \n    89.3% \n  \n  \n    Java / Scala \n    0% \n    7.1% \n    92.9% \n  \n  \n    Javascript / Typescript \n    7.1% \n    10.7% \n    82.1% \n  \n  \n    Matlab \n    25% \n    7.1% \n    67.9% \n  \n  \n    Python \n    39.3% \n    7.1% \n    53.6% \n  \n  \n    R \n    82.1% \n    3.6% \n    14.3% \n  \n  \n    SAS \n    17.9% \n    7.1% \n    75% \n  \n  \n    SPSS \n    42.9% \n    3.6% \n    53.6% \n  \n  \n    SQL \n    57.1% \n    3.6% \n    39.3% \n  \n  \n    Stata \n    25% \n    7.1% \n    67.9% \n  \n  \n    VBA \n    32.1% \n    10.7% \n    57.1% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    0% \n    0% \n    100% \n  \n  \n    Java / Scala \n    100% \n    0% \n    0% \n  \n  \n    Javascript / Typescript \n    50% \n    50% \n    0% \n  \n  \n    Matlab \n    0% \n    0% \n    100% \n  \n  \n    Python \n    56% \n    44% \n    0% \n  \n  \n    R \n    14.8% \n    85.2% \n    0% \n  \n  \n    SAS \n    44.4% \n    11.1% \n    44.4% \n  \n  \n    SPSS \n    33.3% \n    66.7% \n    0% \n  \n  \n    SQL \n    30.4% \n    65.2% \n    4.3% \n  \n  \n    Stata \n    50% \n    42.9% \n    7.1% \n  \n  \n    VBA \n    40% \n    53.3% \n    6.7%"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#coding-capability",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#coding-capability",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    13.6% \n  \n  \n    Slightly worse \n    9.1% \n  \n  \n    No change \n    4.5% \n  \n  \n    Slightly better \n    59.1% \n  \n  \n    Significantly better \n    13.6% \n  \n\n\n\na Sample size = 22\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    25.9% \n  \n  \n    In education \n    51.9% \n  \n  \n    In private sector employment \n    3.7% \n  \n  \n    In public sector employment \n    11.1% \n  \n  \n    Self-taught \n    7.4% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 27"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#coding-practices",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#coding-practices",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    37.5% \n    16.7% \n    8.3% \n    16.7% \n    16.7% \n    4.2% \n  \n  \n    Automated data quality assurance \n    0% \n    25% \n    8.3% \n    25% \n    33.3% \n    8.3% \n  \n  \n    Code review \n    0% \n    4.2% \n    20.8% \n    41.7% \n    12.5% \n    20.8% \n  \n  \n    Coding guidelines / Style guides \n    8.3% \n    8.3% \n    16.7% \n    29.2% \n    29.2% \n    8.3% \n  \n  \n    Functions \n    0% \n    8.3% \n    12.5% \n    25% \n    33.3% \n    20.8% \n  \n  \n    Open source own code \n    20.8% \n    41.7% \n    8.3% \n    8.3% \n    12.5% \n    8.3% \n  \n  \n    Packaging code \n    8.3% \n    54.2% \n    8.3% \n    16.7% \n    4.2% \n    8.3% \n  \n  \n    Standard directory structure \n    16.7% \n    16.7% \n    12.5% \n    16.7% \n    25% \n    12.5% \n  \n  \n    Unit testing \n    37.5% \n    8.3% \n    8.3% \n    16.7% \n    20.8% \n    8.3% \n  \n  \n    Use open source software \n    12.5% \n    16.7% \n    0% \n    8.3% \n    25% \n    37.5% \n  \n  \n    Version control \n    4.2% \n    37.5% \n    8.3% \n    12.5% \n    20.8% \n    16.7% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    16.7% \n    20.8% \n    12.5% \n    33.3% \n    16.7% \n    0% \n  \n  \n    Code comments \n    4.2% \n    8.3% \n    0% \n    12.5% \n    25% \n    50% \n  \n  \n    Data or assumptions registers \n    8.3% \n    25% \n    16.7% \n    20.8% \n    20.8% \n    8.3% \n  \n  \n    Desk notes \n    12.5% \n    20.8% \n    8.3% \n    29.2% \n    25% \n    4.2% \n  \n  \n    Documentation for each function or class \n    8.3% \n    25% \n    16.7% \n    25% \n    20.8% \n    4.2% \n  \n  \n    Flow charts \n    4.2% \n    29.2% \n    37.5% \n    25% \n    4.2% \n    0% \n  \n  \n    README files \n    8.3% \n    33.3% \n    16.7% \n    16.7% \n    16.7% \n    8.3% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    25% \n  \n  \n    No \n    20.8% \n  \n  \n    I don't know what dependency management is \n    54.2% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    16.7% \n  \n  \n    No \n    33.3% \n  \n  \n    I don't know what continuous integration is \n    50% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    50% \n  \n  \n    I don't know what reproducible workflows are \n    50% \n  \n\n\n\na Sample size = 24"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    14.8% \n  \n  \n    I don't know what a RAP champion is \n    7.4% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    44.4% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    33.3% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    16.7% \n    12.5% \n    25% \n    29.2% \n    16.7% \n  \n  \n    I feel confident implementing RAP in my work \n    12.5% \n    16.7% \n    20.8% \n    29.2% \n    20.8% \n  \n  \n    I feel supported to implement RAP in my work \n    8.3% \n    16.7% \n    25% \n    41.7% \n    8.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    8.3% \n    16.7% \n    8.3% \n    62.5% \n    4.2% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    8.3% \n    8.3% \n    29.2% \n    37.5% \n    16.7% \n  \n  \n    I think it is important to implement RAP in my work \n    4.2% \n    8.3% \n    12.5% \n    37.5% \n    37.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.3% \n    16.7% \n    8.3% \n    50% \n    16.7% \n  \n\n\n\na Sample size = 24"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#rap-scores",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#rap-scores",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    62.5% \n  \n  \n    Team open source code \n    Basic \n    20.8% \n  \n  \n    Version control \n    Basic \n    37.5% \n  \n  \n    Peer review \n    Basic \n    33.3% \n  \n  \n    AQUA book guidance \n    Basic \n    20.8% \n  \n  \n    Documentation \n    Basic \n    25% \n  \n  \n    Functions \n    Advanced \n    54.2% \n  \n  \n    Unit testing \n    Advanced \n    29.2% \n  \n  \n    Function documentation \n    Advanced \n    25% \n  \n  \n    Code packages \n    Advanced \n    12.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    37.5% \n  \n  \n    Continuous integration \n    Advanced \n    16.7% \n  \n  \n    Dependency management \n    Advanced \n    25% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    29.2% \n  \n  \n    1 \n    29.2% \n  \n  \n    2 \n    8.3% \n  \n  \n    3 \n    0% \n  \n  \n    4 \n    16.7% \n  \n  \n    5 \n    12.5% \n  \n  \n    6 \n    4.2% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    25% \n  \n  \n    1 \n    16.7% \n  \n  \n    2 \n    33.3% \n  \n  \n    3 \n    8.3% \n  \n  \n    4 \n    4.2% \n  \n  \n    5 \n    4.2% \n  \n  \n    6 \n    4.2% \n  \n  \n    7 \n    4.2% \n  \n\n\n\na Sample size = 24"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#draft-notice",
    "href": "departments/department-for-transport-excl-agencies-.html#draft-notice",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-transport-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    7.5% \n  \n  \n    Rarely \n    12.5% \n  \n  \n    Sometimes \n    15% \n  \n  \n    Regularly \n    40% \n  \n  \n    All the time \n    25% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    84.6% \n    15.4% \n  \n  \n    Data cleaning \n    94.3% \n    5.7% \n  \n  \n    Data linking \n    86.7% \n    13.3% \n  \n  \n    Data transfer / migration \n    95% \n    5% \n  \n  \n    Data visualisation \n    76.9% \n    23.1% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    73.7% \n    26.3% \n  \n  \n    Quality assurance \n    70% \n    30% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5% \n    57.5% \n    37.5% \n  \n  \n    Java / Scala \n    7.5% \n    55% \n    37.5% \n  \n  \n    Javascript / Typescript \n    12.5% \n    50% \n    37.5% \n  \n  \n    Matlab \n    0% \n    55% \n    45% \n  \n  \n    Python \n    75% \n    20% \n    5% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SAS \n    7.5% \n    47.5% \n    45% \n  \n  \n    SPSS \n    10% \n    57.5% \n    32.5% \n  \n  \n    SQL \n    77.5% \n    20% \n    2.5% \n  \n  \n    Stata \n    15% \n    52.5% \n    32.5% \n  \n  \n    VBA \n    70% \n    22.5% \n    7.5% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    17.5% \n    10% \n    72.5% \n  \n  \n    Java / Scala \n    5% \n    7.5% \n    87.5% \n  \n  \n    Javascript / Typescript \n    7.5% \n    12.5% \n    80% \n  \n  \n    Matlab \n    10% \n    7.5% \n    82.5% \n  \n  \n    Python \n    50% \n    5% \n    45% \n  \n  \n    R \n    80% \n    2.5% \n    17.5% \n  \n  \n    SAS \n    20% \n    10% \n    70% \n  \n  \n    SPSS \n    30% \n    7.5% \n    62.5% \n  \n  \n    SQL \n    75% \n    0% \n    25% \n  \n  \n    Stata \n    15% \n    10% \n    75% \n  \n  \n    VBA \n    45% \n    10% \n    45% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    12.5% \n    12.5% \n    75% \n  \n  \n    Java / Scala \n    60% \n    0% \n    40% \n  \n  \n    Javascript / Typescript \n    57.1% \n    14.3% \n    28.6% \n  \n  \n    Matlab \n    0% \n    0% \n    100% \n  \n  \n    Python \n    41.2% \n    47.1% \n    11.8% \n  \n  \n    R \n    20% \n    80% \n    0% \n  \n  \n    SAS \n    20% \n    10% \n    70% \n  \n  \n    SPSS \n    0% \n    33.3% \n    66.7% \n  \n  \n    SQL \n    11.8% \n    79.4% \n    8.8% \n  \n  \n    Stata \n    50% \n    0% \n    50% \n  \n  \n    VBA \n    37.9% \n    58.6% \n    3.4%"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#coding-capability",
    "href": "departments/department-for-transport-excl-agencies-.html#coding-capability",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.3% \n  \n  \n    Slightly worse \n    6.7% \n  \n  \n    No change \n    20% \n  \n  \n    Slightly better \n    40% \n  \n  \n    Significantly better \n    30% \n  \n\n\n\na Sample size = 30\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    26.3% \n  \n  \n    In education \n    44.7% \n  \n  \n    In private sector employment \n    2.6% \n  \n  \n    In public sector employment \n    10.5% \n  \n  \n    Self-taught \n    15.8% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 38"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-transport-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    21.6% \n    16.2% \n    10.8% \n    13.5% \n    32.4% \n    5.4% \n  \n  \n    Automated data quality assurance \n    0% \n    16.2% \n    27% \n    29.7% \n    21.6% \n    5.4% \n  \n  \n    Code review \n    0% \n    5.4% \n    8.1% \n    35.1% \n    24.3% \n    27% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    13.5% \n    18.9% \n    18.9% \n    29.7% \n    18.9% \n  \n  \n    Functions \n    10.8% \n    0% \n    13.5% \n    24.3% \n    21.6% \n    29.7% \n  \n  \n    Open source own code \n    24.3% \n    37.8% \n    18.9% \n    10.8% \n    5.4% \n    2.7% \n  \n  \n    Packaging code \n    13.5% \n    51.4% \n    13.5% \n    16.2% \n    0% \n    5.4% \n  \n  \n    Standard directory structure \n    18.9% \n    13.5% \n    21.6% \n    16.2% \n    13.5% \n    16.2% \n  \n  \n    Unit testing \n    24.3% \n    24.3% \n    21.6% \n    16.2% \n    8.1% \n    5.4% \n  \n  \n    Use open source software \n    10.8% \n    10.8% \n    2.7% \n    13.5% \n    29.7% \n    32.4% \n  \n  \n    Version control \n    2.7% \n    18.9% \n    18.9% \n    16.2% \n    18.9% \n    24.3% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    13.5% \n    27% \n    10.8% \n    27% \n    18.9% \n    2.7% \n  \n  \n    Code comments \n    0% \n    0% \n    5.4% \n    2.7% \n    37.8% \n    54.1% \n  \n  \n    Data or assumptions registers \n    13.5% \n    24.3% \n    10.8% \n    13.5% \n    24.3% \n    13.5% \n  \n  \n    Desk notes \n    16.2% \n    8.1% \n    13.5% \n    24.3% \n    32.4% \n    5.4% \n  \n  \n    Documentation for each function or class \n    10.8% \n    18.9% \n    21.6% \n    21.6% \n    10.8% \n    16.2% \n  \n  \n    Flow charts \n    2.7% \n    40.5% \n    18.9% \n    27% \n    8.1% \n    2.7% \n  \n  \n    README files \n    5.4% \n    18.9% \n    13.5% \n    18.9% \n    27% \n    16.2% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    37.8% \n  \n  \n    No \n    35.1% \n  \n  \n    I don't know what dependency management is \n    27% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    13.5% \n  \n  \n    No \n    59.5% \n  \n  \n    I don't know what continuous integration is \n    27% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    2.7% \n  \n  \n    No \n    59.5% \n  \n  \n    I don't know what reproducible workflows are \n    37.8% \n  \n\n\n\na Sample size = 37"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-transport-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    12.8% \n  \n  \n    I don't know what a RAP champion is \n    17.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    33.3% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    2.6% \n  \n  \n    I know who the RAP champion in my department is \n    33.3% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    11.4% \n    25.7% \n    28.6% \n    20% \n    14.3% \n  \n  \n    I feel confident implementing RAP in my work \n    8.6% \n    20% \n    17.1% \n    40% \n    14.3% \n  \n  \n    I feel supported to implement RAP in my work \n    5.7% \n    8.6% \n    20% \n    51.4% \n    14.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    2.9% \n    22.9% \n    14.3% \n    54.3% \n    5.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.7% \n    14.3% \n    42.9% \n    22.9% \n    14.3% \n  \n  \n    I think it is important to implement RAP in my work \n    5.7% \n    0% \n    17.1% \n    48.6% \n    28.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.7% \n    25.7% \n    17.1% \n    40% \n    11.4% \n  \n\n\n\na Sample size = 35"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-transport-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    62.2% \n  \n  \n    Team open source code \n    Basic \n    8.1% \n  \n  \n    Version control \n    Basic \n    43.2% \n  \n  \n    Peer review \n    Basic \n    51.4% \n  \n  \n    AQUA book guidance \n    Basic \n    37.8% \n  \n  \n    Documentation \n    Basic \n    43.2% \n  \n  \n    Functions \n    Advanced \n    51.4% \n  \n  \n    Unit testing \n    Advanced \n    13.5% \n  \n  \n    Function documentation \n    Advanced \n    27% \n  \n  \n    Code packages \n    Advanced \n    5.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    48.6% \n  \n  \n    Continuous integration \n    Advanced \n    13.5% \n  \n  \n    Dependency management \n    Advanced \n    37.8% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    8.1% \n  \n  \n    1 \n    32.4% \n  \n  \n    2 \n    16.2% \n  \n  \n    3 \n    13.5% \n  \n  \n    4 \n    10.8% \n  \n  \n    5 \n    16.2% \n  \n  \n    6 \n    2.7% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    29.7% \n  \n  \n    1 \n    18.9% \n  \n  \n    2 \n    13.5% \n  \n  \n    3 \n    13.5% \n  \n  \n    4 \n    16.2% \n  \n  \n    5 \n    5.4% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    2.7% \n  \n\n\n\na Sample size = 37"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#draft-notice",
    "href": "departments/department-for-work-and-pensions.html#draft-notice",
    "title": "Department summary: Department for Work and Pensions",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#coding-frequency-and-tools",
    "href": "departments/department-for-work-and-pensions.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Work and Pensions",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0% \n  \n  \n    Rarely \n    15.2% \n  \n  \n    Sometimes \n    24.2% \n  \n  \n    Regularly \n    30.3% \n  \n  \n    All the time \n    30.3% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    96.7% \n    3.3% \n  \n  \n    Data cleaning \n    100% \n    0% \n  \n  \n    Data linking \n    100% \n    0% \n  \n  \n    Data transfer / migration \n    77.8% \n    22.2% \n  \n  \n    Data visualisation \n    40.6% \n    59.4% \n  \n  \n    Machine learning \n    0% \n    0% \n  \n  \n    Modelling \n    69.2% \n    30.8% \n  \n  \n    Quality assurance \n    62.5% \n    37.5% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    30.3% \n    69.7% \n  \n  \n    Java / Scala \n    15.2% \n    27.3% \n    57.6% \n  \n  \n    Javascript / Typescript \n    6.1% \n    33.3% \n    60.6% \n  \n  \n    Matlab \n    0% \n    24.2% \n    75.8% \n  \n  \n    Python \n    27.3% \n    18.2% \n    54.5% \n  \n  \n    R \n    42.4% \n    15.2% \n    42.4% \n  \n  \n    SAS \n    97% \n    0% \n    3% \n  \n  \n    SPSS \n    24.2% \n    33.3% \n    42.4% \n  \n  \n    SQL \n    63.6% \n    24.2% \n    12.1% \n  \n  \n    Stata \n    21.2% \n    36.4% \n    42.4% \n  \n  \n    VBA \n    60.6% \n    15.2% \n    24.2% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    15.2% \n    0% \n    84.8% \n  \n  \n    Java / Scala \n    6.1% \n    3% \n    90.9% \n  \n  \n    Javascript / Typescript \n    6.1% \n    0% \n    93.9% \n  \n  \n    Matlab \n    36.4% \n    0% \n    63.6% \n  \n  \n    Python \n    36.4% \n    0% \n    63.6% \n  \n  \n    R \n    39.4% \n    0% \n    60.6% \n  \n  \n    SAS \n    97% \n    0% \n    3% \n  \n  \n    SPSS \n    30.3% \n    6.1% \n    63.6% \n  \n  \n    SQL \n    72.7% \n    3% \n    24.2% \n  \n  \n    Stata \n    6.1% \n    0% \n    93.9% \n  \n  \n    VBA \n    36.4% \n    0% \n    63.6% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    0% \n    0% \n    100% \n  \n  \n    Java / Scala \n    66.7% \n    16.7% \n    16.7% \n  \n  \n    Javascript / Typescript \n    33.3% \n    33.3% \n    33.3% \n  \n  \n    Matlab \n    0% \n    0% \n    100% \n  \n  \n    Python \n    29.4% \n    23.5% \n    47.1% \n  \n  \n    R \n    38.1% \n    28.6% \n    33.3% \n  \n  \n    SAS \n    3% \n    93.9% \n    3% \n  \n  \n    SPSS \n    44.4% \n    0% \n    55.6% \n  \n  \n    SQL \n    4% \n    80% \n    16% \n  \n  \n    Stata \n    77.8% \n    0% \n    22.2% \n  \n  \n    VBA \n    47.8% \n    39.1% \n    13%"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#coding-capability",
    "href": "departments/department-for-work-and-pensions.html#coding-capability",
    "title": "Department summary: Department for Work and Pensions",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    10.7% \n  \n  \n    Slightly worse \n    21.4% \n  \n  \n    No change \n    14.3% \n  \n  \n    Slightly better \n    39.3% \n  \n  \n    Significantly better \n    14.3% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    15.2% \n  \n  \n    In education \n    42.4% \n  \n  \n    In private sector employment \n    6.1% \n  \n  \n    In public sector employment \n    18.2% \n  \n  \n    Self-taught \n    18.2% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 33"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#coding-practices",
    "href": "departments/department-for-work-and-pensions.html#coding-practices",
    "title": "Department summary: Department for Work and Pensions",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    9.1% \n    9.1% \n    12.1% \n    39.4% \n    24.2% \n    6.1% \n  \n  \n    Automated data quality assurance \n    6.1% \n    18.2% \n    9.1% \n    42.4% \n    18.2% \n    6.1% \n  \n  \n    Code review \n    0% \n    3% \n    6.1% \n    18.2% \n    42.4% \n    30.3% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    9.1% \n    0% \n    36.4% \n    39.4% \n    15.2% \n  \n  \n    Functions \n    6.1% \n    12.1% \n    9.1% \n    33.3% \n    33.3% \n    6.1% \n  \n  \n    Open source own code \n    3% \n    87.9% \n    3% \n    3% \n    0% \n    3% \n  \n  \n    Packaging code \n    21.2% \n    48.5% \n    3% \n    15.2% \n    6.1% \n    6.1% \n  \n  \n    Standard directory structure \n    27.3% \n    18.2% \n    3% \n    27.3% \n    12.1% \n    12.1% \n  \n  \n    Unit testing \n    33.3% \n    18.2% \n    18.2% \n    6.1% \n    9.1% \n    15.2% \n  \n  \n    Use open source software \n    0% \n    72.7% \n    3% \n    12.1% \n    6.1% \n    6.1% \n  \n  \n    Version control \n    6.1% \n    72.7% \n    6.1% \n    6.1% \n    0% \n    9.1% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    15.2% \n    18.2% \n    6.1% \n    27.3% \n    24.2% \n    9.1% \n  \n  \n    Code comments \n    3% \n    3% \n    0% \n    9.1% \n    33.3% \n    51.5% \n  \n  \n    Data or assumptions registers \n    15.2% \n    27.3% \n    9.1% \n    12.1% \n    30.3% \n    6.1% \n  \n  \n    Desk notes \n    42.4% \n    12.1% \n    15.2% \n    6.1% \n    21.2% \n    3% \n  \n  \n    Documentation for each function or class \n    15.2% \n    21.2% \n    15.2% \n    24.2% \n    18.2% \n    6.1% \n  \n  \n    Flow charts \n    9.1% \n    36.4% \n    21.2% \n    24.2% \n    6.1% \n    3% \n  \n  \n    README files \n    6.1% \n    24.2% \n    12.1% \n    33.3% \n    15.2% \n    9.1% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    6.1% \n  \n  \n    No \n    51.5% \n  \n  \n    I don't know what dependency management is \n    42.4% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    3% \n  \n  \n    No \n    51.5% \n  \n  \n    I don't know what continuous integration is \n    45.5% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    57.6% \n  \n  \n    I don't know what reproducible workflows are \n    42.4% \n  \n\n\n\na Sample size = 33"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-work-and-pensions.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Work and Pensions",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    6.1% \n  \n  \n    I don't know what a RAP champion is \n    18.2% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    57.6% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    18.2% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    41.9% \n    25.8% \n    19.4% \n    6.5% \n    6.5% \n  \n  \n    I feel confident implementing RAP in my work \n    12.9% \n    45.2% \n    16.1% \n    22.6% \n    3.2% \n  \n  \n    I feel supported to implement RAP in my work \n    22.6% \n    19.4% \n    32.3% \n    22.6% \n    3.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    12.9% \n    38.7% \n    12.9% \n    29% \n    6.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    25.8% \n    16.1% \n    38.7% \n    9.7% \n    9.7% \n  \n  \n    I think it is important to implement RAP in my work \n    6.5% \n    9.7% \n    32.3% \n    29% \n    22.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    9.7% \n    29% \n    9.7% \n    41.9% \n    9.7% \n  \n\n\n\na Sample size = 31"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#rap-scores",
    "href": "departments/department-for-work-and-pensions.html#rap-scores",
    "title": "Department summary: Department for Work and Pensions",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    12.1% \n  \n  \n    Team open source code \n    Basic \n    3% \n  \n  \n    Version control \n    Basic \n    9.1% \n  \n  \n    Peer review \n    Basic \n    72.7% \n  \n  \n    AQUA book guidance \n    Basic \n    30.3% \n  \n  \n    Documentation \n    Basic \n    24.2% \n  \n  \n    Functions \n    Advanced \n    39.4% \n  \n  \n    Unit testing \n    Advanced \n    24.2% \n  \n  \n    Function documentation \n    Advanced \n    24.2% \n  \n  \n    Code packages \n    Advanced \n    12.1% \n  \n  \n    Follow code style guidelines \n    Advanced \n    54.5% \n  \n  \n    Continuous integration \n    Advanced \n    3% \n  \n  \n    Dependency management \n    Advanced \n    6.1% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    18.2% \n  \n  \n    1 \n    39.4% \n  \n  \n    2 \n    24.2% \n  \n  \n    3 \n    12.1% \n  \n  \n    4 \n    3% \n  \n  \n    5 \n    3% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    24.2% \n  \n  \n    1 \n    30.3% \n  \n  \n    2 \n    27.3% \n  \n  \n    3 \n    3% \n  \n  \n    4 \n    6.1% \n  \n  \n    5 \n    9.1% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 33"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#draft-notice",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#draft-notice",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    20% \n  \n  \n    Rarely \n    13.3% \n  \n  \n    Sometimes \n    20% \n  \n  \n    Regularly \n    21.3% \n  \n  \n    All the time \n    25.3% \n  \n\n\n\na Sample size = 75\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    76.1% \n    23.9% \n  \n  \n    Data cleaning \n    78% \n    22% \n  \n  \n    Data linking \n    82.4% \n    17.6% \n  \n  \n    Data transfer / migration \n    71% \n    29% \n  \n  \n    Data visualisation \n    67.2% \n    32.8% \n  \n  \n    Machine learning \n    90% \n    10% \n  \n  \n    Modelling \n    71.1% \n    28.9% \n  \n  \n    Quality assurance \n    48.4% \n    51.6% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4% \n    62.7% \n    33.3% \n  \n  \n    Java / Scala \n    4% \n    65.3% \n    30.7% \n  \n  \n    Javascript / Typescript \n    5.3% \n    65.3% \n    29.3% \n  \n  \n    Matlab \n    1.3% \n    60% \n    38.7% \n  \n  \n    Python \n    52% \n    33.3% \n    14.7% \n  \n  \n    R \n    93.3% \n    6.7% \n    0% \n  \n  \n    SAS \n    13.3% \n    62.7% \n    24% \n  \n  \n    SPSS \n    21.3% \n    56% \n    22.7% \n  \n  \n    SQL \n    56% \n    32% \n    12% \n  \n  \n    Stata \n    40% \n    38.7% \n    21.3% \n  \n  \n    VBA \n    46.7% \n    37.3% \n    16% \n  \n\n\n\na Sample size = 75\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    8% \n    4% \n    88% \n  \n  \n    Java / Scala \n    6.7% \n    2.7% \n    90.7% \n  \n  \n    Javascript / Typescript \n    8% \n    2.7% \n    89.3% \n  \n  \n    Matlab \n    20% \n    4% \n    76% \n  \n  \n    Python \n    28% \n    1.3% \n    70.7% \n  \n  \n    R \n    73.3% \n    0% \n    26.7% \n  \n  \n    SAS \n    21.3% \n    2.7% \n    76% \n  \n  \n    SPSS \n    29.3% \n    2.7% \n    68% \n  \n  \n    SQL \n    57.3% \n    1.3% \n    41.3% \n  \n  \n    Stata \n    25.3% \n    0% \n    74.7% \n  \n  \n    VBA \n    32% \n    2.7% \n    65.3% \n  \n\n\n\na Sample size = 75\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    14.3% \n    28.6% \n    57.1% \n  \n  \n    Java / Scala \n    16.7% \n    33.3% \n    50% \n  \n  \n    Javascript / Typescript \n    14.3% \n    42.9% \n    42.9% \n  \n  \n    Matlab \n    0% \n    6.7% \n    93.3% \n  \n  \n    Python \n    53.3% \n    33.3% \n    13.3% \n  \n  \n    R \n    22.5% \n    76.1% \n    1.4% \n  \n  \n    SAS \n    23.8% \n    23.8% \n    52.4% \n  \n  \n    SPSS \n    26.7% \n    26.7% \n    46.7% \n  \n  \n    SQL \n    18.9% \n    60.4% \n    20.8% \n  \n  \n    Stata \n    52.5% \n    22.5% \n    25% \n  \n  \n    VBA \n    41.5% \n    43.9% \n    14.6%"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-capability",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-capability",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    4.9% \n  \n  \n    Slightly worse \n    21.3% \n  \n  \n    No change \n    23% \n  \n  \n    Slightly better \n    23% \n  \n  \n    Significantly better \n    27.9% \n  \n\n\n\na Sample size = 61\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    17.1% \n  \n  \n    In education \n    54.3% \n  \n  \n    In private sector employment \n    1.4% \n  \n  \n    In public sector employment \n    15.7% \n  \n  \n    Self-taught \n    8.6% \n  \n  \n    Other \n    2.9% \n  \n\n\n\na Sample size = 70"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-practices",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    21.7% \n    16.7% \n    6.7% \n    33.3% \n    16.7% \n    5% \n  \n  \n    Automated data quality assurance \n    3.3% \n    20% \n    28.3% \n    20% \n    18.3% \n    10% \n  \n  \n    Code review \n    1.7% \n    13.3% \n    3.3% \n    21.7% \n    36.7% \n    23.3% \n  \n  \n    Coding guidelines / Style guides \n    8.3% \n    15% \n    11.7% \n    33.3% \n    21.7% \n    10% \n  \n  \n    Functions \n    5% \n    13.3% \n    5% \n    26.7% \n    23.3% \n    26.7% \n  \n  \n    Open source own code \n    11.7% \n    46.7% \n    18.3% \n    15% \n    1.7% \n    6.7% \n  \n  \n    Packaging code \n    10% \n    51.7% \n    21.7% \n    6.7% \n    3.3% \n    6.7% \n  \n  \n    Standard directory structure \n    26.7% \n    20% \n    6.7% \n    21.7% \n    15% \n    10% \n  \n  \n    Unit testing \n    25% \n    31.7% \n    11.7% \n    16.7% \n    10% \n    5% \n  \n  \n    Use open source software \n    3.3% \n    15% \n    5% \n    16.7% \n    16.7% \n    43.3% \n  \n  \n    Version control \n    5% \n    25% \n    13.3% \n    20% \n    15% \n    21.7% \n  \n\n\n\na Sample size = 60\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    21.7% \n    25% \n    11.7% \n    15% \n    16.7% \n    10% \n  \n  \n    Code comments \n    3.3% \n    11.7% \n    0% \n    5% \n    23.3% \n    56.7% \n  \n  \n    Data or assumptions registers \n    16.7% \n    35% \n    20% \n    10% \n    10% \n    8.3% \n  \n  \n    Desk notes \n    25% \n    25% \n    11.7% \n    16.7% \n    18.3% \n    3.3% \n  \n  \n    Documentation for each function or class \n    11.7% \n    31.7% \n    8.3% \n    25% \n    11.7% \n    11.7% \n  \n  \n    Flow charts \n    10% \n    30% \n    23.3% \n    28.3% \n    6.7% \n    1.7% \n  \n  \n    README files \n    6.7% \n    28.3% \n    8.3% \n    30% \n    18.3% \n    8.3% \n  \n\n\n\na Sample size = 60\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    13.3% \n  \n  \n    No \n    40% \n  \n  \n    I don't know what dependency management is \n    46.7% \n  \n\n\n\na Sample size = 60\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15% \n  \n  \n    No \n    35% \n  \n  \n    I don't know what continuous integration is \n    50% \n  \n\n\n\na Sample size = 60\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    55% \n  \n  \n    I don't know what reproducible workflows are \n    45% \n  \n\n\n\na Sample size = 60"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    22.7% \n  \n  \n    I don't know what a RAP champion is \n    16% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    45.3% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    4% \n  \n  \n    I know who the RAP champion in my department is \n    12% \n  \n\n\n\na Sample size = 75\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    15.5% \n    27.6% \n    19% \n    27.6% \n    10.3% \n  \n  \n    I feel confident implementing RAP in my work \n    10.3% \n    19% \n    24.1% \n    36.2% \n    10.3% \n  \n  \n    I feel supported to implement RAP in my work \n    8.6% \n    25.9% \n    25.9% \n    29.3% \n    10.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    6.9% \n    31% \n    25.9% \n    29.3% \n    6.9% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    8.6% \n    13.8% \n    31% \n    31% \n    15.5% \n  \n  \n    I think it is important to implement RAP in my work \n    6.9% \n    6.9% \n    13.8% \n    44.8% \n    27.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    3.4% \n    19% \n    22.4% \n    41.4% \n    13.8% \n  \n\n\n\na Sample size = 58"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#rap-scores",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    60% \n  \n  \n    Team open source code \n    Basic \n    8.3% \n  \n  \n    Version control \n    Basic \n    36.7% \n  \n  \n    Peer review \n    Basic \n    60% \n  \n  \n    AQUA book guidance \n    Basic \n    21.7% \n  \n  \n    Documentation \n    Basic \n    25% \n  \n  \n    Functions \n    Advanced \n    50% \n  \n  \n    Unit testing \n    Advanced \n    15% \n  \n  \n    Function documentation \n    Advanced \n    23.3% \n  \n  \n    Code packages \n    Advanced \n    10% \n  \n  \n    Follow code style guidelines \n    Advanced \n    31.7% \n  \n  \n    Continuous integration \n    Advanced \n    15% \n  \n  \n    Dependency management \n    Advanced \n    13.3% \n  \n\n\n\na Sample size = 60\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    13.3% \n  \n  \n    1 \n    30% \n  \n  \n    2 \n    20% \n  \n  \n    3 \n    15% \n  \n  \n    4 \n    13.3% \n  \n  \n    5 \n    6.7% \n  \n  \n    6 \n    1.7% \n  \n\n\n\na Sample size = 60\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    36.7% \n  \n  \n    1 \n    20% \n  \n  \n    2 \n    15% \n  \n  \n    3 \n    16.7% \n  \n  \n    4 \n    3.3% \n  \n  \n    5 \n    5% \n  \n  \n    6 \n    3.3% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 60"
  },
  {
    "objectID": "departments/forestry-commission.html#draft-notice",
    "href": "departments/forestry-commission.html#draft-notice",
    "title": "Department summary: Forestry Commission",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/forestry-commission.html#coding-frequency-and-tools",
    "href": "departments/forestry-commission.html#coding-frequency-and-tools",
    "title": "Department summary: Forestry Commission",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.6% \n  \n  \n    Rarely \n    22.9% \n  \n  \n    Sometimes \n    17.1% \n  \n  \n    Regularly \n    31.4% \n  \n  \n    All the time \n    20% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    76.5% \n    23.5% \n  \n  \n    Data cleaning \n    66.7% \n    33.3% \n  \n  \n    Data linking \n    70.8% \n    29.2% \n  \n  \n    Data transfer / migration \n    48.1% \n    51.9% \n  \n  \n    Data visualisation \n    78.8% \n    21.2% \n  \n  \n    Machine learning \n    90% \n    10% \n  \n  \n    Modelling \n    88.9% \n    11.1% \n  \n  \n    Quality assurance \n    61.5% \n    38.5% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    20% \n    68.6% \n    11.4% \n  \n  \n    Java / Scala \n    11.4% \n    77.1% \n    11.4% \n  \n  \n    Javascript / Typescript \n    5.7% \n    82.9% \n    11.4% \n  \n  \n    Matlab \n    8.6% \n    60% \n    31.4% \n  \n  \n    Python \n    62.9% \n    31.4% \n    5.7% \n  \n  \n    R \n    88.6% \n    8.6% \n    2.9% \n  \n  \n    SAS \n    20% \n    68.6% \n    11.4% \n  \n  \n    SPSS \n    8.6% \n    77.1% \n    14.3% \n  \n  \n    SQL \n    34.3% \n    57.1% \n    8.6% \n  \n  \n    Stata \n    0% \n    80% \n    20% \n  \n  \n    VBA \n    17.1% \n    71.4% \n    11.4% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    11.4% \n    0% \n    88.6% \n  \n  \n    Java / Scala \n    2.9% \n    0% \n    97.1% \n  \n  \n    Javascript / Typescript \n    11.4% \n    0% \n    88.6% \n  \n  \n    Matlab \n    11.4% \n    2.9% \n    85.7% \n  \n  \n    Python \n    22.9% \n    0% \n    77.1% \n  \n  \n    R \n    68.6% \n    0% \n    31.4% \n  \n  \n    SAS \n    11.4% \n    0% \n    88.6% \n  \n  \n    SPSS \n    17.1% \n    0% \n    82.9% \n  \n  \n    SQL \n    34.3% \n    2.9% \n    62.9% \n  \n  \n    Stata \n    11.4% \n    2.9% \n    85.7% \n  \n  \n    VBA \n    17.1% \n    0% \n    82.9% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    42.9% \n    57.1% \n    0% \n  \n  \n    Java / Scala \n    75% \n    25% \n    0% \n  \n  \n    Javascript / Typescript \n    0% \n    50% \n    50% \n  \n  \n    Matlab \n    42.9% \n    0% \n    57.1% \n  \n  \n    Python \n    66.7% \n    25% \n    8.3% \n  \n  \n    R \n    22.6% \n    77.4% \n    0% \n  \n  \n    SAS \n    42.9% \n    57.1% \n    0% \n  \n  \n    SPSS \n    25% \n    12.5% \n    62.5% \n  \n  \n    SQL \n    20% \n    60% \n    20% \n  \n  \n    Stata \n    0% \n    0% \n    100% \n  \n  \n    VBA \n    25% \n    50% \n    25%"
  },
  {
    "objectID": "departments/forestry-commission.html#coding-capability",
    "href": "departments/forestry-commission.html#coding-capability",
    "title": "Department summary: Forestry Commission",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    8.3% \n  \n  \n    Slightly worse \n    20.8% \n  \n  \n    No change \n    12.5% \n  \n  \n    Slightly better \n    37.5% \n  \n  \n    Significantly better \n    20.8% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    25% \n  \n  \n    In education \n    46.9% \n  \n  \n    In private sector employment \n    3.1% \n  \n  \n    In public sector employment \n    3.1% \n  \n  \n    Self-taught \n    18.8% \n  \n  \n    Other \n    3.1% \n  \n\n\n\na Sample size = 32"
  },
  {
    "objectID": "departments/forestry-commission.html#coding-practices",
    "href": "departments/forestry-commission.html#coding-practices",
    "title": "Department summary: Forestry Commission",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    71.9% \n    15.6% \n    3.1% \n    6.2% \n    3.1% \n    0% \n  \n  \n    Automated data quality assurance \n    12.5% \n    18.8% \n    12.5% \n    28.1% \n    25% \n    3.1% \n  \n  \n    Code review \n    0% \n    28.1% \n    15.6% \n    43.8% \n    12.5% \n    0% \n  \n  \n    Coding guidelines / Style guides \n    6.2% \n    28.1% \n    3.1% \n    25% \n    28.1% \n    9.4% \n  \n  \n    Functions \n    9.4% \n    18.8% \n    9.4% \n    25% \n    18.8% \n    18.8% \n  \n  \n    Open source own code \n    3.1% \n    46.9% \n    21.9% \n    18.8% \n    6.2% \n    3.1% \n  \n  \n    Packaging code \n    15.6% \n    50% \n    12.5% \n    0% \n    12.5% \n    9.4% \n  \n  \n    Standard directory structure \n    18.8% \n    28.1% \n    3.1% \n    28.1% \n    12.5% \n    9.4% \n  \n  \n    Unit testing \n    31.2% \n    25% \n    9.4% \n    18.8% \n    6.2% \n    9.4% \n  \n  \n    Use open source software \n    0% \n    9.4% \n    15.6% \n    12.5% \n    21.9% \n    40.6% \n  \n  \n    Version control \n    12.5% \n    40.6% \n    18.8% \n    6.2% \n    12.5% \n    9.4% \n  \n\n\n\na Sample size = 32\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    15.6% \n    50% \n    3.1% \n    21.9% \n    3.1% \n    6.2% \n  \n  \n    Code comments \n    0% \n    15.6% \n    3.1% \n    25% \n    12.5% \n    43.8% \n  \n  \n    Data or assumptions registers \n    25% \n    53.1% \n    15.6% \n    6.2% \n    0% \n    0% \n  \n  \n    Desk notes \n    6.2% \n    31.2% \n    6.2% \n    37.5% \n    9.4% \n    9.4% \n  \n  \n    Documentation for each function or class \n    6.2% \n    46.9% \n    15.6% \n    15.6% \n    9.4% \n    6.2% \n  \n  \n    Flow charts \n    3.1% \n    46.9% \n    21.9% \n    21.9% \n    6.2% \n    0% \n  \n  \n    README files \n    0% \n    21.9% \n    12.5% \n    46.9% \n    12.5% \n    6.2% \n  \n\n\n\na Sample size = 32\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    18.8% \n  \n  \n    No \n    40.6% \n  \n  \n    I don't know what dependency management is \n    40.6% \n  \n\n\n\na Sample size = 32\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15.6% \n  \n  \n    No \n    31.2% \n  \n  \n    I don't know what continuous integration is \n    53.1% \n  \n\n\n\na Sample size = 32\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    6.2% \n  \n  \n    No \n    65.6% \n  \n  \n    I don't know what reproducible workflows are \n    28.1% \n  \n\n\n\na Sample size = 32"
  },
  {
    "objectID": "departments/forestry-commission.html#rap-knowledge-and-opinions",
    "href": "departments/forestry-commission.html#rap-knowledge-and-opinions",
    "title": "Department summary: Forestry Commission",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    55.9% \n  \n  \n    I don't know what a RAP champion is \n    14.7% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    0% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    29.4% \n  \n\n\n\na Sample size = 34\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    18.8% \n    18.8% \n    18.8% \n    31.2% \n    12.5% \n  \n  \n    I feel confident implementing RAP in my work \n    18.8% \n    12.5% \n    12.5% \n    37.5% \n    18.8% \n  \n  \n    I feel supported to implement RAP in my work \n    12.5% \n    31.2% \n    31.2% \n    25% \n    0% \n  \n  \n    I know where to find resources to help me implement RAP \n    18.8% \n    31.2% \n    6.2% \n    31.2% \n    12.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    12.5% \n    6.2% \n    18.8% \n    25% \n    37.5% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    6.2% \n    12.5% \n    37.5% \n    43.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    18.8% \n    18.8% \n    0% \n    43.8% \n    18.8% \n  \n\n\n\na Sample size = 16"
  },
  {
    "objectID": "departments/forestry-commission.html#rap-scores",
    "href": "departments/forestry-commission.html#rap-scores",
    "title": "Department summary: Forestry Commission",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    62.5% \n  \n  \n    Team open source code \n    Basic \n    9.4% \n  \n  \n    Version control \n    Basic \n    21.9% \n  \n  \n    Peer review \n    Basic \n    12.5% \n  \n  \n    AQUA book guidance \n    Basic \n    3.1% \n  \n  \n    Documentation \n    Basic \n    15.6% \n  \n  \n    Functions \n    Advanced \n    37.5% \n  \n  \n    Unit testing \n    Advanced \n    15.6% \n  \n  \n    Function documentation \n    Advanced \n    15.6% \n  \n  \n    Code packages \n    Advanced \n    21.9% \n  \n  \n    Follow code style guidelines \n    Advanced \n    37.5% \n  \n  \n    Continuous integration \n    Advanced \n    15.6% \n  \n  \n    Dependency management \n    Advanced \n    18.8% \n  \n\n\n\na Sample size = 32\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    28.1% \n  \n  \n    1 \n    31.2% \n  \n  \n    2 \n    31.2% \n  \n  \n    3 \n    6.2% \n  \n  \n    4 \n    3.1% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 32\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    34.4% \n  \n  \n    1 \n    25% \n  \n  \n    2 \n    21.9% \n  \n  \n    3 \n    3.1% \n  \n  \n    4 \n    3.1% \n  \n  \n    5 \n    6.2% \n  \n  \n    6 \n    3.1% \n  \n  \n    7 \n    3.1% \n  \n\n\n\na Sample size = 32"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#draft-notice",
    "href": "departments/government-actuary-s-department.html#draft-notice",
    "title": "Department summary: Government Actuary’s Department",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/government-actuary-s-department.html#coding-frequency-and-tools",
    "href": "departments/government-actuary-s-department.html#coding-frequency-and-tools",
    "title": "Department summary: Government Actuary’s Department",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    29.7% \n  \n  \n    Rarely \n    16.2% \n  \n  \n    Sometimes \n    10.8% \n  \n  \n    Regularly \n    27% \n  \n  \n    All the time \n    16.2% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    62.5% \n    37.5% \n  \n  \n    Data cleaning \n    61.5% \n    38.5% \n  \n  \n    Data linking \n    66.7% \n    33.3% \n  \n  \n    Data transfer / migration \n    62.5% \n    37.5% \n  \n  \n    Data visualisation \n    50% \n    50% \n  \n  \n    Machine learning \n    87.5% \n    12.5% \n  \n  \n    Modelling \n    60% \n    40% \n  \n  \n    Quality assurance \n    35.7% \n    64.3% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.7% \n    54.1% \n    43.2% \n  \n  \n    Java / Scala \n    0% \n    56.8% \n    43.2% \n  \n  \n    Javascript / Typescript \n    16.2% \n    54.1% \n    29.7% \n  \n  \n    Matlab \n    2.7% \n    43.2% \n    54.1% \n  \n  \n    Python \n    89.2% \n    8.1% \n    2.7% \n  \n  \n    R \n    91.9% \n    2.7% \n    5.4% \n  \n  \n    SAS \n    86.5% \n    8.1% \n    5.4% \n  \n  \n    SPSS \n    2.7% \n    48.6% \n    48.6% \n  \n  \n    SQL \n    45.9% \n    37.8% \n    16.2% \n  \n  \n    Stata \n    0% \n    54.1% \n    45.9% \n  \n  \n    VBA \n    89.2% \n    8.1% \n    2.7% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    13.5% \n    2.7% \n    83.8% \n  \n  \n    Java / Scala \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    Javascript / Typescript \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    Matlab \n    21.6% \n    5.4% \n    73% \n  \n  \n    Python \n    32.4% \n    0% \n    67.6% \n  \n  \n    R \n    62.2% \n    5.4% \n    32.4% \n  \n  \n    SAS \n    29.7% \n    5.4% \n    64.9% \n  \n  \n    SPSS \n    8.1% \n    2.7% \n    89.2% \n  \n  \n    SQL \n    29.7% \n    2.7% \n    67.6% \n  \n  \n    Stata \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    VBA \n    56.8% \n    2.7% \n    40.5% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    16.7% \n    0% \n    83.3% \n  \n  \n    Java / Scala \n    0% \n    0% \n    100% \n  \n  \n    Javascript / Typescript \n    42.9% \n    42.9% \n    14.3% \n  \n  \n    Matlab \n    11.1% \n    0% \n    88.9% \n  \n  \n    Python \n    63.6% \n    36.4% \n    0% \n  \n  \n    R \n    34.3% \n    62.9% \n    2.9% \n  \n  \n    SAS \n    66.7% \n    30.3% \n    3% \n  \n  \n    SPSS \n    25% \n    0% \n    75% \n  \n  \n    SQL \n    45% \n    40% \n    15% \n  \n  \n    Stata \n    0% \n    0% \n    100% \n  \n  \n    VBA \n    36.4% \n    63.6% \n    0%"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#coding-capability",
    "href": "departments/government-actuary-s-department.html#coding-capability",
    "title": "Department summary: Government Actuary’s Department",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    12.5% \n  \n  \n    Slightly worse \n    16.7% \n  \n  \n    No change \n    12.5% \n  \n  \n    Slightly better \n    37.5% \n  \n  \n    Significantly better \n    20.8% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    34.4% \n  \n  \n    In education \n    43.8% \n  \n  \n    In private sector employment \n    3.1% \n  \n  \n    In public sector employment \n    3.1% \n  \n  \n    Self-taught \n    15.6% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 32"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#coding-practices",
    "href": "departments/government-actuary-s-department.html#coding-practices",
    "title": "Department summary: Government Actuary’s Department",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    46.2% \n    19.2% \n    7.7% \n    11.5% \n    11.5% \n    3.8% \n  \n  \n    Automated data quality assurance \n    15.4% \n    19.2% \n    26.9% \n    26.9% \n    7.7% \n    3.8% \n  \n  \n    Code review \n    0% \n    7.7% \n    15.4% \n    19.2% \n    38.5% \n    19.2% \n  \n  \n    Coding guidelines / Style guides \n    11.5% \n    19.2% \n    0% \n    26.9% \n    34.6% \n    7.7% \n  \n  \n    Functions \n    15.4% \n    3.8% \n    11.5% \n    15.4% \n    26.9% \n    26.9% \n  \n  \n    Open source own code \n    15.4% \n    65.4% \n    7.7% \n    3.8% \n    7.7% \n    0% \n  \n  \n    Packaging code \n    23.1% \n    30.8% \n    15.4% \n    19.2% \n    11.5% \n    0% \n  \n  \n    Standard directory structure \n    15.4% \n    23.1% \n    11.5% \n    15.4% \n    30.8% \n    3.8% \n  \n  \n    Unit testing \n    23.1% \n    15.4% \n    11.5% \n    30.8% \n    11.5% \n    7.7% \n  \n  \n    Use open source software \n    15.4% \n    11.5% \n    7.7% \n    26.9% \n    19.2% \n    19.2% \n  \n  \n    Version control \n    26.9% \n    30.8% \n    19.2% \n    7.7% \n    11.5% \n    3.8% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    23.1% \n    15.4% \n    3.8% \n    34.6% \n    15.4% \n    7.7% \n  \n  \n    Code comments \n    0% \n    3.8% \n    11.5% \n    7.7% \n    38.5% \n    38.5% \n  \n  \n    Data or assumptions registers \n    42.3% \n    34.6% \n    11.5% \n    3.8% \n    7.7% \n    0% \n  \n  \n    Desk notes \n    23.1% \n    23.1% \n    7.7% \n    34.6% \n    11.5% \n    0% \n  \n  \n    Documentation for each function or class \n    19.2% \n    15.4% \n    7.7% \n    30.8% \n    23.1% \n    3.8% \n  \n  \n    Flow charts \n    15.4% \n    26.9% \n    19.2% \n    23.1% \n    15.4% \n    0% \n  \n  \n    README files \n    23.1% \n    15.4% \n    15.4% \n    23.1% \n    19.2% \n    3.8% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    15.4% \n  \n  \n    No \n    34.6% \n  \n  \n    I don't know what dependency management is \n    50% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    7.7% \n  \n  \n    No \n    46.2% \n  \n  \n    I don't know what continuous integration is \n    46.2% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what reproducible workflows are \n    46.2% \n  \n\n\n\na Sample size = 26"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#rap-knowledge-and-opinions",
    "href": "departments/government-actuary-s-department.html#rap-knowledge-and-opinions",
    "title": "Department summary: Government Actuary’s Department",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    56.8% \n  \n  \n    I don't know what a RAP champion is \n    18.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    8.1% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.4% \n  \n  \n    I know who the RAP champion in my department is \n    10.8% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    31.2% \n    6.2% \n    43.8% \n    12.5% \n    6.2% \n  \n  \n    I feel confident implementing RAP in my work \n    25% \n    18.8% \n    50% \n    0% \n    6.2% \n  \n  \n    I feel supported to implement RAP in my work \n    18.8% \n    12.5% \n    43.8% \n    18.8% \n    6.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    25% \n    18.8% \n    37.5% \n    6.2% \n    12.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    25% \n    6.2% \n    37.5% \n    25% \n    6.2% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    6.2% \n    56.2% \n    25% \n    12.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    18.8% \n    6.2% \n    43.8% \n    25% \n    6.2% \n  \n\n\n\na Sample size = 16"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#rap-scores",
    "href": "departments/government-actuary-s-department.html#rap-scores",
    "title": "Department summary: Government Actuary’s Department",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    38.5% \n  \n  \n    Team open source code \n    Basic \n    7.7% \n  \n  \n    Version control \n    Basic \n    15.4% \n  \n  \n    Peer review \n    Basic \n    57.7% \n  \n  \n    AQUA book guidance \n    Basic \n    15.4% \n  \n  \n    Documentation \n    Basic \n    19.2% \n  \n  \n    Functions \n    Advanced \n    53.8% \n  \n  \n    Unit testing \n    Advanced \n    19.2% \n  \n  \n    Function documentation \n    Advanced \n    26.9% \n  \n  \n    Code packages \n    Advanced \n    11.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    42.3% \n  \n  \n    Continuous integration \n    Advanced \n    7.7% \n  \n  \n    Dependency management \n    Advanced \n    15.4% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    19.2% \n  \n  \n    1 \n    38.5% \n  \n  \n    2 \n    23.1% \n  \n  \n    3 \n    11.5% \n  \n  \n    4 \n    3.8% \n  \n  \n    5 \n    3.8% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.1% \n  \n  \n    1 \n    26.9% \n  \n  \n    2 \n    26.9% \n  \n  \n    3 \n    7.7% \n  \n  \n    4 \n    7.7% \n  \n  \n    5 \n    3.8% \n  \n  \n    6 \n    3.8% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 26"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#draft-notice",
    "href": "departments/hm-revenue-and-customs.html#draft-notice",
    "title": "Department summary: HM Revenue and Customs",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#coding-frequency-and-tools",
    "href": "departments/hm-revenue-and-customs.html#coding-frequency-and-tools",
    "title": "Department summary: HM Revenue and Customs",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.2% \n  \n  \n    Rarely \n    12.9% \n  \n  \n    Sometimes \n    24.7% \n  \n  \n    Regularly \n    29.4% \n  \n  \n    All the time \n    24.7% \n  \n\n\n\na Sample size = 85\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    88.6% \n    11.4% \n  \n  \n    Data cleaning \n    91.5% \n    8.5% \n  \n  \n    Data linking \n    88.1% \n    11.9% \n  \n  \n    Data transfer / migration \n    73.9% \n    26.1% \n  \n  \n    Data visualisation \n    67.1% \n    32.9% \n  \n  \n    Machine learning \n    81% \n    19% \n  \n  \n    Modelling \n    85.4% \n    14.6% \n  \n  \n    Quality assurance \n    71.1% \n    28.9% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.9% \n    40% \n    54.1% \n  \n  \n    Java / Scala \n    1.2% \n    42.4% \n    56.5% \n  \n  \n    Javascript / Typescript \n    9.4% \n    40% \n    50.6% \n  \n  \n    Matlab \n    2.4% \n    40% \n    57.6% \n  \n  \n    Python \n    36.5% \n    27.1% \n    36.5% \n  \n  \n    R \n    92.9% \n    3.5% \n    3.5% \n  \n  \n    SAS \n    89.4% \n    3.5% \n    7.1% \n  \n  \n    SPSS \n    31.8% \n    38.8% \n    29.4% \n  \n  \n    SQL \n    64.7% \n    20% \n    15.3% \n  \n  \n    Stata \n    22.4% \n    47.1% \n    30.6% \n  \n  \n    VBA \n    63.5% \n    24.7% \n    11.8% \n  \n\n\n\na Sample size = 85\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.1% \n    3.5% \n    89.4% \n  \n  \n    Java / Scala \n    3.5% \n    2.4% \n    94.1% \n  \n  \n    Javascript / Typescript \n    10.6% \n    1.2% \n    88.2% \n  \n  \n    Matlab \n    20% \n    3.5% \n    76.5% \n  \n  \n    Python \n    32.9% \n    5.9% \n    61.2% \n  \n  \n    R \n    69.4% \n    1.2% \n    29.4% \n  \n  \n    SAS \n    72.9% \n    2.4% \n    24.7% \n  \n  \n    SPSS \n    22.4% \n    3.5% \n    74.1% \n  \n  \n    SQL \n    67.1% \n    2.4% \n    30.6% \n  \n  \n    Stata \n    5.9% \n    2.4% \n    91.8% \n  \n  \n    VBA \n    25.9% \n    7.1% \n    67.1% \n  \n\n\n\na Sample size = 85\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    33.3% \n    22.2% \n    44.4% \n  \n  \n    Java / Scala \n    0% \n    33.3% \n    66.7% \n  \n  \n    Javascript / Typescript \n    30.8% \n    30.8% \n    38.5% \n  \n  \n    Matlab \n    10.5% \n    0% \n    89.5% \n  \n  \n    Python \n    41.7% \n    22.9% \n    35.4% \n  \n  \n    R \n    27.2% \n    70.4% \n    2.5% \n  \n  \n    SAS \n    21.5% \n    74.7% \n    3.8% \n  \n  \n    SPSS \n    45.7% \n    31.4% \n    22.9% \n  \n  \n    SQL \n    13.6% \n    69.7% \n    16.7% \n  \n  \n    Stata \n    77.3% \n    9.1% \n    13.6% \n  \n  \n    VBA \n    59.3% \n    40.7% \n    0%"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#coding-capability",
    "href": "departments/hm-revenue-and-customs.html#coding-capability",
    "title": "Department summary: HM Revenue and Customs",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7.5% \n  \n  \n    Slightly worse \n    17.9% \n  \n  \n    No change \n    17.9% \n  \n  \n    Slightly better \n    34.3% \n  \n  \n    Significantly better \n    22.4% \n  \n\n\n\na Sample size = 67\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    17.3% \n  \n  \n    In education \n    49.4% \n  \n  \n    In private sector employment \n    2.5% \n  \n  \n    In public sector employment \n    13.6% \n  \n  \n    Self-taught \n    17.3% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 81"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#coding-practices",
    "href": "departments/hm-revenue-and-customs.html#coding-practices",
    "title": "Department summary: HM Revenue and Customs",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    29.5% \n    5.1% \n    11.5% \n    20.5% \n    25.6% \n    7.7% \n  \n  \n    Automated data quality assurance \n    2.6% \n    17.9% \n    15.4% \n    26.9% \n    26.9% \n    10.3% \n  \n  \n    Code review \n    0% \n    1.3% \n    9% \n    25.6% \n    30.8% \n    33.3% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    3.8% \n    10.3% \n    30.8% \n    41% \n    14.1% \n  \n  \n    Functions \n    0% \n    6.4% \n    3.8% \n    26.9% \n    32.1% \n    30.8% \n  \n  \n    Open source own code \n    9% \n    55.1% \n    16.7% \n    15.4% \n    3.8% \n    0% \n  \n  \n    Packaging code \n    9% \n    38.5% \n    15.4% \n    20.5% \n    15.4% \n    1.3% \n  \n  \n    Standard directory structure \n    19.2% \n    15.4% \n    9% \n    24.4% \n    19.2% \n    12.8% \n  \n  \n    Unit testing \n    24.4% \n    11.5% \n    10.3% \n    32.1% \n    17.9% \n    3.8% \n  \n  \n    Use open source software \n    5.1% \n    21.8% \n    7.7% \n    19.2% \n    24.4% \n    21.8% \n  \n  \n    Version control \n    5.1% \n    39.7% \n    14.1% \n    10.3% \n    16.7% \n    14.1% \n  \n\n\n\na Sample size = 78\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    16.7% \n    17.9% \n    17.9% \n    28.2% \n    12.8% \n    6.4% \n  \n  \n    Code comments \n    1.3% \n    2.6% \n    1.3% \n    11.5% \n    20.5% \n    62.8% \n  \n  \n    Data or assumptions registers \n    16.7% \n    23.1% \n    24.4% \n    15.4% \n    11.5% \n    9% \n  \n  \n    Desk notes \n    24.4% \n    23.1% \n    14.1% \n    15.4% \n    19.2% \n    3.8% \n  \n  \n    Documentation for each function or class \n    10.3% \n    19.2% \n    15.4% \n    21.8% \n    17.9% \n    15.4% \n  \n  \n    Flow charts \n    7.7% \n    32.1% \n    15.4% \n    26.9% \n    15.4% \n    2.6% \n  \n  \n    README files \n    7.7% \n    19.2% \n    10.3% \n    25.6% \n    21.8% \n    15.4% \n  \n\n\n\na Sample size = 78\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    25.6% \n  \n  \n    No \n    47.4% \n  \n  \n    I don't know what dependency management is \n    26.9% \n  \n\n\n\na Sample size = 78\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    10.3% \n  \n  \n    No \n    52.6% \n  \n  \n    I don't know what continuous integration is \n    37.2% \n  \n\n\n\na Sample size = 78\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    5.1% \n  \n  \n    No \n    66.7% \n  \n  \n    I don't know what reproducible workflows are \n    28.2% \n  \n\n\n\na Sample size = 78"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#rap-knowledge-and-opinions",
    "href": "departments/hm-revenue-and-customs.html#rap-knowledge-and-opinions",
    "title": "Department summary: HM Revenue and Customs",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    13.3% \n  \n  \n    I don't know what a RAP champion is \n    8.4% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    34.9% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    1.2% \n  \n  \n    I know who the RAP champion in my department is \n    42.2% \n  \n\n\n\na Sample size = 83\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.9% \n    21.6% \n    25.7% \n    18.9% \n    18.9% \n  \n  \n    I feel confident implementing RAP in my work \n    5.4% \n    18.9% \n    21.6% \n    37.8% \n    16.2% \n  \n  \n    I feel supported to implement RAP in my work \n    6.8% \n    8.1% \n    27% \n    37.8% \n    20.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.4% \n    16.2% \n    10.8% \n    43.2% \n    24.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    13.5% \n    8.1% \n    29.7% \n    29.7% \n    18.9% \n  \n  \n    I think it is important to implement RAP in my work \n    2.7% \n    4.1% \n    18.9% \n    43.2% \n    31.1% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.4% \n    8.1% \n    17.6% \n    47.3% \n    21.6% \n  \n\n\n\na Sample size = 74"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#rap-scores",
    "href": "departments/hm-revenue-and-customs.html#rap-scores",
    "title": "Department summary: HM Revenue and Customs",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    46.2% \n  \n  \n    Team open source code \n    Basic \n    3.8% \n  \n  \n    Version control \n    Basic \n    30.8% \n  \n  \n    Peer review \n    Basic \n    64.1% \n  \n  \n    AQUA book guidance \n    Basic \n    33.3% \n  \n  \n    Documentation \n    Basic \n    35.9% \n  \n  \n    Functions \n    Advanced \n    62.8% \n  \n  \n    Unit testing \n    Advanced \n    21.8% \n  \n  \n    Function documentation \n    Advanced \n    33.3% \n  \n  \n    Code packages \n    Advanced \n    16.7% \n  \n  \n    Follow code style guidelines \n    Advanced \n    55.1% \n  \n  \n    Continuous integration \n    Advanced \n    10.3% \n  \n  \n    Dependency management \n    Advanced \n    25.6% \n  \n\n\n\na Sample size = 78\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    17.9% \n  \n  \n    1 \n    19.2% \n  \n  \n    2 \n    25.6% \n  \n  \n    3 \n    17.9% \n  \n  \n    4 \n    7.7% \n  \n  \n    5 \n    10.3% \n  \n  \n    6 \n    1.3% \n  \n\n\n\na Sample size = 78\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    21.8% \n  \n  \n    1 \n    19.2% \n  \n  \n    2 \n    14.1% \n  \n  \n    3 \n    20.5% \n  \n  \n    4 \n    10.3% \n  \n  \n    5 \n    10.3% \n  \n  \n    6 \n    2.6% \n  \n  \n    7 \n    1.3% \n  \n\n\n\na Sample size = 78"
  },
  {
    "objectID": "departments/ministry-of-defence.html#draft-notice",
    "href": "departments/ministry-of-defence.html#draft-notice",
    "title": "Department summary: Ministry of Defence",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/ministry-of-defence.html#coding-frequency-and-tools",
    "href": "departments/ministry-of-defence.html#coding-frequency-and-tools",
    "title": "Department summary: Ministry of Defence",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    15.2% \n  \n  \n    Rarely \n    15.2% \n  \n  \n    Sometimes \n    39.4% \n  \n  \n    Regularly \n    24.2% \n  \n  \n    All the time \n    6.1% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    73.3% \n    26.7% \n  \n  \n    Data cleaning \n    80.8% \n    19.2% \n  \n  \n    Data linking \n    76.2% \n    23.8% \n  \n  \n    Data transfer / migration \n    72.2% \n    27.8% \n  \n  \n    Data visualisation \n    50% \n    50% \n  \n  \n    Machine learning \n    75% \n    25% \n  \n  \n    Modelling \n    70% \n    30% \n  \n  \n    Quality assurance \n    45.2% \n    54.8% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.1% \n    54.5% \n    39.4% \n  \n  \n    Java / Scala \n    9.1% \n    60.6% \n    30.3% \n  \n  \n    Javascript / Typescript \n    18.2% \n    60.6% \n    21.2% \n  \n  \n    Matlab \n    9.1% \n    51.5% \n    39.4% \n  \n  \n    Python \n    66.7% \n    15.2% \n    18.2% \n  \n  \n    R \n    87.9% \n    0% \n    12.1% \n  \n  \n    SAS \n    12.1% \n    48.5% \n    39.4% \n  \n  \n    SPSS \n    51.5% \n    24.2% \n    24.2% \n  \n  \n    SQL \n    75.8% \n    12.1% \n    12.1% \n  \n  \n    Stata \n    12.1% \n    63.6% \n    24.2% \n  \n  \n    VBA \n    69.7% \n    21.2% \n    9.1% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    9.1% \n    0% \n    90.9% \n  \n  \n    Java / Scala \n    3% \n    0% \n    97% \n  \n  \n    Javascript / Typescript \n    12.1% \n    0% \n    87.9% \n  \n  \n    Matlab \n    12.1% \n    3% \n    84.8% \n  \n  \n    Python \n    18.2% \n    0% \n    81.8% \n  \n  \n    R \n    57.6% \n    0% \n    42.4% \n  \n  \n    SAS \n    18.2% \n    3% \n    78.8% \n  \n  \n    SPSS \n    36.4% \n    0% \n    63.6% \n  \n  \n    SQL \n    63.6% \n    0% \n    36.4% \n  \n  \n    Stata \n    12.1% \n    0% \n    87.9% \n  \n  \n    VBA \n    48.5% \n    0% \n    51.5% \n  \n\n\n\na Sample size = 33\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    25% \n    25% \n    50% \n  \n  \n    Java / Scala \n    66.7% \n    33.3% \n    0% \n  \n  \n    Javascript / Typescript \n    33.3% \n    66.7% \n    0% \n  \n  \n    Matlab \n    33.3% \n    16.7% \n    50% \n  \n  \n    Python \n    72.7% \n    27.3% \n    0% \n  \n  \n    R \n    38.7% \n    54.8% \n    6.5% \n  \n  \n    SAS \n    33.3% \n    11.1% \n    55.6% \n  \n  \n    SPSS \n    40% \n    45% \n    15% \n  \n  \n    SQL \n    22.2% \n    70.4% \n    7.4% \n  \n  \n    Stata \n    50% \n    0% \n    50% \n  \n  \n    VBA \n    30.4% \n    69.6% \n    0%"
  },
  {
    "objectID": "departments/ministry-of-defence.html#coding-capability",
    "href": "departments/ministry-of-defence.html#coding-capability",
    "title": "Department summary: Ministry of Defence",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    4.5% \n  \n  \n    Slightly worse \n    4.5% \n  \n  \n    No change \n    27.3% \n  \n  \n    Slightly better \n    40.9% \n  \n  \n    Significantly better \n    22.7% \n  \n\n\n\na Sample size = 22\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    27.6% \n  \n  \n    In education \n    31% \n  \n  \n    In private sector employment \n    3.4% \n  \n  \n    In public sector employment \n    10.3% \n  \n  \n    Self-taught \n    27.6% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 29"
  },
  {
    "objectID": "departments/ministry-of-defence.html#coding-practices",
    "href": "departments/ministry-of-defence.html#coding-practices",
    "title": "Department summary: Ministry of Defence",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    21.4% \n    25% \n    14.3% \n    10.7% \n    17.9% \n    10.7% \n  \n  \n    Automated data quality assurance \n    7.1% \n    17.9% \n    21.4% \n    25% \n    10.7% \n    17.9% \n  \n  \n    Code review \n    0% \n    7.1% \n    25% \n    39.3% \n    21.4% \n    7.1% \n  \n  \n    Coding guidelines / Style guides \n    3.6% \n    7.1% \n    28.6% \n    28.6% \n    10.7% \n    21.4% \n  \n  \n    Functions \n    0% \n    7.1% \n    14.3% \n    32.1% \n    21.4% \n    25% \n  \n  \n    Open source own code \n    7.1% \n    71.4% \n    3.6% \n    14.3% \n    0% \n    3.6% \n  \n  \n    Packaging code \n    17.9% \n    35.7% \n    21.4% \n    14.3% \n    10.7% \n    0% \n  \n  \n    Standard directory structure \n    17.9% \n    17.9% \n    10.7% \n    17.9% \n    17.9% \n    17.9% \n  \n  \n    Unit testing \n    21.4% \n    10.7% \n    21.4% \n    17.9% \n    17.9% \n    10.7% \n  \n  \n    Use open source software \n    10.7% \n    28.6% \n    14.3% \n    7.1% \n    17.9% \n    21.4% \n  \n  \n    Version control \n    3.6% \n    42.9% \n    7.1% \n    7.1% \n    28.6% \n    10.7% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    21.4% \n    25% \n    17.9% \n    21.4% \n    3.6% \n    10.7% \n  \n  \n    Code comments \n    0% \n    3.6% \n    0% \n    10.7% \n    28.6% \n    57.1% \n  \n  \n    Data or assumptions registers \n    32.1% \n    32.1% \n    14.3% \n    7.1% \n    7.1% \n    7.1% \n  \n  \n    Desk notes \n    3.6% \n    14.3% \n    3.6% \n    25% \n    14.3% \n    39.3% \n  \n  \n    Documentation for each function or class \n    10.7% \n    21.4% \n    17.9% \n    21.4% \n    21.4% \n    7.1% \n  \n  \n    Flow charts \n    0% \n    28.6% \n    28.6% \n    32.1% \n    3.6% \n    7.1% \n  \n  \n    README files \n    3.6% \n    25% \n    7.1% \n    42.9% \n    17.9% \n    3.6% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    14.3% \n  \n  \n    No \n    32.1% \n  \n  \n    I don't know what dependency management is \n    53.6% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    17.9% \n  \n  \n    No \n    42.9% \n  \n  \n    I don't know what continuous integration is \n    39.3% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    3.6% \n  \n  \n    No \n    46.4% \n  \n  \n    I don't know what reproducible workflows are \n    50% \n  \n\n\n\na Sample size = 28"
  },
  {
    "objectID": "departments/ministry-of-defence.html#rap-knowledge-and-opinions",
    "href": "departments/ministry-of-defence.html#rap-knowledge-and-opinions",
    "title": "Department summary: Ministry of Defence",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    32.3% \n  \n  \n    I don't know what a RAP champion is \n    22.6% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    35.5% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    9.7% \n  \n\n\n\na Sample size = 31\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    21.7% \n    17.4% \n    17.4% \n    30.4% \n    13% \n  \n  \n    I feel confident implementing RAP in my work \n    30.4% \n    17.4% \n    13% \n    21.7% \n    17.4% \n  \n  \n    I feel supported to implement RAP in my work \n    8.7% \n    4.3% \n    39.1% \n    30.4% \n    17.4% \n  \n  \n    I know where to find resources to help me implement RAP \n    17.4% \n    26.1% \n    13% \n    21.7% \n    21.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    13% \n    4.3% \n    30.4% \n    26.1% \n    26.1% \n  \n  \n    I think it is important to implement RAP in my work \n    8.7% \n    4.3% \n    21.7% \n    26.1% \n    39.1% \n  \n  \n    I understand what the key components of the RAP methodology are \n    21.7% \n    26.1% \n    4.3% \n    26.1% \n    21.7% \n  \n\n\n\na Sample size = 23"
  },
  {
    "objectID": "departments/ministry-of-defence.html#rap-scores",
    "href": "departments/ministry-of-defence.html#rap-scores",
    "title": "Department summary: Ministry of Defence",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    39.3% \n  \n  \n    Team open source code \n    Basic \n    3.6% \n  \n  \n    Version control \n    Basic \n    39.3% \n  \n  \n    Peer review \n    Basic \n    28.6% \n  \n  \n    AQUA book guidance \n    Basic \n    28.6% \n  \n  \n    Documentation \n    Basic \n    21.4% \n  \n  \n    Functions \n    Advanced \n    46.4% \n  \n  \n    Unit testing \n    Advanced \n    28.6% \n  \n  \n    Function documentation \n    Advanced \n    28.6% \n  \n  \n    Code packages \n    Advanced \n    10.7% \n  \n  \n    Follow code style guidelines \n    Advanced \n    32.1% \n  \n  \n    Continuous integration \n    Advanced \n    17.9% \n  \n  \n    Dependency management \n    Advanced \n    14.3% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    25% \n  \n  \n    1 \n    28.6% \n  \n  \n    2 \n    17.9% \n  \n  \n    3 \n    17.9% \n  \n  \n    4 \n    10.7% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    21.4% \n  \n  \n    1 \n    25% \n  \n  \n    2 \n    28.6% \n  \n  \n    3 \n    10.7% \n  \n  \n    4 \n    10.7% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    3.6% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 28"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#draft-notice",
    "href": "departments/ministry-of-justice-excl-agencies-.html#draft-notice",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/ministry-of-justice-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    1.9% \n  \n  \n    Rarely \n    9.6% \n  \n  \n    Sometimes \n    15.4% \n  \n  \n    Regularly \n    30.8% \n  \n  \n    All the time \n    42.3% \n  \n\n\n\na Sample size = 52\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    96.1% \n    3.9% \n  \n  \n    Data cleaning \n    93.8% \n    6.2% \n  \n  \n    Data linking \n    92.3% \n    7.7% \n  \n  \n    Data transfer / migration \n    76.9% \n    23.1% \n  \n  \n    Data visualisation \n    74.4% \n    25.6% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    91.7% \n    8.3% \n  \n  \n    Quality assurance \n    70% \n    30% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.8% \n    59.6% \n    34.6% \n  \n  \n    Java / Scala \n    11.5% \n    59.6% \n    28.8% \n  \n  \n    Javascript / Typescript \n    15.4% \n    55.8% \n    28.8% \n  \n  \n    Matlab \n    1.9% \n    55.8% \n    42.3% \n  \n  \n    Python \n    90.4% \n    7.7% \n    1.9% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SAS \n    42.3% \n    28.8% \n    28.8% \n  \n  \n    SPSS \n    3.8% \n    55.8% \n    40.4% \n  \n  \n    SQL \n    92.3% \n    3.8% \n    3.8% \n  \n  \n    Stata \n    5.8% \n    51.9% \n    42.3% \n  \n  \n    VBA \n    53.8% \n    34.6% \n    11.5% \n  \n\n\n\na Sample size = 52\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    9.6% \n    3.8% \n    86.5% \n  \n  \n    Java / Scala \n    0% \n    5.8% \n    94.2% \n  \n  \n    Javascript / Typescript \n    9.6% \n    3.8% \n    86.5% \n  \n  \n    Matlab \n    19.2% \n    5.8% \n    75% \n  \n  \n    Python \n    46.2% \n    1.9% \n    51.9% \n  \n  \n    R \n    90.4% \n    0% \n    9.6% \n  \n  \n    SAS \n    32.7% \n    1.9% \n    65.4% \n  \n  \n    SPSS \n    32.7% \n    9.6% \n    57.7% \n  \n  \n    SQL \n    86.5% \n    0% \n    13.5% \n  \n  \n    Stata \n    15.4% \n    5.8% \n    78.8% \n  \n  \n    VBA \n    26.9% \n    3.8% \n    69.2% \n  \n\n\n\na Sample size = 52\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    37.5% \n    0% \n    62.5% \n  \n  \n    Java / Scala \n    100% \n    0% \n    0% \n  \n  \n    Javascript / Typescript \n    54.5% \n    18.2% \n    27.3% \n  \n  \n    Matlab \n    9.1% \n    0% \n    90.9% \n  \n  \n    Python \n    51% \n    44.9% \n    4.1% \n  \n  \n    R \n    9.6% \n    90.4% \n    0% \n  \n  \n    SAS \n    43.3% \n    30% \n    26.7% \n  \n  \n    SPSS \n    10.5% \n    0% \n    89.5% \n  \n  \n    SQL \n    11.8% \n    82.4% \n    5.9% \n  \n  \n    Stata \n    11.1% \n    22.2% \n    66.7% \n  \n  \n    VBA \n    50% \n    50% \n    0%"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#coding-capability",
    "href": "departments/ministry-of-justice-excl-agencies-.html#coding-capability",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    8.5% \n  \n  \n    No change \n    19.1% \n  \n  \n    Slightly better \n    38.3% \n  \n  \n    Significantly better \n    34% \n  \n\n\n\na Sample size = 47\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    11.5% \n  \n  \n    In education \n    40.4% \n  \n  \n    In private sector employment \n    1.9% \n  \n  \n    In public sector employment \n    23.1% \n  \n  \n    Self-taught \n    21.2% \n  \n  \n    Other \n    1.9% \n  \n\n\n\na Sample size = 52"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#coding-practices",
    "href": "departments/ministry-of-justice-excl-agencies-.html#coding-practices",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    27.5% \n    13.7% \n    11.8% \n    25.5% \n    15.7% \n    5.9% \n  \n  \n    Automated data quality assurance \n    2% \n    17.6% \n    23.5% \n    21.6% \n    21.6% \n    13.7% \n  \n  \n    Code review \n    0% \n    2% \n    5.9% \n    25.5% \n    45.1% \n    21.6% \n  \n  \n    Coding guidelines / Style guides \n    2% \n    9.8% \n    5.9% \n    31.4% \n    27.5% \n    23.5% \n  \n  \n    Functions \n    3.9% \n    3.9% \n    13.7% \n    25.5% \n    13.7% \n    39.2% \n  \n  \n    Open source own code \n    9.8% \n    37.3% \n    9.8% \n    25.5% \n    7.8% \n    9.8% \n  \n  \n    Packaging code \n    3.9% \n    49% \n    11.8% \n    19.6% \n    7.8% \n    7.8% \n  \n  \n    Standard directory structure \n    17.6% \n    15.7% \n    11.8% \n    21.6% \n    19.6% \n    13.7% \n  \n  \n    Unit testing \n    21.6% \n    19.6% \n    15.7% \n    15.7% \n    11.8% \n    15.7% \n  \n  \n    Use open source software \n    5.9% \n    2% \n    7.8% \n    17.6% \n    23.5% \n    43.1% \n  \n  \n    Version control \n    0% \n    5.9% \n    5.9% \n    11.8% \n    29.4% \n    47.1% \n  \n\n\n\na Sample size = 51\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    17.6% \n    9.8% \n    15.7% \n    21.6% \n    27.5% \n    7.8% \n  \n  \n    Code comments \n    2% \n    2% \n    0% \n    5.9% \n    41.2% \n    49% \n  \n  \n    Data or assumptions registers \n    9.8% \n    15.7% \n    11.8% \n    19.6% \n    27.5% \n    15.7% \n  \n  \n    Desk notes \n    29.4% \n    13.7% \n    15.7% \n    17.6% \n    21.6% \n    2% \n  \n  \n    Documentation for each function or class \n    9.8% \n    23.5% \n    13.7% \n    17.6% \n    19.6% \n    15.7% \n  \n  \n    Flow charts \n    2% \n    43.1% \n    23.5% \n    23.5% \n    7.8% \n    0% \n  \n  \n    README files \n    2% \n    5.9% \n    25.5% \n    19.6% \n    19.6% \n    27.5% \n  \n\n\n\na Sample size = 51\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    62.7% \n  \n  \n    No \n    15.7% \n  \n  \n    I don't know what dependency management is \n    21.6% \n  \n\n\n\na Sample size = 51\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    31.4% \n  \n  \n    No \n    23.5% \n  \n  \n    I don't know what continuous integration is \n    45.1% \n  \n\n\n\na Sample size = 51\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    3.9% \n  \n  \n    No \n    58.8% \n  \n  \n    I don't know what reproducible workflows are \n    37.3% \n  \n\n\n\na Sample size = 51"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/ministry-of-justice-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    9.8% \n  \n  \n    I don't know what a RAP champion is \n    17.6% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    41.2% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    2% \n  \n  \n    I know who the RAP champion in my department is \n    29.4% \n  \n\n\n\na Sample size = 51\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    8.5% \n    19.1% \n    19.1% \n    34% \n    19.1% \n  \n  \n    I feel confident implementing RAP in my work \n    8.5% \n    21.3% \n    12.8% \n    38.3% \n    19.1% \n  \n  \n    I feel supported to implement RAP in my work \n    2.1% \n    14.9% \n    14.9% \n    48.9% \n    19.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    2.1% \n    19.1% \n    23.4% \n    36.2% \n    19.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    4.3% \n    6.4% \n    29.8% \n    42.6% \n    17% \n  \n  \n    I think it is important to implement RAP in my work \n    4.3% \n    2.1% \n    10.6% \n    53.2% \n    29.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    4.3% \n    27.7% \n    14.9% \n    38.3% \n    14.9% \n  \n\n\n\na Sample size = 47"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#rap-scores",
    "href": "departments/ministry-of-justice-excl-agencies-.html#rap-scores",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    66.7% \n  \n  \n    Team open source code \n    Basic \n    17.6% \n  \n  \n    Version control \n    Basic \n    76.5% \n  \n  \n    Peer review \n    Basic \n    66.7% \n  \n  \n    AQUA book guidance \n    Basic \n    21.6% \n  \n  \n    Documentation \n    Basic \n    47.1% \n  \n  \n    Functions \n    Advanced \n    52.9% \n  \n  \n    Unit testing \n    Advanced \n    27.5% \n  \n  \n    Function documentation \n    Advanced \n    35.3% \n  \n  \n    Code packages \n    Advanced \n    15.7% \n  \n  \n    Follow code style guidelines \n    Advanced \n    51% \n  \n  \n    Continuous integration \n    Advanced \n    31.4% \n  \n  \n    Dependency management \n    Advanced \n    62.7% \n  \n\n\n\na Sample size = 51\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    7.8% \n  \n  \n    1 \n    7.8% \n  \n  \n    2 \n    23.5% \n  \n  \n    3 \n    19.6% \n  \n  \n    4 \n    25.5% \n  \n  \n    5 \n    13.7% \n  \n  \n    6 \n    2% \n  \n\n\n\na Sample size = 51\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    19.6% \n  \n  \n    1 \n    11.8% \n  \n  \n    2 \n    21.6% \n  \n  \n    3 \n    13.7% \n  \n  \n    4 \n    9.8% \n  \n  \n    5 \n    5.9% \n  \n  \n    6 \n    11.8% \n  \n  \n    7 \n    5.9% \n  \n\n\n\na Sample size = 51"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#draft-notice",
    "href": "departments/national-records-of-scotland.html#draft-notice",
    "title": "Department summary: National Records of Scotland",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/national-records-of-scotland.html#coding-frequency-and-tools",
    "href": "departments/national-records-of-scotland.html#coding-frequency-and-tools",
    "title": "Department summary: National Records of Scotland",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    6.9% \n  \n  \n    Rarely \n    13.8% \n  \n  \n    Sometimes \n    20.7% \n  \n  \n    Regularly \n    51.7% \n  \n  \n    All the time \n    6.9% \n  \n\n\n\na Sample size = 29\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    81.5% \n    18.5% \n  \n  \n    Data cleaning \n    95.8% \n    4.2% \n  \n  \n    Data linking \n    92.9% \n    7.1% \n  \n  \n    Data transfer / migration \n    33.3% \n    66.7% \n  \n  \n    Data visualisation \n    76% \n    24% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    90.9% \n    9.1% \n  \n  \n    Quality assurance \n    57.7% \n    42.3% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    48.3% \n    51.7% \n  \n  \n    Java / Scala \n    3.4% \n    51.7% \n    44.8% \n  \n  \n    Javascript / Typescript \n    3.4% \n    51.7% \n    44.8% \n  \n  \n    Matlab \n    0% \n    51.7% \n    48.3% \n  \n  \n    Python \n    37.9% \n    44.8% \n    17.2% \n  \n  \n    R \n    96.6% \n    0% \n    3.4% \n  \n  \n    SAS \n    100% \n    0% \n    0% \n  \n  \n    SPSS \n    17.2% \n    41.4% \n    41.4% \n  \n  \n    SQL \n    41.4% \n    41.4% \n    17.2% \n  \n  \n    Stata \n    10.3% \n    44.8% \n    44.8% \n  \n  \n    VBA \n    55.2% \n    27.6% \n    17.2% \n  \n\n\n\na Sample size = 29\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.9% \n    3.4% \n    89.7% \n  \n  \n    Java / Scala \n    10.3% \n    6.9% \n    82.8% \n  \n  \n    Javascript / Typescript \n    6.9% \n    6.9% \n    86.2% \n  \n  \n    Matlab \n    17.2% \n    3.4% \n    79.3% \n  \n  \n    Python \n    34.5% \n    3.4% \n    62.1% \n  \n  \n    R \n    82.8% \n    0% \n    17.2% \n  \n  \n    SAS \n    86.2% \n    0% \n    13.8% \n  \n  \n    SPSS \n    37.9% \n    13.8% \n    48.3% \n  \n  \n    SQL \n    27.6% \n    10.3% \n    62.1% \n  \n  \n    Stata \n    10.3% \n    6.9% \n    82.8% \n  \n  \n    VBA \n    24.1% \n    10.3% \n    65.5% \n  \n\n\n\na Sample size = 29\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    0% \n    0% \n    100% \n  \n  \n    Java / Scala \n    25% \n    0% \n    75% \n  \n  \n    Javascript / Typescript \n    33.3% \n    0% \n    66.7% \n  \n  \n    Matlab \n    0% \n    0% \n    100% \n  \n  \n    Python \n    44.4% \n    16.7% \n    38.9% \n  \n  \n    R \n    17.2% \n    79.3% \n    3.4% \n  \n  \n    SAS \n    13.8% \n    86.2% \n    0% \n  \n  \n    SPSS \n    21.4% \n    14.3% \n    64.3% \n  \n  \n    SQL \n    46.7% \n    33.3% \n    20% \n  \n  \n    Stata \n    50% \n    0% \n    50% \n  \n  \n    VBA \n    56.2% \n    43.8% \n    0%"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#coding-capability",
    "href": "departments/national-records-of-scotland.html#coding-capability",
    "title": "Department summary: National Records of Scotland",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.6% \n  \n  \n    Slightly worse \n    21.4% \n  \n  \n    No change \n    14.3% \n  \n  \n    Slightly better \n    32.1% \n  \n  \n    Significantly better \n    28.6% \n  \n\n\n\na Sample size = 28\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    3.4% \n  \n  \n    In education \n    79.3% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    3.4% \n  \n  \n    Self-taught \n    13.8% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 29"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#coding-practices",
    "href": "departments/national-records-of-scotland.html#coding-practices",
    "title": "Department summary: National Records of Scotland",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    77.8% \n    7.4% \n    3.7% \n    3.7% \n    7.4% \n    0% \n  \n  \n    Automated data quality assurance \n    7.4% \n    14.8% \n    22.2% \n    29.6% \n    22.2% \n    3.7% \n  \n  \n    Code review \n    0% \n    11.1% \n    11.1% \n    48.1% \n    29.6% \n    0% \n  \n  \n    Coding guidelines / Style guides \n    7.4% \n    14.8% \n    11.1% \n    29.6% \n    25.9% \n    11.1% \n  \n  \n    Functions \n    0% \n    3.7% \n    3.7% \n    48.1% \n    29.6% \n    14.8% \n  \n  \n    Open source own code \n    3.7% \n    59.3% \n    14.8% \n    14.8% \n    3.7% \n    3.7% \n  \n  \n    Packaging code \n    11.1% \n    59.3% \n    14.8% \n    14.8% \n    0% \n    0% \n  \n  \n    Standard directory structure \n    40.7% \n    11.1% \n    7.4% \n    18.5% \n    14.8% \n    7.4% \n  \n  \n    Unit testing \n    29.6% \n    11.1% \n    14.8% \n    33.3% \n    11.1% \n    0% \n  \n  \n    Use open source software \n    0% \n    11.1% \n    11.1% \n    37% \n    18.5% \n    22.2% \n  \n  \n    Version control \n    3.7% \n    48.1% \n    3.7% \n    18.5% \n    14.8% \n    11.1% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    29.6% \n    37% \n    18.5% \n    7.4% \n    7.4% \n    0% \n  \n  \n    Code comments \n    3.7% \n    3.7% \n    3.7% \n    14.8% \n    29.6% \n    44.4% \n  \n  \n    Data or assumptions registers \n    25.9% \n    40.7% \n    11.1% \n    7.4% \n    11.1% \n    3.7% \n  \n  \n    Desk notes \n    0% \n    7.4% \n    11.1% \n    29.6% \n    37% \n    14.8% \n  \n  \n    Documentation for each function or class \n    18.5% \n    25.9% \n    14.8% \n    22.2% \n    18.5% \n    0% \n  \n  \n    Flow charts \n    3.7% \n    37% \n    22.2% \n    33.3% \n    3.7% \n    0% \n  \n  \n    README files \n    7.4% \n    18.5% \n    7.4% \n    25.9% \n    37% \n    3.7% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    3.7% \n  \n  \n    No \n    37% \n  \n  \n    I don't know what dependency management is \n    59.3% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    3.7% \n  \n  \n    No \n    33.3% \n  \n  \n    I don't know what continuous integration is \n    63% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    55.6% \n  \n  \n    I don't know what reproducible workflows are \n    44.4% \n  \n\n\n\na Sample size = 27"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#rap-knowledge-and-opinions",
    "href": "departments/national-records-of-scotland.html#rap-knowledge-and-opinions",
    "title": "Department summary: National Records of Scotland",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    7.4% \n  \n  \n    I don't know what a RAP champion is \n    18.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    29.6% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    3.7% \n  \n  \n    I know who the RAP champion in my department is \n    40.7% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.8% \n    18.5% \n    22.2% \n    29.6% \n    14.8% \n  \n  \n    I feel confident implementing RAP in my work \n    7.4% \n    14.8% \n    22.2% \n    40.7% \n    14.8% \n  \n  \n    I feel supported to implement RAP in my work \n    3.7% \n    7.4% \n    25.9% \n    48.1% \n    14.8% \n  \n  \n    I know where to find resources to help me implement RAP \n    3.7% \n    11.1% \n    14.8% \n    51.9% \n    18.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    11.1% \n    14.8% \n    11.1% \n    44.4% \n    18.5% \n  \n  \n    I think it is important to implement RAP in my work \n    3.7% \n    3.7% \n    18.5% \n    48.1% \n    25.9% \n  \n  \n    I understand what the key components of the RAP methodology are \n    7.4% \n    7.4% \n    22.2% \n    51.9% \n    11.1% \n  \n\n\n\na Sample size = 27"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#rap-scores",
    "href": "departments/national-records-of-scotland.html#rap-scores",
    "title": "Department summary: National Records of Scotland",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    40.7% \n  \n  \n    Team open source code \n    Basic \n    7.4% \n  \n  \n    Version control \n    Basic \n    25.9% \n  \n  \n    Peer review \n    Basic \n    29.6% \n  \n  \n    AQUA book guidance \n    Basic \n    7.4% \n  \n  \n    Documentation \n    Basic \n    29.6% \n  \n  \n    Functions \n    Advanced \n    44.4% \n  \n  \n    Unit testing \n    Advanced \n    11.1% \n  \n  \n    Function documentation \n    Advanced \n    18.5% \n  \n  \n    Code packages \n    Advanced \n    0% \n  \n  \n    Follow code style guidelines \n    Advanced \n    37% \n  \n  \n    Continuous integration \n    Advanced \n    3.7% \n  \n  \n    Dependency management \n    Advanced \n    3.7% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    25.9% \n  \n  \n    1 \n    33.3% \n  \n  \n    2 \n    18.5% \n  \n  \n    3 \n    18.5% \n  \n  \n    4 \n    3.7% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    25.9% \n  \n  \n    1 \n    44.4% \n  \n  \n    2 \n    18.5% \n  \n  \n    3 \n    7.4% \n  \n  \n    4 \n    3.7% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 27"
  },
  {
    "objectID": "departments/nhs.html#draft-notice",
    "href": "departments/nhs.html#draft-notice",
    "title": "Department summary: NHS",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/nhs.html#coding-frequency-and-tools",
    "href": "departments/nhs.html#coding-frequency-and-tools",
    "title": "Department summary: NHS",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    7.4% \n  \n  \n    Rarely \n    0% \n  \n  \n    Sometimes \n    9.3% \n  \n  \n    Regularly \n    27.8% \n  \n  \n    All the time \n    55.6% \n  \n\n\n\na Sample size = 54\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    90.4% \n    9.6% \n  \n  \n    Data cleaning \n    88.2% \n    11.8% \n  \n  \n    Data linking \n    93.2% \n    6.8% \n  \n  \n    Data transfer / migration \n    80.6% \n    19.4% \n  \n  \n    Data visualisation \n    73.5% \n    26.5% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    100% \n    0% \n  \n  \n    Quality assurance \n    77.3% \n    22.7% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.6% \n    40.7% \n    53.7% \n  \n  \n    Java / Scala \n    9.3% \n    37% \n    53.7% \n  \n  \n    Javascript / Typescript \n    20.4% \n    31.5% \n    48.1% \n  \n  \n    Matlab \n    1.9% \n    37% \n    61.1% \n  \n  \n    Python \n    63% \n    18.5% \n    18.5% \n  \n  \n    R \n    98.1% \n    0% \n    1.9% \n  \n  \n    SAS \n    20.4% \n    27.8% \n    51.9% \n  \n  \n    SPSS \n    42.6% \n    14.8% \n    42.6% \n  \n  \n    SQL \n    77.8% \n    13% \n    9.3% \n  \n  \n    Stata \n    13% \n    37% \n    50% \n  \n  \n    VBA \n    51.9% \n    24.1% \n    24.1% \n  \n\n\n\na Sample size = 54\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.7% \n    1.9% \n    94.4% \n  \n  \n    Java / Scala \n    5.6% \n    1.9% \n    92.6% \n  \n  \n    Javascript / Typescript \n    7.4% \n    3.7% \n    88.9% \n  \n  \n    Matlab \n    5.6% \n    3.7% \n    90.7% \n  \n  \n    Python \n    37% \n    1.9% \n    61.1% \n  \n  \n    R \n    81.5% \n    0% \n    18.5% \n  \n  \n    SAS \n    18.5% \n    1.9% \n    79.6% \n  \n  \n    SPSS \n    46.3% \n    1.9% \n    51.9% \n  \n  \n    SQL \n    68.5% \n    1.9% \n    29.6% \n  \n  \n    Stata \n    9.3% \n    1.9% \n    88.9% \n  \n  \n    VBA \n    31.5% \n    1.9% \n    66.7% \n  \n\n\n\na Sample size = 54\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    60% \n    0% \n    40% \n  \n  \n    Java / Scala \n    62.5% \n    0% \n    37.5% \n  \n  \n    Javascript / Typescript \n    69.2% \n    15.4% \n    15.4% \n  \n  \n    Matlab \n    25% \n    0% \n    75% \n  \n  \n    Python \n    50% \n    35% \n    15% \n  \n  \n    R \n    18.5% \n    79.6% \n    1.9% \n  \n  \n    SAS \n    33.3% \n    40% \n    26.7% \n  \n  \n    SPSS \n    21.9% \n    50% \n    28.1% \n  \n  \n    SQL \n    21.3% \n    68.1% \n    10.6% \n  \n  \n    Stata \n    44.4% \n    33.3% \n    22.2% \n  \n  \n    VBA \n    41.4% \n    55.2% \n    3.4%"
  },
  {
    "objectID": "departments/nhs.html#coding-capability",
    "href": "departments/nhs.html#coding-capability",
    "title": "Department summary: NHS",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    7.5% \n  \n  \n    No change \n    5% \n  \n  \n    Slightly better \n    32.5% \n  \n  \n    Significantly better \n    55% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    25.5% \n  \n  \n    In education \n    37.3% \n  \n  \n    In private sector employment \n    2% \n  \n  \n    In public sector employment \n    11.8% \n  \n  \n    Self-taught \n    21.6% \n  \n  \n    Other \n    2% \n  \n\n\n\na Sample size = 51"
  },
  {
    "objectID": "departments/nhs.html#coding-practices",
    "href": "departments/nhs.html#coding-practices",
    "title": "Department summary: NHS",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    66% \n    12% \n    2% \n    12% \n    6% \n    2% \n  \n  \n    Automated data quality assurance \n    4% \n    18% \n    28% \n    32% \n    10% \n    8% \n  \n  \n    Code review \n    0% \n    2% \n    14% \n    34% \n    26% \n    24% \n  \n  \n    Coding guidelines / Style guides \n    2% \n    6% \n    6% \n    30% \n    42% \n    14% \n  \n  \n    Functions \n    2% \n    2% \n    8% \n    24% \n    28% \n    36% \n  \n  \n    Open source own code \n    12% \n    24% \n    20% \n    26% \n    10% \n    8% \n  \n  \n    Packaging code \n    10% \n    48% \n    8% \n    14% \n    18% \n    2% \n  \n  \n    Standard directory structure \n    22% \n    8% \n    4% \n    22% \n    30% \n    14% \n  \n  \n    Unit testing \n    14% \n    18% \n    22% \n    22% \n    24% \n    0% \n  \n  \n    Use open source software \n    10% \n    4% \n    2% \n    12% \n    20% \n    52% \n  \n  \n    Version control \n    4% \n    22% \n    8% \n    20% \n    16% \n    30% \n  \n\n\n\na Sample size = 50\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    36% \n    28% \n    12% \n    14% \n    10% \n    0% \n  \n  \n    Code comments \n    2% \n    4% \n    0% \n    12% \n    26% \n    56% \n  \n  \n    Data or assumptions registers \n    40% \n    36% \n    12% \n    6% \n    6% \n    0% \n  \n  \n    Desk notes \n    40% \n    18% \n    4% \n    16% \n    20% \n    2% \n  \n  \n    Documentation for each function or class \n    12% \n    22% \n    6% \n    28% \n    14% \n    18% \n  \n  \n    Flow charts \n    8% \n    36% \n    12% \n    34% \n    10% \n    0% \n  \n  \n    README files \n    6% \n    20% \n    18% \n    20% \n    22% \n    14% \n  \n\n\n\na Sample size = 50\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    30% \n  \n  \n    No \n    38% \n  \n  \n    I don't know what dependency management is \n    32% \n  \n\n\n\na Sample size = 50\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    20% \n  \n  \n    No \n    48% \n  \n  \n    I don't know what continuous integration is \n    32% \n  \n\n\n\na Sample size = 50\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    4% \n  \n  \n    No \n    62% \n  \n  \n    I don't know what reproducible workflows are \n    34% \n  \n\n\n\na Sample size = 50"
  },
  {
    "objectID": "departments/nhs.html#rap-knowledge-and-opinions",
    "href": "departments/nhs.html#rap-knowledge-and-opinions",
    "title": "Department summary: NHS",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    27.1% \n  \n  \n    I don't know what a RAP champion is \n    14.6% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    25% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    6.2% \n  \n  \n    I know who the RAP champion in my department is \n    27.1% \n  \n\n\n\na Sample size = 48\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    9.8% \n    31.7% \n    9.8% \n    17.1% \n    31.7% \n  \n  \n    I feel confident implementing RAP in my work \n    9.8% \n    12.2% \n    12.2% \n    46.3% \n    19.5% \n  \n  \n    I feel supported to implement RAP in my work \n    12.2% \n    12.2% \n    9.8% \n    41.5% \n    24.4% \n  \n  \n    I know where to find resources to help me implement RAP \n    7.3% \n    14.6% \n    12.2% \n    39% \n    26.8% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.3% \n    7.3% \n    22% \n    24.4% \n    39% \n  \n  \n    I think it is important to implement RAP in my work \n    4.9% \n    4.9% \n    7.3% \n    29.3% \n    53.7% \n  \n  \n    I understand what the key components of the RAP methodology are \n    4.9% \n    9.8% \n    12.2% \n    43.9% \n    29.3% \n  \n\n\n\na Sample size = 41"
  },
  {
    "objectID": "departments/nhs.html#rap-scores",
    "href": "departments/nhs.html#rap-scores",
    "title": "Department summary: NHS",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    72% \n  \n  \n    Team open source code \n    Basic \n    18% \n  \n  \n    Version control \n    Basic \n    46% \n  \n  \n    Peer review \n    Basic \n    50% \n  \n  \n    AQUA book guidance \n    Basic \n    8% \n  \n  \n    Documentation \n    Basic \n    34% \n  \n  \n    Functions \n    Advanced \n    64% \n  \n  \n    Unit testing \n    Advanced \n    24% \n  \n  \n    Function documentation \n    Advanced \n    32% \n  \n  \n    Code packages \n    Advanced \n    20% \n  \n  \n    Follow code style guidelines \n    Advanced \n    56% \n  \n  \n    Continuous integration \n    Advanced \n    20% \n  \n  \n    Dependency management \n    Advanced \n    30% \n  \n\n\n\na Sample size = 50\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14% \n  \n  \n    1 \n    24% \n  \n  \n    2 \n    22% \n  \n  \n    3 \n    14% \n  \n  \n    4 \n    16% \n  \n  \n    5 \n    6% \n  \n  \n    6 \n    4% \n  \n\n\n\na Sample size = 50\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14% \n  \n  \n    1 \n    18% \n  \n  \n    2 \n    22% \n  \n  \n    3 \n    24% \n  \n  \n    4 \n    8% \n  \n  \n    5 \n    4% \n  \n  \n    6 \n    10% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 50"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#draft-notice",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#draft-notice",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#coding-frequency-and-tools",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#coding-frequency-and-tools",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    11.1% \n  \n  \n    Rarely \n    14.8% \n  \n  \n    Sometimes \n    18.5% \n  \n  \n    Regularly \n    18.5% \n  \n  \n    All the time \n    37% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    70.4% \n    29.6% \n  \n  \n    Data cleaning \n    75% \n    25% \n  \n  \n    Data linking \n    77.8% \n    22.2% \n  \n  \n    Data transfer / migration \n    58.3% \n    41.7% \n  \n  \n    Data visualisation \n    66.7% \n    33.3% \n  \n  \n    Machine learning \n    0% \n    0% \n  \n  \n    Modelling \n    81.8% \n    18.2% \n  \n  \n    Quality assurance \n    60.9% \n    39.1% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.7% \n    48.1% \n    48.1% \n  \n  \n    Java / Scala \n    7.4% \n    40.7% \n    51.9% \n  \n  \n    Javascript / Typescript \n    18.5% \n    40.7% \n    40.7% \n  \n  \n    Matlab \n    3.7% \n    44.4% \n    51.9% \n  \n  \n    Python \n    37% \n    40.7% \n    22.2% \n  \n  \n    R \n    96.3% \n    0% \n    3.7% \n  \n  \n    SAS \n    48.1% \n    25.9% \n    25.9% \n  \n  \n    SPSS \n    88.9% \n    0% \n    11.1% \n  \n  \n    SQL \n    88.9% \n    11.1% \n    0% \n  \n  \n    Stata \n    18.5% \n    40.7% \n    40.7% \n  \n  \n    VBA \n    22.2% \n    51.9% \n    25.9% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.7% \n    0% \n    96.3% \n  \n  \n    Java / Scala \n    0% \n    0% \n    100% \n  \n  \n    Javascript / Typescript \n    11.1% \n    0% \n    88.9% \n  \n  \n    Matlab \n    0% \n    0% \n    100% \n  \n  \n    Python \n    7.4% \n    0% \n    92.6% \n  \n  \n    R \n    77.8% \n    3.7% \n    18.5% \n  \n  \n    SAS \n    29.6% \n    0% \n    70.4% \n  \n  \n    SPSS \n    77.8% \n    0% \n    22.2% \n  \n  \n    SQL \n    55.6% \n    0% \n    44.4% \n  \n  \n    Stata \n    3.7% \n    0% \n    96.3% \n  \n  \n    VBA \n    14.8% \n    0% \n    85.2% \n  \n\n\n\na Sample size = 27\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    50% \n    0% \n    50% \n  \n  \n    Java / Scala \n    100% \n    0% \n    0% \n  \n  \n    Javascript / Typescript \n    40% \n    60% \n    0% \n  \n  \n    Matlab \n    100% \n    0% \n    0% \n  \n  \n    Python \n    83.3% \n    0% \n    16.7% \n  \n  \n    R \n    22.2% \n    74.1% \n    3.7% \n  \n  \n    SAS \n    46.7% \n    40% \n    13.3% \n  \n  \n    SPSS \n    19.2% \n    73.1% \n    7.7% \n  \n  \n    SQL \n    37.5% \n    62.5% \n    0% \n  \n  \n    Stata \n    80% \n    20% \n    0% \n  \n  \n    VBA \n    42.9% \n    42.9% \n    14.3%"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#coding-capability",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#coding-capability",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    7.7% \n  \n  \n    No change \n    23.1% \n  \n  \n    Slightly better \n    46.2% \n  \n  \n    Significantly better \n    23.1% \n  \n\n\n\na Sample size = 13\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    52% \n  \n  \n    In education \n    24% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    8% \n  \n  \n    Self-taught \n    16% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 25"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#coding-practices",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#coding-practices",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    70.8% \n    16.7% \n    4.2% \n    0% \n    8.3% \n    0% \n  \n  \n    Automated data quality assurance \n    0% \n    25% \n    16.7% \n    37.5% \n    12.5% \n    8.3% \n  \n  \n    Code review \n    0% \n    8.3% \n    20.8% \n    20.8% \n    33.3% \n    16.7% \n  \n  \n    Coding guidelines / Style guides \n    4.2% \n    20.8% \n    8.3% \n    33.3% \n    29.2% \n    4.2% \n  \n  \n    Functions \n    0% \n    16.7% \n    12.5% \n    33.3% \n    29.2% \n    8.3% \n  \n  \n    Open source own code \n    8.3% \n    70.8% \n    8.3% \n    4.2% \n    4.2% \n    4.2% \n  \n  \n    Packaging code \n    4.2% \n    50% \n    20.8% \n    25% \n    0% \n    0% \n  \n  \n    Standard directory structure \n    16.7% \n    25% \n    16.7% \n    12.5% \n    16.7% \n    12.5% \n  \n  \n    Unit testing \n    37.5% \n    16.7% \n    4.2% \n    16.7% \n    25% \n    0% \n  \n  \n    Use open source software \n    0% \n    12.5% \n    16.7% \n    12.5% \n    29.2% \n    29.2% \n  \n  \n    Version control \n    8.3% \n    58.3% \n    8.3% \n    16.7% \n    8.3% \n    0% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    29.2% \n    37.5% \n    20.8% \n    12.5% \n    0% \n    0% \n  \n  \n    Code comments \n    0% \n    8.3% \n    0% \n    12.5% \n    41.7% \n    37.5% \n  \n  \n    Data or assumptions registers \n    25% \n    50% \n    12.5% \n    8.3% \n    4.2% \n    0% \n  \n  \n    Desk notes \n    20.8% \n    50% \n    12.5% \n    12.5% \n    4.2% \n    0% \n  \n  \n    Documentation for each function or class \n    12.5% \n    20.8% \n    4.2% \n    29.2% \n    25% \n    8.3% \n  \n  \n    Flow charts \n    8.3% \n    29.2% \n    12.5% \n    16.7% \n    29.2% \n    4.2% \n  \n  \n    README files \n    8.3% \n    54.2% \n    12.5% \n    20.8% \n    4.2% \n    0% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    4.2% \n  \n  \n    No \n    41.7% \n  \n  \n    I don't know what dependency management is \n    54.2% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    37.5% \n  \n  \n    I don't know what continuous integration is \n    62.5% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    41.7% \n  \n  \n    I don't know what reproducible workflows are \n    58.3% \n  \n\n\n\na Sample size = 24"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#rap-knowledge-and-opinions",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#rap-knowledge-and-opinions",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    20% \n  \n  \n    I don't know what a RAP champion is \n    12% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    8% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    60% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    13.6% \n    9.1% \n    13.6% \n    27.3% \n    36.4% \n  \n  \n    I feel confident implementing RAP in my work \n    4.5% \n    18.2% \n    9.1% \n    54.5% \n    13.6% \n  \n  \n    I feel supported to implement RAP in my work \n    4.5% \n    9.1% \n    9.1% \n    59.1% \n    18.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    0% \n    13.6% \n    22.7% \n    45.5% \n    18.2% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    0% \n    9.1% \n    13.6% \n    22.7% \n    54.5% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    0% \n    22.7% \n    31.8% \n    45.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    0% \n    22.7% \n    18.2% \n    50% \n    9.1% \n  \n\n\n\na Sample size = 22"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#rap-scores",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#rap-scores",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    58.3% \n  \n  \n    Team open source code \n    Basic \n    8.3% \n  \n  \n    Version control \n    Basic \n    8.3% \n  \n  \n    Peer review \n    Basic \n    50% \n  \n  \n    AQUA book guidance \n    Basic \n    8.3% \n  \n  \n    Documentation \n    Basic \n    4.2% \n  \n  \n    Functions \n    Advanced \n    37.5% \n  \n  \n    Unit testing \n    Advanced \n    25% \n  \n  \n    Function documentation \n    Advanced \n    33.3% \n  \n  \n    Code packages \n    Advanced \n    0% \n  \n  \n    Follow code style guidelines \n    Advanced \n    33.3% \n  \n  \n    Continuous integration \n    Advanced \n    0% \n  \n  \n    Dependency management \n    Advanced \n    4.2% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    16.7% \n  \n  \n    1 \n    45.8% \n  \n  \n    2 \n    20.8% \n  \n  \n    3 \n    16.7% \n  \n  \n    4 \n    0% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    41.7% \n  \n  \n    1 \n    12.5% \n  \n  \n    2 \n    25% \n  \n  \n    3 \n    12.5% \n  \n  \n    4 \n    8.3% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 24"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#draft-notice",
    "href": "departments/office-for-national-statistics.html#draft-notice",
    "title": "Department summary: Office for National Statistics",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/office-for-national-statistics.html#coding-frequency-and-tools",
    "href": "departments/office-for-national-statistics.html#coding-frequency-and-tools",
    "title": "Department summary: Office for National Statistics",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    11.6% \n  \n  \n    Rarely \n    8.9% \n  \n  \n    Sometimes \n    17.3% \n  \n  \n    Regularly \n    31.1% \n  \n  \n    All the time \n    31.1% \n  \n\n\n\na Sample size = 225\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    84.8% \n    15.2% \n  \n  \n    Data cleaning \n    92.4% \n    7.6% \n  \n  \n    Data linking \n    92.9% \n    7.1% \n  \n  \n    Data transfer / migration \n    74.2% \n    25.8% \n  \n  \n    Data visualisation \n    69.8% \n    30.2% \n  \n  \n    Machine learning \n    93.2% \n    6.8% \n  \n  \n    Modelling \n    84.6% \n    15.4% \n  \n  \n    Quality assurance \n    76.8% \n    23.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.2% \n    67.1% \n    30.7% \n  \n  \n    Java / Scala \n    10.2% \n    64% \n    25.8% \n  \n  \n    Javascript / Typescript \n    6.2% \n    66.7% \n    27.1% \n  \n  \n    Matlab \n    5.8% \n    61.8% \n    32.4% \n  \n  \n    Python \n    93.3% \n    3.6% \n    3.1% \n  \n  \n    R \n    91.1% \n    5.3% \n    3.6% \n  \n  \n    SAS \n    45.8% \n    36% \n    18.2% \n  \n  \n    SPSS \n    40.4% \n    35.1% \n    24.4% \n  \n  \n    SQL \n    62.2% \n    28.4% \n    9.3% \n  \n  \n    Stata \n    25.3% \n    50.2% \n    24.4% \n  \n  \n    VBA \n    28.9% \n    53.8% \n    17.3% \n  \n\n\n\na Sample size = 225\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.6% \n    5.8% \n    86.7% \n  \n  \n    Java / Scala \n    6.2% \n    6.2% \n    87.6% \n  \n  \n    Javascript / Typescript \n    6.2% \n    5.8% \n    88% \n  \n  \n    Matlab \n    14.2% \n    7.1% \n    78.7% \n  \n  \n    Python \n    61.8% \n    0.9% \n    37.3% \n  \n  \n    R \n    62.2% \n    3.1% \n    34.7% \n  \n  \n    SAS \n    27.1% \n    6.7% \n    66.2% \n  \n  \n    SPSS \n    43.6% \n    4.4% \n    52% \n  \n  \n    SQL \n    48.4% \n    4.4% \n    47.1% \n  \n  \n    Stata \n    20% \n    4.9% \n    75.1% \n  \n  \n    VBA \n    17.3% \n    6.7% \n    76% \n  \n\n\n\na Sample size = 225\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    15% \n    10% \n    75% \n  \n  \n    Java / Scala \n    58.8% \n    8.8% \n    32.4% \n  \n  \n    Javascript / Typescript \n    39.1% \n    21.7% \n    39.1% \n  \n  \n    Matlab \n    25.6% \n    4.7% \n    69.8% \n  \n  \n    Python \n    34.4% \n    64.6% \n    0.9% \n  \n  \n    R \n    33.6% \n    63.5% \n    2.8% \n  \n  \n    SAS \n    50.4% \n    33.3% \n    16.3% \n  \n  \n    SPSS \n    30% \n    35% \n    35% \n  \n  \n    SQL \n    27.3% \n    66% \n    6.7% \n  \n  \n    Stata \n    43% \n    29.1% \n    27.8% \n  \n  \n    VBA \n    49.4% \n    35.1% \n    15.6%"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#coding-capability",
    "href": "departments/office-for-national-statistics.html#coding-capability",
    "title": "Department summary: Office for National Statistics",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7% \n  \n  \n    Slightly worse \n    11% \n  \n  \n    No change \n    13.4% \n  \n  \n    Slightly better \n    27.9% \n  \n  \n    Significantly better \n    40.7% \n  \n\n\n\na Sample size = 172\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    21.6% \n  \n  \n    In education \n    50.2% \n  \n  \n    In private sector employment \n    1.4% \n  \n  \n    In public sector employment \n    13.1% \n  \n  \n    Self-taught \n    11.3% \n  \n  \n    Other \n    2.3% \n  \n\n\n\na Sample size = 213"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#coding-practices",
    "href": "departments/office-for-national-statistics.html#coding-practices",
    "title": "Department summary: Office for National Statistics",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    43.7% \n    13.6% \n    9% \n    14.1% \n    15.6% \n    4% \n  \n  \n    Automated data quality assurance \n    5.5% \n    19.6% \n    15.1% \n    28.1% \n    23.1% \n    8.5% \n  \n  \n    Code review \n    1.5% \n    9% \n    5% \n    27.6% \n    33.2% \n    23.6% \n  \n  \n    Coding guidelines / Style guides \n    7% \n    12.1% \n    8.5% \n    19.6% \n    35.7% \n    17.1% \n  \n  \n    Functions \n    3% \n    8.5% \n    9% \n    22.6% \n    30.7% \n    26.1% \n  \n  \n    Open source own code \n    18.1% \n    46.2% \n    16.1% \n    7.5% \n    8% \n    4% \n  \n  \n    Packaging code \n    14.6% \n    40.7% \n    16.1% \n    16.1% \n    6.5% \n    6% \n  \n  \n    Standard directory structure \n    33.7% \n    14.6% \n    9% \n    12.6% \n    20.1% \n    10.1% \n  \n  \n    Unit testing \n    26.6% \n    17.6% \n    14.1% \n    18.1% \n    13.6% \n    10.1% \n  \n  \n    Use open source software \n    12.1% \n    7.5% \n    6% \n    11.1% \n    27.6% \n    35.7% \n  \n  \n    Version control \n    7.5% \n    24.6% \n    8.5% \n    13.1% \n    19.6% \n    26.6% \n  \n\n\n\na Sample size = 199\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    31.7% \n    36.7% \n    8.5% \n    12.6% \n    7% \n    3.5% \n  \n  \n    Code comments \n    3% \n    3.5% \n    1% \n    7.5% \n    28.1% \n    56.8% \n  \n  \n    Data or assumptions registers \n    29.6% \n    45.2% \n    6.5% \n    8% \n    6.5% \n    4% \n  \n  \n    Desk notes \n    12.1% \n    16.1% \n    11.1% \n    23.6% \n    23.1% \n    14.1% \n  \n  \n    Documentation for each function or class \n    13.6% \n    25.1% \n    11.1% \n    15.1% \n    19.1% \n    16.1% \n  \n  \n    Flow charts \n    7.5% \n    41.7% \n    16.1% \n    18.1% \n    13.6% \n    3% \n  \n  \n    README files \n    8.5% \n    27.1% \n    14.1% \n    21.6% \n    15.1% \n    13.6% \n  \n\n\n\na Sample size = 199\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    29.1% \n  \n  \n    No \n    30.7% \n  \n  \n    I don't know what dependency management is \n    40.2% \n  \n\n\n\na Sample size = 199\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    16.1% \n  \n  \n    No \n    40.7% \n  \n  \n    I don't know what continuous integration is \n    43.2% \n  \n\n\n\na Sample size = 199\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    4.5% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what reproducible workflows are \n    41.7% \n  \n\n\n\na Sample size = 199"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#rap-knowledge-and-opinions",
    "href": "departments/office-for-national-statistics.html#rap-knowledge-and-opinions",
    "title": "Department summary: Office for National Statistics",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    8.1% \n  \n  \n    I don't know what a RAP champion is \n    23.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    47.5% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    1.4% \n  \n  \n    I know who the RAP champion in my department is \n    19.5% \n  \n\n\n\na Sample size = 221\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    16.9% \n    20.3% \n    24.6% \n    21.7% \n    16.4% \n  \n  \n    I feel confident implementing RAP in my work \n    13% \n    25.1% \n    23.7% \n    24.2% \n    14% \n  \n  \n    I feel supported to implement RAP in my work \n    8.7% \n    10.1% \n    28.5% \n    34.3% \n    18.4% \n  \n  \n    I know where to find resources to help me implement RAP \n    8.7% \n    18.4% \n    21.3% \n    30.4% \n    21.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    8.7% \n    11.1% \n    29% \n    28% \n    23.2% \n  \n  \n    I think it is important to implement RAP in my work \n    4.3% \n    2.9% \n    21.3% \n    36.7% \n    34.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    10.6% \n    18.4% \n    19.3% \n    34.8% \n    16.9% \n  \n\n\n\na Sample size = 207"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#rap-scores",
    "href": "departments/office-for-national-statistics.html#rap-scores",
    "title": "Department summary: Office for National Statistics",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    63.3% \n  \n  \n    Team open source code \n    Basic \n    12.1% \n  \n  \n    Version control \n    Basic \n    46.2% \n  \n  \n    Peer review \n    Basic \n    56.8% \n  \n  \n    AQUA book guidance \n    Basic \n    19.6% \n  \n  \n    Documentation \n    Basic \n    26.6% \n  \n  \n    Functions \n    Advanced \n    56.8% \n  \n  \n    Unit testing \n    Advanced \n    23.6% \n  \n  \n    Function documentation \n    Advanced \n    35.2% \n  \n  \n    Code packages \n    Advanced \n    12.6% \n  \n  \n    Follow code style guidelines \n    Advanced \n    52.8% \n  \n  \n    Continuous integration \n    Advanced \n    16.1% \n  \n  \n    Dependency management \n    Advanced \n    29.1% \n  \n\n\n\na Sample size = 199\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    15.6% \n  \n  \n    1 \n    23.6% \n  \n  \n    2 \n    18.1% \n  \n  \n    3 \n    18.1% \n  \n  \n    4 \n    15.1% \n  \n  \n    5 \n    7% \n  \n  \n    6 \n    2.5% \n  \n\n\n\na Sample size = 199\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.1% \n  \n  \n    1 \n    23.6% \n  \n  \n    2 \n    13.1% \n  \n  \n    3 \n    16.1% \n  \n  \n    4 \n    8.5% \n  \n  \n    5 \n    8.5% \n  \n  \n    6 \n    5% \n  \n  \n    7 \n    3% \n  \n\n\n\na Sample size = 199"
  },
  {
    "objectID": "departments/public-health-scotland.html#draft-notice",
    "href": "departments/public-health-scotland.html#draft-notice",
    "title": "Department summary: Public Health Scotland",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/public-health-scotland.html#coding-frequency-and-tools",
    "href": "departments/public-health-scotland.html#coding-frequency-and-tools",
    "title": "Department summary: Public Health Scotland",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0% \n  \n  \n    Rarely \n    0% \n  \n  \n    Sometimes \n    7.9% \n  \n  \n    Regularly \n    28.9% \n  \n  \n    All the time \n    63.2% \n  \n\n\n\na Sample size = 38\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    94.7% \n    5.3% \n  \n  \n    Data cleaning \n    94.7% \n    5.3% \n  \n  \n    Data linking \n    93.9% \n    6.1% \n  \n  \n    Data transfer / migration \n    66.7% \n    33.3% \n  \n  \n    Data visualisation \n    91.4% \n    8.6% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    92.9% \n    7.1% \n  \n  \n    Quality assurance \n    88.9% \n    11.1% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.3% \n    44.7% \n    50% \n  \n  \n    Java / Scala \n    2.6% \n    50% \n    47.4% \n  \n  \n    Javascript / Typescript \n    18.4% \n    50% \n    31.6% \n  \n  \n    Matlab \n    0% \n    39.5% \n    60.5% \n  \n  \n    Python \n    52.6% \n    23.7% \n    23.7% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SAS \n    10.5% \n    39.5% \n    50% \n  \n  \n    SPSS \n    97.4% \n    0% \n    2.6% \n  \n  \n    SQL \n    89.5% \n    2.6% \n    7.9% \n  \n  \n    Stata \n    13.2% \n    31.6% \n    55.3% \n  \n  \n    VBA \n    55.3% \n    28.9% \n    15.8% \n  \n\n\n\na Sample size = 38\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.3% \n    5.3% \n    89.5% \n  \n  \n    Java / Scala \n    5.3% \n    2.6% \n    92.1% \n  \n  \n    Javascript / Typescript \n    13.2% \n    2.6% \n    84.2% \n  \n  \n    Matlab \n    23.7% \n    0% \n    76.3% \n  \n  \n    Python \n    31.6% \n    0% \n    68.4% \n  \n  \n    R \n    97.4% \n    0% \n    2.6% \n  \n  \n    SAS \n    15.8% \n    0% \n    84.2% \n  \n  \n    SPSS \n    52.6% \n    0% \n    47.4% \n  \n  \n    SQL \n    68.4% \n    0% \n    31.6% \n  \n  \n    Stata \n    13.2% \n    2.6% \n    84.2% \n  \n  \n    VBA \n    26.3% \n    0% \n    73.7% \n  \n\n\n\na Sample size = 38\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    50% \n    0% \n    50% \n  \n  \n    Java / Scala \n    33.3% \n    0% \n    66.7% \n  \n  \n    Javascript / Typescript \n    44.4% \n    33.3% \n    22.2% \n  \n  \n    Matlab \n    0% \n    0% \n    100% \n  \n  \n    Python \n    55.6% \n    18.5% \n    25.9% \n  \n  \n    R \n    2.6% \n    97.4% \n    0% \n  \n  \n    SAS \n    33.3% \n    11.1% \n    55.6% \n  \n  \n    SPSS \n    47.4% \n    50% \n    2.6% \n  \n  \n    SQL \n    25.7% \n    71.4% \n    2.9% \n  \n  \n    Stata \n    50% \n    0% \n    50% \n  \n  \n    VBA \n    52.4% \n    47.6% \n    0%"
  },
  {
    "objectID": "departments/public-health-scotland.html#coding-capability",
    "href": "departments/public-health-scotland.html#coding-capability",
    "title": "Department summary: Public Health Scotland",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.1% \n  \n  \n    Slightly worse \n    6.2% \n  \n  \n    No change \n    18.8% \n  \n  \n    Slightly better \n    18.8% \n  \n  \n    Significantly better \n    53.1% \n  \n\n\n\na Sample size = 32\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    15.8% \n  \n  \n    In education \n    68.4% \n  \n  \n    In private sector employment \n    7.9% \n  \n  \n    In public sector employment \n    0% \n  \n  \n    Self-taught \n    5.3% \n  \n  \n    Other \n    2.6% \n  \n\n\n\na Sample size = 38"
  },
  {
    "objectID": "departments/public-health-scotland.html#coding-practices",
    "href": "departments/public-health-scotland.html#coding-practices",
    "title": "Department summary: Public Health Scotland",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    89.5% \n    10.5% \n    0% \n    0% \n    0% \n    0% \n  \n  \n    Automated data quality assurance \n    0% \n    7.9% \n    23.7% \n    31.6% \n    36.8% \n    0% \n  \n  \n    Code review \n    0% \n    2.6% \n    2.6% \n    23.7% \n    36.8% \n    34.2% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    2.6% \n    5.3% \n    26.3% \n    55.3% \n    10.5% \n  \n  \n    Functions \n    2.6% \n    2.6% \n    7.9% \n    23.7% \n    28.9% \n    34.2% \n  \n  \n    Open source own code \n    7.9% \n    28.9% \n    18.4% \n    23.7% \n    13.2% \n    7.9% \n  \n  \n    Packaging code \n    10.5% \n    50% \n    13.2% \n    18.4% \n    2.6% \n    5.3% \n  \n  \n    Standard directory structure \n    13.2% \n    15.8% \n    0% \n    34.2% \n    26.3% \n    10.5% \n  \n  \n    Unit testing \n    26.3% \n    15.8% \n    15.8% \n    18.4% \n    18.4% \n    5.3% \n  \n  \n    Use open source software \n    2.6% \n    2.6% \n    0% \n    5.3% \n    18.4% \n    71.1% \n  \n  \n    Version control \n    2.6% \n    10.5% \n    13.2% \n    18.4% \n    21.1% \n    34.2% \n  \n\n\n\na Sample size = 38\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    28.9% \n    44.7% \n    7.9% \n    5.3% \n    7.9% \n    5.3% \n  \n  \n    Code comments \n    0% \n    0% \n    0% \n    0% \n    26.3% \n    73.7% \n  \n  \n    Data or assumptions registers \n    42.1% \n    47.4% \n    7.9% \n    2.6% \n    0% \n    0% \n  \n  \n    Desk notes \n    44.7% \n    26.3% \n    5.3% \n    13.2% \n    10.5% \n    0% \n  \n  \n    Documentation for each function or class \n    5.3% \n    23.7% \n    13.2% \n    28.9% \n    13.2% \n    15.8% \n  \n  \n    Flow charts \n    5.3% \n    55.3% \n    15.8% \n    21.1% \n    2.6% \n    0% \n  \n  \n    README files \n    0% \n    5.3% \n    34.2% \n    34.2% \n    13.2% \n    13.2% \n  \n\n\n\na Sample size = 38\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    21.1% \n  \n  \n    No \n    42.1% \n  \n  \n    I don't know what dependency management is \n    36.8% \n  \n\n\n\na Sample size = 38\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15.8% \n  \n  \n    No \n    23.7% \n  \n  \n    I don't know what continuous integration is \n    60.5% \n  \n\n\n\na Sample size = 38\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    71.1% \n  \n  \n    I don't know what reproducible workflows are \n    28.9% \n  \n\n\n\na Sample size = 38"
  },
  {
    "objectID": "departments/public-health-scotland.html#rap-knowledge-and-opinions",
    "href": "departments/public-health-scotland.html#rap-knowledge-and-opinions",
    "title": "Department summary: Public Health Scotland",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    13.5% \n  \n  \n    I don't know what a RAP champion is \n    27% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    40.5% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    8.1% \n  \n  \n    I know who the RAP champion in my department is \n    10.8% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    15.2% \n    18.2% \n    36.4% \n    9.1% \n    21.2% \n  \n  \n    I feel confident implementing RAP in my work \n    6.1% \n    18.2% \n    21.2% \n    33.3% \n    21.2% \n  \n  \n    I feel supported to implement RAP in my work \n    6.1% \n    12.1% \n    51.5% \n    24.2% \n    6.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    6.1% \n    24.2% \n    33.3% \n    24.2% \n    12.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    12.1% \n    15.2% \n    21.2% \n    27.3% \n    24.2% \n  \n  \n    I think it is important to implement RAP in my work \n    3% \n    6.1% \n    15.2% \n    39.4% \n    36.4% \n  \n  \n    I understand what the key components of the RAP methodology are \n    6.1% \n    12.1% \n    15.2% \n    54.5% \n    12.1% \n  \n\n\n\na Sample size = 33"
  },
  {
    "objectID": "departments/public-health-scotland.html#rap-scores",
    "href": "departments/public-health-scotland.html#rap-scores",
    "title": "Department summary: Public Health Scotland",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    89.5% \n  \n  \n    Team open source code \n    Basic \n    21.1% \n  \n  \n    Version control \n    Basic \n    55.3% \n  \n  \n    Peer review \n    Basic \n    71.1% \n  \n  \n    AQUA book guidance \n    Basic \n    0% \n  \n  \n    Documentation \n    Basic \n    26.3% \n  \n  \n    Functions \n    Advanced \n    63.2% \n  \n  \n    Unit testing \n    Advanced \n    23.7% \n  \n  \n    Function documentation \n    Advanced \n    28.9% \n  \n  \n    Code packages \n    Advanced \n    7.9% \n  \n  \n    Follow code style guidelines \n    Advanced \n    65.8% \n  \n  \n    Continuous integration \n    Advanced \n    15.8% \n  \n  \n    Dependency management \n    Advanced \n    21.1% \n  \n\n\n\na Sample size = 38\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    2.6% \n  \n  \n    1 \n    21.1% \n  \n  \n    2 \n    23.7% \n  \n  \n    3 \n    23.7% \n  \n  \n    4 \n    21.1% \n  \n  \n    5 \n    7.9% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 38\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    10.5% \n  \n  \n    1 \n    28.9% \n  \n  \n    2 \n    23.7% \n  \n  \n    3 \n    18.4% \n  \n  \n    4 \n    7.9% \n  \n  \n    5 \n    2.6% \n  \n  \n    6 \n    5.3% \n  \n  \n    7 \n    2.6% \n  \n\n\n\na Sample size = 38"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#draft-notice",
    "href": "departments/scottish-government-excl-agencies-.html#draft-notice",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/scottish-government-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    12.5% \n  \n  \n    Rarely \n    5% \n  \n  \n    Sometimes \n    15% \n  \n  \n    Regularly \n    37.5% \n  \n  \n    All the time \n    30% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    87.5% \n    12.5% \n  \n  \n    Data cleaning \n    94.1% \n    5.9% \n  \n  \n    Data linking \n    100% \n    0% \n  \n  \n    Data transfer / migration \n    66.7% \n    33.3% \n  \n  \n    Data visualisation \n    71.1% \n    28.9% \n  \n  \n    Machine learning \n    66.7% \n    33.3% \n  \n  \n    Modelling \n    100% \n    0% \n  \n  \n    Quality assurance \n    83.8% \n    16.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.5% \n    70% \n    27.5% \n  \n  \n    Java / Scala \n    0% \n    75% \n    25% \n  \n  \n    Javascript / Typescript \n    5% \n    72.5% \n    22.5% \n  \n  \n    Matlab \n    10% \n    60% \n    30% \n  \n  \n    Python \n    47.5% \n    40% \n    12.5% \n  \n  \n    R \n    95% \n    5% \n    0% \n  \n  \n    SAS \n    70% \n    25% \n    5% \n  \n  \n    SPSS \n    35% \n    50% \n    15% \n  \n  \n    SQL \n    45% \n    52.5% \n    2.5% \n  \n  \n    Stata \n    7.5% \n    70% \n    22.5% \n  \n  \n    VBA \n    40% \n    55% \n    5% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    10% \n    7.5% \n    82.5% \n  \n  \n    Java / Scala \n    5% \n    5% \n    90% \n  \n  \n    Javascript / Typescript \n    10% \n    7.5% \n    82.5% \n  \n  \n    Matlab \n    25% \n    0% \n    75% \n  \n  \n    Python \n    35% \n    0% \n    65% \n  \n  \n    R \n    75% \n    0% \n    25% \n  \n  \n    SAS \n    57.5% \n    0% \n    42.5% \n  \n  \n    SPSS \n    30% \n    2.5% \n    67.5% \n  \n  \n    SQL \n    37.5% \n    5% \n    57.5% \n  \n  \n    Stata \n    10% \n    2.5% \n    87.5% \n  \n  \n    VBA \n    22.5% \n    7.5% \n    70% \n  \n\n\n\na Sample size = 40\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    0% \n    25% \n    75% \n  \n  \n    Java / Scala \n    0% \n    0% \n    100% \n  \n  \n    Javascript / Typescript \n    20% \n    20% \n    60% \n  \n  \n    Matlab \n    16.7% \n    16.7% \n    66.7% \n  \n  \n    Python \n    44% \n    32% \n    24% \n  \n  \n    R \n    21.1% \n    78.9% \n    0% \n  \n  \n    SAS \n    25.8% \n    64.5% \n    9.7% \n  \n  \n    SPSS \n    42.9% \n    23.8% \n    33.3% \n  \n  \n    SQL \n    37.5% \n    37.5% \n    25% \n  \n  \n    Stata \n    42.9% \n    0% \n    57.1% \n  \n  \n    VBA \n    52.6% \n    31.6% \n    15.8%"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#coding-capability",
    "href": "departments/scottish-government-excl-agencies-.html#coding-capability",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.2% \n  \n  \n    Slightly worse \n    9.7% \n  \n  \n    No change \n    16.1% \n  \n  \n    Slightly better \n    38.7% \n  \n  \n    Significantly better \n    32.3% \n  \n\n\n\na Sample size = 31\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    18.9% \n  \n  \n    In education \n    40.5% \n  \n  \n    In private sector employment \n    2.7% \n  \n  \n    In public sector employment \n    16.2% \n  \n  \n    Self-taught \n    18.9% \n  \n  \n    Other \n    2.7% \n  \n\n\n\na Sample size = 37"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#coding-practices",
    "href": "departments/scottish-government-excl-agencies-.html#coding-practices",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    48.6% \n    20% \n    8.6% \n    5.7% \n    14.3% \n    2.9% \n  \n  \n    Automated data quality assurance \n    0% \n    14.3% \n    22.9% \n    31.4% \n    28.6% \n    2.9% \n  \n  \n    Code review \n    0% \n    5.7% \n    40% \n    20% \n    31.4% \n    2.9% \n  \n  \n    Coding guidelines / Style guides \n    11.4% \n    2.9% \n    0% \n    25.7% \n    42.9% \n    17.1% \n  \n  \n    Functions \n    5.7% \n    8.6% \n    8.6% \n    17.1% \n    34.3% \n    25.7% \n  \n  \n    Open source own code \n    2.9% \n    40% \n    20% \n    20% \n    14.3% \n    2.9% \n  \n  \n    Packaging code \n    11.4% \n    40% \n    20% \n    8.6% \n    20% \n    0% \n  \n  \n    Standard directory structure \n    25.7% \n    5.7% \n    0% \n    8.6% \n    45.7% \n    14.3% \n  \n  \n    Unit testing \n    25.7% \n    17.1% \n    22.9% \n    14.3% \n    20% \n    0% \n  \n  \n    Use open source software \n    5.7% \n    5.7% \n    11.4% \n    11.4% \n    31.4% \n    34.3% \n  \n  \n    Version control \n    2.9% \n    48.6% \n    8.6% \n    17.1% \n    17.1% \n    5.7% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    28.6% \n    31.4% \n    8.6% \n    14.3% \n    17.1% \n    0% \n  \n  \n    Code comments \n    0% \n    2.9% \n    2.9% \n    2.9% \n    31.4% \n    60% \n  \n  \n    Data or assumptions registers \n    25.7% \n    45.7% \n    8.6% \n    8.6% \n    8.6% \n    2.9% \n  \n  \n    Desk notes \n    11.4% \n    0% \n    11.4% \n    37.1% \n    28.6% \n    11.4% \n  \n  \n    Documentation for each function or class \n    17.1% \n    14.3% \n    14.3% \n    20% \n    28.6% \n    5.7% \n  \n  \n    Flow charts \n    5.7% \n    31.4% \n    20% \n    25.7% \n    14.3% \n    2.9% \n  \n  \n    README files \n    2.9% \n    20% \n    20% \n    17.1% \n    37.1% \n    2.9% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    22.9% \n  \n  \n    No \n    40% \n  \n  \n    I don't know what dependency management is \n    37.1% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    8.6% \n  \n  \n    No \n    48.6% \n  \n  \n    I don't know what continuous integration is \n    42.9% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    65.7% \n  \n  \n    I don't know what reproducible workflows are \n    34.3% \n  \n\n\n\na Sample size = 35"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/scottish-government-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    10.3% \n  \n  \n    I don't know what a RAP champion is \n    17.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    33.3% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.1% \n  \n  \n    I know who the RAP champion in my department is \n    33.3% \n  \n\n\n\na Sample size = 39\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    16.7% \n    22.2% \n    22.2% \n    27.8% \n    11.1% \n  \n  \n    I feel confident implementing RAP in my work \n    5.6% \n    36.1% \n    13.9% \n    33.3% \n    11.1% \n  \n  \n    I feel supported to implement RAP in my work \n    8.3% \n    11.1% \n    33.3% \n    41.7% \n    5.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    0% \n    19.4% \n    11.1% \n    50% \n    19.4% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    2.8% \n    11.1% \n    38.9% \n    30.6% \n    16.7% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    2.8% \n    22.2% \n    52.8% \n    22.2% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.6% \n    16.7% \n    19.4% \n    38.9% \n    19.4% \n  \n\n\n\na Sample size = 36"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#rap-scores",
    "href": "departments/scottish-government-excl-agencies-.html#rap-scores",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    65.7% \n  \n  \n    Team open source code \n    Basic \n    17.1% \n  \n  \n    Version control \n    Basic \n    22.9% \n  \n  \n    Peer review \n    Basic \n    34.3% \n  \n  \n    AQUA book guidance \n    Basic \n    17.1% \n  \n  \n    Documentation \n    Basic \n    40% \n  \n  \n    Functions \n    Advanced \n    60% \n  \n  \n    Unit testing \n    Advanced \n    20% \n  \n  \n    Function documentation \n    Advanced \n    34.3% \n  \n  \n    Code packages \n    Advanced \n    20% \n  \n  \n    Follow code style guidelines \n    Advanced \n    60% \n  \n  \n    Continuous integration \n    Advanced \n    8.6% \n  \n  \n    Dependency management \n    Advanced \n    22.9% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14.3% \n  \n  \n    1 \n    31.4% \n  \n  \n    2 \n    25.7% \n  \n  \n    3 \n    2.9% \n  \n  \n    4 \n    22.9% \n  \n  \n    5 \n    2.9% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 35\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    17.1% \n  \n  \n    1 \n    20% \n  \n  \n    2 \n    25.7% \n  \n  \n    3 \n    11.4% \n  \n  \n    4 \n    14.3% \n  \n  \n    5 \n    8.6% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    2.9% \n  \n\n\n\na Sample size = 35"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#draft-notice",
    "href": "departments/uk-health-security-agency.html#draft-notice",
    "title": "Department summary: UK Health Security Agency",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/uk-health-security-agency.html#coding-frequency-and-tools",
    "href": "departments/uk-health-security-agency.html#coding-frequency-and-tools",
    "title": "Department summary: UK Health Security Agency",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0% \n  \n  \n    Rarely \n    12% \n  \n  \n    Sometimes \n    16% \n  \n  \n    Regularly \n    24% \n  \n  \n    All the time \n    48% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    88% \n    12% \n  \n  \n    Data cleaning \n    81.8% \n    18.2% \n  \n  \n    Data linking \n    84.2% \n    15.8% \n  \n  \n    Data transfer / migration \n    86.7% \n    13.3% \n  \n  \n    Data visualisation \n    87.5% \n    12.5% \n  \n  \n    Machine learning \n    87.5% \n    12.5% \n  \n  \n    Modelling \n    83.3% \n    16.7% \n  \n  \n    Quality assurance \n    81.8% \n    18.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    44% \n    36% \n    20% \n  \n  \n    Java / Scala \n    20% \n    64% \n    16% \n  \n  \n    Javascript / Typescript \n    32% \n    52% \n    16% \n  \n  \n    Matlab \n    8% \n    60% \n    32% \n  \n  \n    Python \n    96% \n    0% \n    4% \n  \n  \n    R \n    96% \n    0% \n    4% \n  \n  \n    SAS \n    12% \n    64% \n    24% \n  \n  \n    SPSS \n    20% \n    56% \n    24% \n  \n  \n    SQL \n    88% \n    8% \n    4% \n  \n  \n    Stata \n    52% \n    40% \n    8% \n  \n  \n    VBA \n    52% \n    36% \n    12% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    12% \n    4% \n    84% \n  \n  \n    Java / Scala \n    8% \n    4% \n    88% \n  \n  \n    Javascript / Typescript \n    16% \n    8% \n    76% \n  \n  \n    Matlab \n    16% \n    4% \n    80% \n  \n  \n    Python \n    80% \n    0% \n    20% \n  \n  \n    R \n    84% \n    0% \n    16% \n  \n  \n    SAS \n    12% \n    4% \n    84% \n  \n  \n    SPSS \n    20% \n    4% \n    76% \n  \n  \n    SQL \n    80% \n    0% \n    20% \n  \n  \n    Stata \n    24% \n    4% \n    72% \n  \n  \n    VBA \n    20% \n    4% \n    76% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    76.9% \n    7.7% \n    15.4% \n  \n  \n    Java / Scala \n    66.7% \n    16.7% \n    16.7% \n  \n  \n    Javascript / Typescript \n    55.6% \n    33.3% \n    11.1% \n  \n  \n    Matlab \n    20% \n    20% \n    60% \n  \n  \n    Python \n    16.7% \n    83.3% \n    0% \n  \n  \n    R \n    16% \n    80% \n    4% \n  \n  \n    SAS \n    50% \n    0% \n    50% \n  \n  \n    SPSS \n    44.4% \n    11.1% \n    44.4% \n  \n  \n    SQL \n    13% \n    82.6% \n    4.3% \n  \n  \n    Stata \n    53.8% \n    46.2% \n    0% \n  \n  \n    VBA \n    61.5% \n    38.5% \n    0%"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#coding-capability",
    "href": "departments/uk-health-security-agency.html#coding-capability",
    "title": "Department summary: UK Health Security Agency",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    18.2% \n  \n  \n    No change \n    4.5% \n  \n  \n    Slightly better \n    45.5% \n  \n  \n    Significantly better \n    31.8% \n  \n\n\n\na Sample size = 22\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    12% \n  \n  \n    In education \n    44% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    16% \n  \n  \n    Self-taught \n    24% \n  \n  \n    Other \n    4% \n  \n\n\n\na Sample size = 25"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#coding-practices",
    "href": "departments/uk-health-security-agency.html#coding-practices",
    "title": "Department summary: UK Health Security Agency",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    32% \n    20% \n    12% \n    16% \n    12% \n    8% \n  \n  \n    Automated data quality assurance \n    4% \n    24% \n    20% \n    28% \n    4% \n    20% \n  \n  \n    Code review \n    0% \n    0% \n    12% \n    40% \n    32% \n    16% \n  \n  \n    Coding guidelines / Style guides \n    4% \n    4% \n    4% \n    24% \n    52% \n    12% \n  \n  \n    Functions \n    4% \n    0% \n    4% \n    32% \n    28% \n    32% \n  \n  \n    Open source own code \n    4% \n    32% \n    24% \n    24% \n    16% \n    0% \n  \n  \n    Packaging code \n    4% \n    24% \n    28% \n    24% \n    16% \n    4% \n  \n  \n    Standard directory structure \n    8% \n    12% \n    0% \n    36% \n    24% \n    20% \n  \n  \n    Unit testing \n    8% \n    4% \n    36% \n    32% \n    16% \n    4% \n  \n  \n    Use open source software \n    0% \n    0% \n    4% \n    12% \n    20% \n    64% \n  \n  \n    Version control \n    0% \n    16% \n    8% \n    0% \n    16% \n    60% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    24% \n    28% \n    20% \n    16% \n    8% \n    4% \n  \n  \n    Code comments \n    8% \n    0% \n    0% \n    8% \n    32% \n    52% \n  \n  \n    Data or assumptions registers \n    44% \n    28% \n    12% \n    12% \n    0% \n    4% \n  \n  \n    Desk notes \n    36% \n    12% \n    16% \n    16% \n    12% \n    8% \n  \n  \n    Documentation for each function or class \n    12% \n    20% \n    0% \n    28% \n    24% \n    16% \n  \n  \n    Flow charts \n    12% \n    24% \n    24% \n    32% \n    4% \n    4% \n  \n  \n    README files \n    8% \n    4% \n    12% \n    20% \n    32% \n    24% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    52% \n  \n  \n    No \n    36% \n  \n  \n    I don't know what dependency management is \n    12% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    32% \n  \n  \n    No \n    48% \n  \n  \n    I don't know what continuous integration is \n    20% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    8% \n  \n  \n    No \n    80% \n  \n  \n    I don't know what reproducible workflows are \n    12% \n  \n\n\n\na Sample size = 25"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#rap-knowledge-and-opinions",
    "href": "departments/uk-health-security-agency.html#rap-knowledge-and-opinions",
    "title": "Department summary: UK Health Security Agency",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    28% \n  \n  \n    I don't know what a RAP champion is \n    20% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    24% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    12% \n  \n  \n    I know who the RAP champion in my department is \n    16% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    5.6% \n    27.8% \n    33.3% \n    16.7% \n    16.7% \n  \n  \n    I feel confident implementing RAP in my work \n    5.6% \n    22.2% \n    27.8% \n    27.8% \n    16.7% \n  \n  \n    I feel supported to implement RAP in my work \n    11.1% \n    22.2% \n    22.2% \n    33.3% \n    11.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.6% \n    22.2% \n    11.1% \n    44.4% \n    16.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.6% \n    16.7% \n    22.2% \n    33.3% \n    22.2% \n  \n  \n    I think it is important to implement RAP in my work \n    5.6% \n    5.6% \n    0% \n    55.6% \n    33.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.6% \n    27.8% \n    16.7% \n    38.9% \n    11.1% \n  \n\n\n\na Sample size = 18"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#rap-scores",
    "href": "departments/uk-health-security-agency.html#rap-scores",
    "title": "Department summary: UK Health Security Agency",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    84% \n  \n  \n    Team open source code \n    Basic \n    16% \n  \n  \n    Version control \n    Basic \n    76% \n  \n  \n    Peer review \n    Basic \n    48% \n  \n  \n    AQUA book guidance \n    Basic \n    20% \n  \n  \n    Documentation \n    Basic \n    56% \n  \n  \n    Functions \n    Advanced \n    60% \n  \n  \n    Unit testing \n    Advanced \n    20% \n  \n  \n    Function documentation \n    Advanced \n    40% \n  \n  \n    Code packages \n    Advanced \n    20% \n  \n  \n    Follow code style guidelines \n    Advanced \n    64% \n  \n  \n    Continuous integration \n    Advanced \n    32% \n  \n  \n    Dependency management \n    Advanced \n    52% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    4% \n  \n  \n    1 \n    20% \n  \n  \n    2 \n    12% \n  \n  \n    3 \n    16% \n  \n  \n    4 \n    32% \n  \n  \n    5 \n    16% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 25\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    12% \n  \n  \n    1 \n    12% \n  \n  \n    2 \n    12% \n  \n  \n    3 \n    36% \n  \n  \n    4 \n    12% \n  \n  \n    5 \n    4% \n  \n  \n    6 \n    8% \n  \n  \n    7 \n    4% \n  \n\n\n\na Sample size = 25"
  },
  {
    "objectID": "departments/welsh-government.html#draft-notice",
    "href": "departments/welsh-government.html#draft-notice",
    "title": "Department summary: Welsh Government",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "departments/welsh-government.html#coding-frequency-and-tools",
    "href": "departments/welsh-government.html#coding-frequency-and-tools",
    "title": "Department summary: Welsh Government",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    17.4% \n  \n  \n    Rarely \n    13% \n  \n  \n    Sometimes \n    21.7% \n  \n  \n    Regularly \n    30.4% \n  \n  \n    All the time \n    17.4% \n  \n\n\n\na Sample size = 23\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    90% \n    10% \n  \n  \n    Data cleaning \n    92.3% \n    7.7% \n  \n  \n    Data linking \n    92.3% \n    7.7% \n  \n  \n    Data transfer / migration \n    83.3% \n    16.7% \n  \n  \n    Data visualisation \n    64.7% \n    35.3% \n  \n  \n    Machine learning \n    0% \n    0% \n  \n  \n    Modelling \n    100% \n    0% \n  \n  \n    Quality assurance \n    63.2% \n    36.8% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    60.9% \n    39.1% \n  \n  \n    Java / Scala \n    0% \n    60.9% \n    39.1% \n  \n  \n    Javascript / Typescript \n    0% \n    60.9% \n    39.1% \n  \n  \n    Matlab \n    0% \n    65.2% \n    34.8% \n  \n  \n    Python \n    82.6% \n    8.7% \n    8.7% \n  \n  \n    R \n    82.6% \n    8.7% \n    8.7% \n  \n  \n    SAS \n    69.6% \n    21.7% \n    8.7% \n  \n  \n    SPSS \n    56.5% \n    26.1% \n    17.4% \n  \n  \n    SQL \n    91.3% \n    8.7% \n    0% \n  \n  \n    Stata \n    26.1% \n    56.5% \n    17.4% \n  \n  \n    VBA \n    47.8% \n    34.8% \n    17.4% \n  \n\n\n\na Sample size = 23\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4.3% \n    17.4% \n    78.3% \n  \n  \n    Java / Scala \n    21.7% \n    13% \n    65.2% \n  \n  \n    Javascript / Typescript \n    8.7% \n    13% \n    78.3% \n  \n  \n    Matlab \n    13% \n    13% \n    73.9% \n  \n  \n    Python \n    34.8% \n    4.3% \n    60.9% \n  \n  \n    R \n    52.2% \n    4.3% \n    43.5% \n  \n  \n    SAS \n    47.8% \n    4.3% \n    47.8% \n  \n  \n    SPSS \n    47.8% \n    8.7% \n    43.5% \n  \n  \n    SQL \n    69.6% \n    17.4% \n    13% \n  \n  \n    Stata \n    17.4% \n    8.7% \n    73.9% \n  \n  \n    VBA \n    34.8% \n    0% \n    65.2% \n  \n\n\n\na Sample size = 23\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    0% \n    0% \n    100% \n  \n  \n    Java / Scala \n    0% \n    0% \n    100% \n  \n  \n    Javascript / Typescript \n    0% \n    0% \n    100% \n  \n  \n    Matlab \n    0% \n    0% \n    100% \n  \n  \n    Python \n    60% \n    35% \n    5% \n  \n  \n    R \n    40% \n    55% \n    5% \n  \n  \n    SAS \n    45% \n    35% \n    20% \n  \n  \n    SPSS \n    35.3% \n    41.2% \n    23.5% \n  \n  \n    SQL \n    23.8% \n    76.2% \n    0% \n  \n  \n    Stata \n    50% \n    25% \n    25% \n  \n  \n    VBA \n    38.5% \n    46.2% \n    15.4%"
  },
  {
    "objectID": "departments/welsh-government.html#coding-capability",
    "href": "departments/welsh-government.html#coding-capability",
    "title": "Department summary: Welsh Government",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    26.3% \n  \n  \n    Slightly worse \n    10.5% \n  \n  \n    No change \n    5.3% \n  \n  \n    Slightly better \n    31.6% \n  \n  \n    Significantly better \n    26.3% \n  \n\n\n\na Sample size = 19\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    9.5% \n  \n  \n    In education \n    81% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    4.8% \n  \n  \n    Self-taught \n    4.8% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 21"
  },
  {
    "objectID": "departments/welsh-government.html#coding-practices",
    "href": "departments/welsh-government.html#coding-practices",
    "title": "Department summary: Welsh Government",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    36.8% \n    26.3% \n    10.5% \n    15.8% \n    5.3% \n    5.3% \n  \n  \n    Automated data quality assurance \n    5.3% \n    21.1% \n    31.6% \n    15.8% \n    21.1% \n    5.3% \n  \n  \n    Code review \n    0% \n    15.8% \n    15.8% \n    21.1% \n    36.8% \n    10.5% \n  \n  \n    Coding guidelines / Style guides \n    5.3% \n    10.5% \n    15.8% \n    26.3% \n    31.6% \n    10.5% \n  \n  \n    Functions \n    0% \n    31.6% \n    5.3% \n    36.8% \n    15.8% \n    10.5% \n  \n  \n    Open source own code \n    21.1% \n    63.2% \n    0% \n    15.8% \n    0% \n    0% \n  \n  \n    Packaging code \n    15.8% \n    52.6% \n    21.1% \n    5.3% \n    5.3% \n    0% \n  \n  \n    Standard directory structure \n    26.3% \n    15.8% \n    5.3% \n    15.8% \n    26.3% \n    10.5% \n  \n  \n    Unit testing \n    36.8% \n    31.6% \n    5.3% \n    21.1% \n    0% \n    5.3% \n  \n  \n    Use open source software \n    0% \n    26.3% \n    10.5% \n    15.8% \n    21.1% \n    26.3% \n  \n  \n    Version control \n    5.3% \n    68.4% \n    5.3% \n    10.5% \n    10.5% \n    0% \n  \n\n\n\na Sample size = 19\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    26.3% \n    42.1% \n    21.1% \n    0% \n    0% \n    10.5% \n  \n  \n    Code comments \n    5.3% \n    5.3% \n    0% \n    10.5% \n    31.6% \n    47.4% \n  \n  \n    Data or assumptions registers \n    42.1% \n    36.8% \n    15.8% \n    0% \n    0% \n    5.3% \n  \n  \n    Desk notes \n    5.3% \n    5.3% \n    0% \n    26.3% \n    42.1% \n    21.1% \n  \n  \n    Documentation for each function or class \n    15.8% \n    36.8% \n    15.8% \n    15.8% \n    10.5% \n    5.3% \n  \n  \n    Flow charts \n    15.8% \n    52.6% \n    10.5% \n    15.8% \n    5.3% \n    0% \n  \n  \n    README files \n    10.5% \n    47.4% \n    10.5% \n    10.5% \n    15.8% \n    5.3% \n  \n\n\n\na Sample size = 19\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    10.5% \n  \n  \n    No \n    31.6% \n  \n  \n    I don't know what dependency management is \n    57.9% \n  \n\n\n\na Sample size = 19\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    5.3% \n  \n  \n    No \n    47.4% \n  \n  \n    I don't know what continuous integration is \n    47.4% \n  \n\n\n\na Sample size = 19\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    47.4% \n  \n  \n    I don't know what reproducible workflows are \n    52.6% \n  \n\n\n\na Sample size = 19"
  },
  {
    "objectID": "departments/welsh-government.html#rap-knowledge-and-opinions",
    "href": "departments/welsh-government.html#rap-knowledge-and-opinions",
    "title": "Department summary: Welsh Government",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    8.7% \n  \n  \n    I don't know what a RAP champion is \n    8.7% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    60.9% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    21.7% \n  \n\n\n\na Sample size = 23\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    19% \n    19% \n    19% \n    19% \n    23.8% \n  \n  \n    I feel confident implementing RAP in my work \n    4.8% \n    19% \n    23.8% \n    33.3% \n    19% \n  \n  \n    I feel supported to implement RAP in my work \n    0% \n    14.3% \n    14.3% \n    42.9% \n    28.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    4.8% \n    14.3% \n    14.3% \n    47.6% \n    19% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    14.3% \n    9.5% \n    14.3% \n    38.1% \n    23.8% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    4.8% \n    19% \n    38.1% \n    38.1% \n  \n  \n    I understand what the key components of the RAP methodology are \n    4.8% \n    23.8% \n    23.8% \n    38.1% \n    9.5% \n  \n\n\n\na Sample size = 21"
  },
  {
    "objectID": "departments/welsh-government.html#rap-scores",
    "href": "departments/welsh-government.html#rap-scores",
    "title": "Department summary: Welsh Government",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    47.4% \n  \n  \n    Team open source code \n    Basic \n    0% \n  \n  \n    Version control \n    Basic \n    10.5% \n  \n  \n    Peer review \n    Basic \n    47.4% \n  \n  \n    AQUA book guidance \n    Basic \n    10.5% \n  \n  \n    Documentation \n    Basic \n    21.1% \n  \n  \n    Functions \n    Advanced \n    26.3% \n  \n  \n    Unit testing \n    Advanced \n    5.3% \n  \n  \n    Function documentation \n    Advanced \n    15.8% \n  \n  \n    Code packages \n    Advanced \n    5.3% \n  \n  \n    Follow code style guidelines \n    Advanced \n    42.1% \n  \n  \n    Continuous integration \n    Advanced \n    5.3% \n  \n  \n    Dependency management \n    Advanced \n    10.5% \n  \n\n\n\na Sample size = 19\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    26.3% \n  \n  \n    1 \n    42.1% \n  \n  \n    2 \n    15.8% \n  \n  \n    3 \n    0% \n  \n  \n    4 \n    15.8% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 19\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    47.4% \n  \n  \n    1 \n    26.3% \n  \n  \n    2 \n    10.5% \n  \n  \n    3 \n    5.3% \n  \n  \n    4 \n    5.3% \n  \n  \n    5 \n    5.3% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 19"
  },
  {
    "objectID": "departments.html",
    "href": "departments.html",
    "title": "Department summaries",
    "section": "",
    "text": "Below are links to profession-specific reports These contain summary statistics, filtered by department. Only departments with 20 or more respondents are included.\n\nCentre for Environment, Fisheries and Aquaculture Science\nDepartment for Business, Energy and Industrial Strategy (excl. agencies)\nDepartment for Digital, Culture, Media and Sport\nDepartment for Education\nDepartment for Environment, Food and Rural Affairs (excl. agencies)\nDepartment for Environment, Food and Rural Affairs (including agencies)\nDepartment for International Trade\nDepartment for Levelling Up, Housing and Communities\nDepartment for Transport (excl. agencies)\nDepartment for Work and Pensions\nDepartment of Health and Social Care (excl. agencies)\nForestry Commission\nGovernment Actuary’s Department\nHM Revenue and Customs\nMinistry of Defence\nMinistry of Justice (excl. agencies)\nNational Records of Scotland\nNHS\nNorthern Ireland Statistics and Research Agency\nOffice for National Statistics\nPublic Health Scotland\nScottish Government (excl. agencies)\nUK Health Security Agency\nWelsh Government"
  },
  {
    "objectID": "index.html#draft-notice",
    "href": "index.html#draft-notice",
    "title": "Home",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "index.html#how-do-analysts-use-programming-and-software-engineering-in-the-uk-public-sector",
    "href": "index.html#how-do-analysts-use-programming-and-software-engineering-in-the-uk-public-sector",
    "title": "Home",
    "section": "How do analysts use programming and software engineering in the UK Public Sector?",
    "text": "How do analysts use programming and software engineering in the UK Public Sector?\nPlease note it is possible that the figures presented here will change in future.\nThe Coding in Analysis and Research Survey (CARS) was developed to understand better how programming is used by government analysts. Most questions focused on whether and how analysts use code in their work. The survey is also concerned with Reproducible Analytical Pipelines (RAP).\nThe survey was distributed to government analysts and researchers in the autumn of 2022. The results presented here summarise the key findings from 1322 respondents from over 50 public sector organisations. You can find the 2021 findings in last year’s publication."
  },
  {
    "objectID": "index.html#who-is-this-research-for",
    "href": "index.html#who-is-this-research-for",
    "title": "Home",
    "section": "Who is this research for?",
    "text": "Who is this research for?\nThis research was made with senior analysts and leaders in mind. It is intended to be be useful for the development of strategies for public sector analysis and research. These findings should also be of interest to analysts and researchers in the public sector who are interested in understanding more about how their professions use programming in their work. Lastly, it will be useful to people outside the public sector who are interested in understanding the tools that are used in the public sector for analysis and research."
  },
  {
    "objectID": "index.html#how-to-use-this-research",
    "href": "index.html#how-to-use-this-research",
    "title": "Home",
    "section": "How to use this research",
    "text": "How to use this research\nDo:\n\nExplore the data to gain insights about current coding practices in government analysis and research\nRe-use the outputs if you wish\n\nAvoid:\n\nAttempting to estimate absolute frequencies - we did not use random sampling\nInferring differences between groups - these outputs are only intended to be descriptive and inferential tests were not carried out unless stated otherwise"
  },
  {
    "objectID": "index.html#rap",
    "href": "index.html#rap",
    "title": "Home",
    "section": "More information on reproducible analytical pipelines",
    "text": "More information on reproducible analytical pipelines\nQuality assurance for coding in analysis and research\nReproducible Analytical Pipelines (RAP) MVP\nRAP champions network"
  },
  {
    "objectID": "index.html#accessibility-statement",
    "href": "index.html#accessibility-statement",
    "title": "Home",
    "section": "Accessibility statement",
    "text": "Accessibility statement\nThis accessibility statement applies to the Coding in Analysis and Research Survey report. Please note that this does not include third-party content that is referenced from this site.\nThe website is managed by the Methodology and Quality division of the Office for National Statistics. We would like this guidance to be accessible for as many people as possible. This means that you should be able to:\n\nchange colours, contrast levels and fonts\nzoom in up to 300% without the text spilling off the screen\nnavigate most of the website using just a keyboard\nnavigate most of the website using speech recognition software\nlisten to most of the website using a screen reader (including the most recent versions of JAWS, NVDA and VoiceOver)\n\n\nFeedback and reporting accessibility problems\nWe’re always looking to improve the accessibility of our guidance. If you find any problems not listed on this page or think that we’re not meeting accessibility requirements, please contact us by email at gsshelp@statistics.gov.uk. Please also get in touch if you are unable to access any part of this guidance, or require the content in a different format.\nWe will consider your request and aim to get back to you within 5 working days.\n\n\nEnforcement procedure\nThe Equality and Human Rights Commission (EHRC) is responsible for enforcing the Public Sector Bodies (Websites and Mobile Applications) (No. 2) Accessibility Regulations 2018 (the ‘accessibility regulations’). If you’re not happy with how we respond to your complaint, you should contact the Equality Advisory and Support Service (EASS)."
  },
  {
    "objectID": "index.html#contact-details",
    "href": "index.html#contact-details",
    "title": "Home",
    "section": "Contact details",
    "text": "Contact details\nWe would like to know what you think of the survey and the outputs. Please contact us if you have feedback on any of the following:\n\nOutputs/analyses you would like to see added to this research\nInformation you would like to see collected in the next iteration of CARS\nAny other comments\n\nIf you are interested in this survey or any of the questions asked, or want to give feedback, please contact ASAP@ONS.gov.uk"
  },
  {
    "objectID": "professions/data-scientists.html#draft-notice",
    "href": "professions/data-scientists.html#draft-notice",
    "title": "Profession summary: government data scientists",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "professions/data-scientists.html#coding-frequency-and-tools",
    "href": "professions/data-scientists.html#coding-frequency-and-tools",
    "title": "Profession summary: government data scientists",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    1.6% \n  \n  \n    Rarely \n    6% \n  \n  \n    Sometimes \n    13% \n  \n  \n    Regularly \n    28.3% \n  \n  \n    All the time \n    51.1% \n  \n\n\n\na Sample size = 184\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    92.2% \n    7.8% \n  \n  \n    Data cleaning \n    90.9% \n    9.1% \n  \n  \n    Data linking \n    88.6% \n    11.4% \n  \n  \n    Data transfer / migration \n    79% \n    21% \n  \n  \n    Data visualisation \n    87.1% \n    12.9% \n  \n  \n    Machine learning \n    91.9% \n    8.1% \n  \n  \n    Modelling \n    86.7% \n    13.3% \n  \n  \n    Quality assurance \n    76.8% \n    23.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    11.4% \n    51.6% \n    37% \n  \n  \n    Java / Scala \n    13.6% \n    50% \n    36.4% \n  \n  \n    Javascript / Typescript \n    23.4% \n    45.1% \n    31.5% \n  \n  \n    Matlab \n    7.1% \n    43.5% \n    49.5% \n  \n  \n    Python \n    78.8% \n    14.1% \n    7.1% \n  \n  \n    R \n    94.6% \n    2.2% \n    3.3% \n  \n  \n    SAS \n    24.5% \n    46.2% \n    29.3% \n  \n  \n    SPSS \n    29.9% \n    42.9% \n    27.2% \n  \n  \n    SQL \n    80.4% \n    13.6% \n    6% \n  \n  \n    Stata \n    17.4% \n    50.5% \n    32.1% \n  \n  \n    VBA \n    46.7% \n    40.8% \n    12.5% \n  \n\n\n\na Sample size = 184\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.6% \n    4.9% \n    87.5% \n  \n  \n    Java / Scala \n    8.2% \n    6.5% \n    85.3% \n  \n  \n    Javascript / Typescript \n    15.2% \n    3.3% \n    81.5% \n  \n  \n    Matlab \n    24.5% \n    3.3% \n    72.3% \n  \n  \n    Python \n    69% \n    1.6% \n    29.3% \n  \n  \n    R \n    84.8% \n    1.1% \n    14.1% \n  \n  \n    SAS \n    16.8% \n    4.9% \n    78.3% \n  \n  \n    SPSS \n    26.1% \n    4.3% \n    69.6% \n  \n  \n    SQL \n    77.2% \n    1.6% \n    21.2% \n  \n  \n    Stata \n    5.4% \n    6.5% \n    88% \n  \n  \n    VBA \n    23.9% \n    7.1% \n    69% \n  \n\n\n\na Sample size = 184\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    57.6% \n    6.1% \n    36.4% \n  \n  \n    Java / Scala \n    60.5% \n    5.3% \n    34.2% \n  \n  \n    Javascript / Typescript \n    50% \n    26.8% \n    23.2% \n  \n  \n    Matlab \n    16.7% \n    7.4% \n    75.9% \n  \n  \n    Python \n    19.6% \n    72.2% \n    8.2% \n  \n  \n    R \n    11.4% \n    87.5% \n    1.1% \n  \n  \n    SAS \n    47.5% \n    28.8% \n    23.7% \n  \n  \n    SPSS \n    39.2% \n    30.4% \n    30.4% \n  \n  \n    SQL \n    10.1% \n    83.5% \n    6.3% \n  \n  \n    Stata \n    74.4% \n    7.7% \n    17.9% \n  \n  \n    VBA \n    50% \n    47.7% \n    2.3%"
  },
  {
    "objectID": "professions/data-scientists.html#coding-capability",
    "href": "professions/data-scientists.html#coding-capability",
    "title": "Profession summary: government data scientists",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    5.5% \n  \n  \n    Slightly worse \n    8.5% \n  \n  \n    No change \n    10.4% \n  \n  \n    Slightly better \n    35.4% \n  \n  \n    Significantly better \n    40.2% \n  \n\n\n\na Sample size = 164\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    10.4% \n  \n  \n    In education \n    58.5% \n  \n  \n    In private sector employment \n    2.7% \n  \n  \n    In public sector employment \n    7.7% \n  \n  \n    Self-taught \n    19.1% \n  \n  \n    Other \n    1.6% \n  \n\n\n\na Sample size = 183"
  },
  {
    "objectID": "professions/data-scientists.html#coding-practices",
    "href": "professions/data-scientists.html#coding-practices",
    "title": "Profession summary: government data scientists",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    33.7% \n    13.8% \n    9.4% \n    14.9% \n    18.8% \n    9.4% \n  \n  \n    Automated data quality assurance \n    3.9% \n    13.3% \n    20.4% \n    24.9% \n    22.1% \n    15.5% \n  \n  \n    Code review \n    0% \n    5.5% \n    9.4% \n    22.1% \n    33.1% \n    29.8% \n  \n  \n    Coding guidelines / Style guides \n    1.7% \n    5.5% \n    6.6% \n    18.8% \n    37% \n    30.4% \n  \n  \n    Functions \n    0.6% \n    5% \n    5% \n    17.1% \n    24.3% \n    48.1% \n  \n  \n    Open source own code \n    6.1% \n    30.9% \n    18.2% \n    25.4% \n    12.7% \n    6.6% \n  \n  \n    Packaging code \n    3.9% \n    29.3% \n    21% \n    26% \n    13.3% \n    6.6% \n  \n  \n    Standard directory structure \n    9.4% \n    10.5% \n    8.8% \n    22.7% \n    26.5% \n    22.1% \n  \n  \n    Unit testing \n    11.6% \n    13.3% \n    12.7% \n    29.3% \n    21% \n    12.2% \n  \n  \n    Use open source software \n    1.1% \n    5% \n    2.8% \n    5% \n    22.7% \n    63.5% \n  \n  \n    Version control \n    2.8% \n    12.2% \n    6.6% \n    13.3% \n    23.2% \n    42% \n  \n\n\n\na Sample size = 181\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    19.3% \n    27.1% \n    15.5% \n    18.8% \n    14.9% \n    4.4% \n  \n  \n    Code comments \n    0.6% \n    2.2% \n    1.7% \n    6.6% \n    25.4% \n    63.5% \n  \n  \n    Data or assumptions registers \n    20.4% \n    35.4% \n    15.5% \n    12.2% \n    11.6% \n    5% \n  \n  \n    Desk notes \n    22.1% \n    16% \n    16% \n    23.2% \n    16% \n    6.6% \n  \n  \n    Documentation for each function or class \n    2.8% \n    12.7% \n    12.7% \n    19.9% \n    28.7% \n    23.2% \n  \n  \n    Flow charts \n    2.2% \n    28.7% \n    24.9% \n    27.6% \n    12.7% \n    3.9% \n  \n  \n    README files \n    1.7% \n    8.8% \n    10.5% \n    24.9% \n    27.1% \n    27.1% \n  \n\n\n\na Sample size = 181\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    54.7% \n  \n  \n    No \n    28.2% \n  \n  \n    I don't know what dependency management is \n    17.1% \n  \n\n\n\na Sample size = 181\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    29.8% \n  \n  \n    No \n    43.1% \n  \n  \n    I don't know what continuous integration is \n    27.1% \n  \n\n\n\na Sample size = 181\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    8.3% \n  \n  \n    No \n    69.6% \n  \n  \n    I don't know what reproducible workflows are \n    22.1% \n  \n\n\n\na Sample size = 181"
  },
  {
    "objectID": "professions/data-scientists.html#rap-knowledge-and-opinions",
    "href": "professions/data-scientists.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government data scientists",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    15.4% \n  \n  \n    I don't know what a RAP champion is \n    18.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    35.4% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.1% \n  \n  \n    I know who the RAP champion in my department is \n    25.1% \n  \n\n\n\na Sample size = 175\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    11.5% \n    15.9% \n    22.3% \n    24.2% \n    26.1% \n  \n  \n    I feel confident implementing RAP in my work \n    6.4% \n    10.8% \n    21% \n    32.5% \n    29.3% \n  \n  \n    I feel supported to implement RAP in my work \n    8.3% \n    10.2% \n    25.5% \n    32.5% \n    23.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    6.4% \n    18.5% \n    17.2% \n    31.8% \n    26.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.6% \n    6.4% \n    27.4% \n    27.4% \n    31.2% \n  \n  \n    I think it is important to implement RAP in my work \n    2.5% \n    1.9% \n    13.4% \n    41.4% \n    40.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    6.4% \n    8.9% \n    21.7% \n    36.3% \n    26.8% \n  \n\n\n\na Sample size = 157"
  },
  {
    "objectID": "professions/data-scientists.html#rap-scores",
    "href": "professions/data-scientists.html#rap-scores",
    "title": "Profession summary: government data scientists",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    86.2% \n  \n  \n    Team open source code \n    Basic \n    19.3% \n  \n  \n    Version control \n    Basic \n    65.2% \n  \n  \n    Peer review \n    Basic \n    63% \n  \n  \n    AQUA book guidance \n    Basic \n    28.2% \n  \n  \n    Documentation \n    Basic \n    51.4% \n  \n  \n    Functions \n    Advanced \n    72.4% \n  \n  \n    Unit testing \n    Advanced \n    33.1% \n  \n  \n    Function documentation \n    Advanced \n    51.9% \n  \n  \n    Code packages \n    Advanced \n    19.9% \n  \n  \n    Follow code style guidelines \n    Advanced \n    67.4% \n  \n  \n    Continuous integration \n    Advanced \n    29.8% \n  \n  \n    Dependency management \n    Advanced \n    54.7% \n  \n\n\n\na Sample size = 181\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    5% \n  \n  \n    1 \n    15.5% \n  \n  \n    2 \n    14.9% \n  \n  \n    3 \n    19.9% \n  \n  \n    4 \n    21% \n  \n  \n    5 \n    18.2% \n  \n  \n    6 \n    5.5% \n  \n\n\n\na Sample size = 181\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    11.6% \n  \n  \n    1 \n    11.6% \n  \n  \n    2 \n    13.3% \n  \n  \n    3 \n    14.4% \n  \n  \n    4 \n    16% \n  \n  \n    5 \n    17.7% \n  \n  \n    6 \n    12.7% \n  \n  \n    7 \n    2.8% \n  \n\n\n\na Sample size = 181"
  },
  {
    "objectID": "professions/digital-and-data.html#draft-notice",
    "href": "professions/digital-and-data.html#draft-notice",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "professions/digital-and-data.html#coding-frequency-and-tools",
    "href": "professions/digital-and-data.html#coding-frequency-and-tools",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    2.2% \n  \n  \n    Rarely \n    9.8% \n  \n  \n    Sometimes \n    19.6% \n  \n  \n    Regularly \n    31.5% \n  \n  \n    All the time \n    37% \n  \n\n\n\na Sample size = 92\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    89.8% \n    10.2% \n  \n  \n    Data cleaning \n    86.4% \n    13.6% \n  \n  \n    Data linking \n    85% \n    15% \n  \n  \n    Data transfer / migration \n    76.6% \n    23.4% \n  \n  \n    Data visualisation \n    77.6% \n    22.4% \n  \n  \n    Machine learning \n    91.7% \n    8.3% \n  \n  \n    Modelling \n    86.8% \n    13.2% \n  \n  \n    Quality assurance \n    79.8% \n    20.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    15.2% \n    48.9% \n    35.9% \n  \n  \n    Java / Scala \n    19.6% \n    50% \n    30.4% \n  \n  \n    Javascript / Typescript \n    30.4% \n    46.7% \n    22.8% \n  \n  \n    Matlab \n    5.4% \n    47.8% \n    46.7% \n  \n  \n    Python \n    84.8% \n    7.6% \n    7.6% \n  \n  \n    R \n    92.4% \n    3.3% \n    4.3% \n  \n  \n    SAS \n    27.2% \n    47.8% \n    25% \n  \n  \n    SPSS \n    34.8% \n    42.4% \n    22.8% \n  \n  \n    SQL \n    80.4% \n    13% \n    6.5% \n  \n  \n    Stata \n    17.4% \n    54.3% \n    28.3% \n  \n  \n    VBA \n    51.1% \n    37% \n    12% \n  \n\n\n\na Sample size = 92\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    16.3% \n    1.1% \n    82.6% \n  \n  \n    Java / Scala \n    5.4% \n    3.3% \n    91.3% \n  \n  \n    Javascript / Typescript \n    21.7% \n    3.3% \n    75% \n  \n  \n    Matlab \n    19.6% \n    2.2% \n    78.3% \n  \n  \n    Python \n    70.7% \n    0% \n    29.3% \n  \n  \n    R \n    69.6% \n    0% \n    30.4% \n  \n  \n    SAS \n    19.6% \n    5.4% \n    75% \n  \n  \n    SPSS \n    17.4% \n    2.2% \n    80.4% \n  \n  \n    SQL \n    78.3% \n    1.1% \n    20.7% \n  \n  \n    Stata \n    9.8% \n    3.3% \n    87% \n  \n  \n    VBA \n    33.7% \n    5.4% \n    60.9% \n  \n\n\n\na Sample size = 92\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    34.8% \n    26.1% \n    39.1% \n  \n  \n    Java / Scala \n    76.2% \n    9.5% \n    14.3% \n  \n  \n    Javascript / Typescript \n    44.4% \n    33.3% \n    22.2% \n  \n  \n    Matlab \n    21.7% \n    0% \n    78.3% \n  \n  \n    Python \n    24.4% \n    66.3% \n    9.3% \n  \n  \n    R \n    24.7% \n    75.3% \n    0% \n  \n  \n    SAS \n    43.8% \n    34.4% \n    21.9% \n  \n  \n    SPSS \n    61% \n    17.1% \n    22% \n  \n  \n    SQL \n    11.1% \n    80.2% \n    8.6% \n  \n  \n    Stata \n    64% \n    0% \n    36% \n  \n  \n    VBA \n    38% \n    56% \n    6%"
  },
  {
    "objectID": "professions/digital-and-data.html#coding-capability",
    "href": "professions/digital-and-data.html#coding-capability",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    6.2% \n  \n  \n    Slightly worse \n    9.9% \n  \n  \n    No change \n    11.1% \n  \n  \n    Slightly better \n    37% \n  \n  \n    Significantly better \n    35.8% \n  \n\n\n\na Sample size = 81\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    13.2% \n  \n  \n    In education \n    62.6% \n  \n  \n    In private sector employment \n    4.4% \n  \n  \n    In public sector employment \n    3.3% \n  \n  \n    Self-taught \n    14.3% \n  \n  \n    Other \n    2.2% \n  \n\n\n\na Sample size = 91"
  },
  {
    "objectID": "professions/digital-and-data.html#coding-practices",
    "href": "professions/digital-and-data.html#coding-practices",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    33.3% \n    16.7% \n    14.4% \n    16.7% \n    15.6% \n    3.3% \n  \n  \n    Automated data quality assurance \n    2.2% \n    26.7% \n    13.3% \n    23.3% \n    27.8% \n    6.7% \n  \n  \n    Code review \n    0% \n    8.9% \n    12.2% \n    18.9% \n    31.1% \n    28.9% \n  \n  \n    Coding guidelines / Style guides \n    2.2% \n    5.6% \n    13.3% \n    16.7% \n    37.8% \n    24.4% \n  \n  \n    Functions \n    1.1% \n    6.7% \n    8.9% \n    17.8% \n    25.6% \n    40% \n  \n  \n    Open source own code \n    4.4% \n    34.4% \n    24.4% \n    18.9% \n    14.4% \n    3.3% \n  \n  \n    Packaging code \n    4.4% \n    28.9% \n    21.1% \n    27.8% \n    15.6% \n    2.2% \n  \n  \n    Standard directory structure \n    11.1% \n    13.3% \n    12.2% \n    16.7% \n    30% \n    16.7% \n  \n  \n    Unit testing \n    12.2% \n    13.3% \n    21.1% \n    31.1% \n    13.3% \n    8.9% \n  \n  \n    Use open source software \n    3.3% \n    8.9% \n    7.8% \n    4.4% \n    25.6% \n    50% \n  \n  \n    Version control \n    0% \n    15.6% \n    13.3% \n    4.4% \n    27.8% \n    38.9% \n  \n\n\n\na Sample size = 90\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    24.4% \n    26.7% \n    15.6% \n    23.3% \n    8.9% \n    1.1% \n  \n  \n    Code comments \n    1.1% \n    3.3% \n    5.6% \n    5.6% \n    36.7% \n    47.8% \n  \n  \n    Data or assumptions registers \n    24.4% \n    32.2% \n    20% \n    11.1% \n    10% \n    2.2% \n  \n  \n    Desk notes \n    23.3% \n    14.4% \n    12.2% \n    22.2% \n    18.9% \n    8.9% \n  \n  \n    Documentation for each function or class \n    6.7% \n    16.7% \n    14.4% \n    16.7% \n    28.9% \n    16.7% \n  \n  \n    Flow charts \n    3.3% \n    25.6% \n    26.7% \n    28.9% \n    11.1% \n    4.4% \n  \n  \n    README files \n    2.2% \n    10% \n    11.1% \n    23.3% \n    28.9% \n    24.4% \n  \n\n\n\na Sample size = 90\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    54.4% \n  \n  \n    No \n    28.9% \n  \n  \n    I don't know what dependency management is \n    16.7% \n  \n\n\n\na Sample size = 90\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    32.2% \n  \n  \n    No \n    46.7% \n  \n  \n    I don't know what continuous integration is \n    21.1% \n  \n\n\n\na Sample size = 90\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    13.3% \n  \n  \n    No \n    73.3% \n  \n  \n    I don't know what reproducible workflows are \n    13.3% \n  \n\n\n\na Sample size = 90"
  },
  {
    "objectID": "professions/digital-and-data.html#rap-knowledge-and-opinions",
    "href": "professions/digital-and-data.html#rap-knowledge-and-opinions",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    19.1% \n  \n  \n    I don't know what a RAP champion is \n    22.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    33.7% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    3.4% \n  \n  \n    I know who the RAP champion in my department is \n    21.3% \n  \n\n\n\na Sample size = 89\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    12% \n    17.3% \n    28% \n    24% \n    18.7% \n  \n  \n    I feel confident implementing RAP in my work \n    8% \n    14.7% \n    25.3% \n    32% \n    20% \n  \n  \n    I feel supported to implement RAP in my work \n    9.3% \n    16% \n    26.7% \n    33.3% \n    14.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    8% \n    17.3% \n    12% \n    42.7% \n    20% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    10.7% \n    8% \n    32% \n    32% \n    17.3% \n  \n  \n    I think it is important to implement RAP in my work \n    2.7% \n    5.3% \n    16% \n    48% \n    28% \n  \n  \n    I understand what the key components of the RAP methodology are \n    6.7% \n    10.7% \n    17.3% \n    45.3% \n    20% \n  \n\n\n\na Sample size = 75"
  },
  {
    "objectID": "professions/digital-and-data.html#rap-scores",
    "href": "professions/digital-and-data.html#rap-scores",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    75.6% \n  \n  \n    Team open source code \n    Basic \n    17.8% \n  \n  \n    Version control \n    Basic \n    66.7% \n  \n  \n    Peer review \n    Basic \n    60% \n  \n  \n    AQUA book guidance \n    Basic \n    18.9% \n  \n  \n    Documentation \n    Basic \n    48.9% \n  \n  \n    Functions \n    Advanced \n    65.6% \n  \n  \n    Unit testing \n    Advanced \n    22.2% \n  \n  \n    Function documentation \n    Advanced \n    45.6% \n  \n  \n    Code packages \n    Advanced \n    17.8% \n  \n  \n    Follow code style guidelines \n    Advanced \n    62.2% \n  \n  \n    Continuous integration \n    Advanced \n    32.2% \n  \n  \n    Dependency management \n    Advanced \n    54.4% \n  \n\n\n\na Sample size = 90\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    12.2% \n  \n  \n    1 \n    13.3% \n  \n  \n    2 \n    12.2% \n  \n  \n    3 \n    24.4% \n  \n  \n    4 \n    17.8% \n  \n  \n    5 \n    14.4% \n  \n  \n    6 \n    5.6% \n  \n\n\n\na Sample size = 90\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    15.6% \n  \n  \n    1 \n    11.1% \n  \n  \n    2 \n    16.7% \n  \n  \n    3 \n    13.3% \n  \n  \n    4 \n    16.7% \n  \n  \n    5 \n    16.7% \n  \n  \n    6 \n    4.4% \n  \n  \n    7 \n    5.6% \n  \n\n\n\na Sample size = 90"
  },
  {
    "objectID": "professions/government-actuarys-department.html#draft-notice",
    "href": "professions/government-actuarys-department.html#draft-notice",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "professions/government-actuarys-department.html#coding-frequency-and-tools",
    "href": "professions/government-actuarys-department.html#coding-frequency-and-tools",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    29.7% \n  \n  \n    Rarely \n    16.2% \n  \n  \n    Sometimes \n    10.8% \n  \n  \n    Regularly \n    27% \n  \n  \n    All the time \n    16.2% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    62.5% \n    37.5% \n  \n  \n    Data cleaning \n    61.5% \n    38.5% \n  \n  \n    Data linking \n    66.7% \n    33.3% \n  \n  \n    Data transfer / migration \n    62.5% \n    37.5% \n  \n  \n    Data visualisation \n    50% \n    50% \n  \n  \n    Machine learning \n    87.5% \n    12.5% \n  \n  \n    Modelling \n    60% \n    40% \n  \n  \n    Quality assurance \n    35.7% \n    64.3% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.7% \n    54.1% \n    43.2% \n  \n  \n    Java / Scala \n    0% \n    56.8% \n    43.2% \n  \n  \n    Javascript / Typescript \n    16.2% \n    54.1% \n    29.7% \n  \n  \n    Matlab \n    2.7% \n    43.2% \n    54.1% \n  \n  \n    Python \n    89.2% \n    8.1% \n    2.7% \n  \n  \n    R \n    91.9% \n    2.7% \n    5.4% \n  \n  \n    SAS \n    86.5% \n    8.1% \n    5.4% \n  \n  \n    SPSS \n    2.7% \n    48.6% \n    48.6% \n  \n  \n    SQL \n    45.9% \n    37.8% \n    16.2% \n  \n  \n    Stata \n    0% \n    54.1% \n    45.9% \n  \n  \n    VBA \n    89.2% \n    8.1% \n    2.7% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    13.5% \n    2.7% \n    83.8% \n  \n  \n    Java / Scala \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    Javascript / Typescript \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    Matlab \n    21.6% \n    5.4% \n    73% \n  \n  \n    Python \n    32.4% \n    0% \n    67.6% \n  \n  \n    R \n    62.2% \n    5.4% \n    32.4% \n  \n  \n    SAS \n    29.7% \n    5.4% \n    64.9% \n  \n  \n    SPSS \n    8.1% \n    2.7% \n    89.2% \n  \n  \n    SQL \n    29.7% \n    2.7% \n    67.6% \n  \n  \n    Stata \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    VBA \n    56.8% \n    2.7% \n    40.5% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    16.7% \n    0% \n    83.3% \n  \n  \n    Java / Scala \n    0% \n    0% \n    100% \n  \n  \n    Javascript / Typescript \n    42.9% \n    42.9% \n    14.3% \n  \n  \n    Matlab \n    11.1% \n    0% \n    88.9% \n  \n  \n    Python \n    63.6% \n    36.4% \n    0% \n  \n  \n    R \n    34.3% \n    62.9% \n    2.9% \n  \n  \n    SAS \n    66.7% \n    30.3% \n    3% \n  \n  \n    SPSS \n    25% \n    0% \n    75% \n  \n  \n    SQL \n    45% \n    40% \n    15% \n  \n  \n    Stata \n    0% \n    0% \n    100% \n  \n  \n    VBA \n    36.4% \n    63.6% \n    0%"
  },
  {
    "objectID": "professions/government-actuarys-department.html#coding-capability",
    "href": "professions/government-actuarys-department.html#coding-capability",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    12.5% \n  \n  \n    Slightly worse \n    16.7% \n  \n  \n    No change \n    12.5% \n  \n  \n    Slightly better \n    37.5% \n  \n  \n    Significantly better \n    20.8% \n  \n\n\n\na Sample size = 24\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    34.4% \n  \n  \n    In education \n    43.8% \n  \n  \n    In private sector employment \n    3.1% \n  \n  \n    In public sector employment \n    3.1% \n  \n  \n    Self-taught \n    15.6% \n  \n  \n    Other \n    0% \n  \n\n\n\na Sample size = 32"
  },
  {
    "objectID": "professions/government-actuarys-department.html#coding-practices",
    "href": "professions/government-actuarys-department.html#coding-practices",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    46.2% \n    19.2% \n    7.7% \n    11.5% \n    11.5% \n    3.8% \n  \n  \n    Automated data quality assurance \n    15.4% \n    19.2% \n    26.9% \n    26.9% \n    7.7% \n    3.8% \n  \n  \n    Code review \n    0% \n    7.7% \n    15.4% \n    19.2% \n    38.5% \n    19.2% \n  \n  \n    Coding guidelines / Style guides \n    11.5% \n    19.2% \n    0% \n    26.9% \n    34.6% \n    7.7% \n  \n  \n    Functions \n    15.4% \n    3.8% \n    11.5% \n    15.4% \n    26.9% \n    26.9% \n  \n  \n    Open source own code \n    15.4% \n    65.4% \n    7.7% \n    3.8% \n    7.7% \n    0% \n  \n  \n    Packaging code \n    23.1% \n    30.8% \n    15.4% \n    19.2% \n    11.5% \n    0% \n  \n  \n    Standard directory structure \n    15.4% \n    23.1% \n    11.5% \n    15.4% \n    30.8% \n    3.8% \n  \n  \n    Unit testing \n    23.1% \n    15.4% \n    11.5% \n    30.8% \n    11.5% \n    7.7% \n  \n  \n    Use open source software \n    15.4% \n    11.5% \n    7.7% \n    26.9% \n    19.2% \n    19.2% \n  \n  \n    Version control \n    26.9% \n    30.8% \n    19.2% \n    7.7% \n    11.5% \n    3.8% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    23.1% \n    15.4% \n    3.8% \n    34.6% \n    15.4% \n    7.7% \n  \n  \n    Code comments \n    0% \n    3.8% \n    11.5% \n    7.7% \n    38.5% \n    38.5% \n  \n  \n    Data or assumptions registers \n    42.3% \n    34.6% \n    11.5% \n    3.8% \n    7.7% \n    0% \n  \n  \n    Desk notes \n    23.1% \n    23.1% \n    7.7% \n    34.6% \n    11.5% \n    0% \n  \n  \n    Documentation for each function or class \n    19.2% \n    15.4% \n    7.7% \n    30.8% \n    23.1% \n    3.8% \n  \n  \n    Flow charts \n    15.4% \n    26.9% \n    19.2% \n    23.1% \n    15.4% \n    0% \n  \n  \n    README files \n    23.1% \n    15.4% \n    15.4% \n    23.1% \n    19.2% \n    3.8% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    15.4% \n  \n  \n    No \n    34.6% \n  \n  \n    I don't know what dependency management is \n    50% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    7.7% \n  \n  \n    No \n    46.2% \n  \n  \n    I don't know what continuous integration is \n    46.2% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what reproducible workflows are \n    46.2% \n  \n\n\n\na Sample size = 26"
  },
  {
    "objectID": "professions/government-actuarys-department.html#rap-knowledge-and-opinions",
    "href": "professions/government-actuarys-department.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    56.8% \n  \n  \n    I don't know what a RAP champion is \n    18.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    8.1% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.4% \n  \n  \n    I know who the RAP champion in my department is \n    10.8% \n  \n\n\n\na Sample size = 37\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    31.2% \n    6.2% \n    43.8% \n    12.5% \n    6.2% \n  \n  \n    I feel confident implementing RAP in my work \n    25% \n    18.8% \n    50% \n    0% \n    6.2% \n  \n  \n    I feel supported to implement RAP in my work \n    18.8% \n    12.5% \n    43.8% \n    18.8% \n    6.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    25% \n    18.8% \n    37.5% \n    6.2% \n    12.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    25% \n    6.2% \n    37.5% \n    25% \n    6.2% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    6.2% \n    56.2% \n    25% \n    12.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    18.8% \n    6.2% \n    43.8% \n    25% \n    6.2% \n  \n\n\n\na Sample size = 16"
  },
  {
    "objectID": "professions/government-actuarys-department.html#rap-scores",
    "href": "professions/government-actuarys-department.html#rap-scores",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    38.5% \n  \n  \n    Team open source code \n    Basic \n    7.7% \n  \n  \n    Version control \n    Basic \n    15.4% \n  \n  \n    Peer review \n    Basic \n    57.7% \n  \n  \n    AQUA book guidance \n    Basic \n    15.4% \n  \n  \n    Documentation \n    Basic \n    19.2% \n  \n  \n    Functions \n    Advanced \n    53.8% \n  \n  \n    Unit testing \n    Advanced \n    19.2% \n  \n  \n    Function documentation \n    Advanced \n    26.9% \n  \n  \n    Code packages \n    Advanced \n    11.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    42.3% \n  \n  \n    Continuous integration \n    Advanced \n    7.7% \n  \n  \n    Dependency management \n    Advanced \n    15.4% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    19.2% \n  \n  \n    1 \n    38.5% \n  \n  \n    2 \n    23.1% \n  \n  \n    3 \n    11.5% \n  \n  \n    4 \n    3.8% \n  \n  \n    5 \n    3.8% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 26\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.1% \n  \n  \n    1 \n    26.9% \n  \n  \n    2 \n    26.9% \n  \n  \n    3 \n    7.7% \n  \n  \n    4 \n    7.7% \n  \n  \n    5 \n    3.8% \n  \n  \n    6 \n    3.8% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 26"
  },
  {
    "objectID": "professions/government-economic-service.html#draft-notice",
    "href": "professions/government-economic-service.html#draft-notice",
    "title": "Profession summary: government economic service (GES)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "professions/government-economic-service.html#coding-frequency-and-tools",
    "href": "professions/government-economic-service.html#coding-frequency-and-tools",
    "title": "Profession summary: government economic service (GES)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    33.9% \n  \n  \n    Rarely \n    17.4% \n  \n  \n    Sometimes \n    22.9% \n  \n  \n    Regularly \n    16.5% \n  \n  \n    All the time \n    9.2% \n  \n\n\n\na Sample size = 109\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    57.4% \n    42.6% \n  \n  \n    Data cleaning \n    68.8% \n    31.2% \n  \n  \n    Data linking \n    73.9% \n    26.1% \n  \n  \n    Data transfer / migration \n    40.6% \n    59.4% \n  \n  \n    Data visualisation \n    52.1% \n    47.9% \n  \n  \n    Machine learning \n    92.9% \n    7.1% \n  \n  \n    Modelling \n    56.5% \n    43.5% \n  \n  \n    Quality assurance \n    34.4% \n    65.6% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.8% \n    78.9% \n    18.3% \n  \n  \n    Java / Scala \n    4.6% \n    76.1% \n    19.3% \n  \n  \n    Javascript / Typescript \n    5.5% \n    75.2% \n    19.3% \n  \n  \n    Matlab \n    3.7% \n    72.5% \n    23.9% \n  \n  \n    Python \n    50.5% \n    38.5% \n    11% \n  \n  \n    R \n    87.2% \n    7.3% \n    5.5% \n  \n  \n    SAS \n    24.8% \n    56% \n    19.3% \n  \n  \n    SPSS \n    21.1% \n    63.3% \n    15.6% \n  \n  \n    SQL \n    35.8% \n    48.6% \n    15.6% \n  \n  \n    Stata \n    40.4% \n    43.1% \n    16.5% \n  \n  \n    VBA \n    31.2% \n    57.8% \n    11% \n  \n\n\n\na Sample size = 109\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    1.8% \n    5.5% \n    92.7% \n  \n  \n    Java / Scala \n    0.9% \n    6.4% \n    92.7% \n  \n  \n    Javascript / Typescript \n    2.8% \n    7.3% \n    89.9% \n  \n  \n    Matlab \n    9.2% \n    5.5% \n    85.3% \n  \n  \n    Python \n    24.8% \n    4.6% \n    70.6% \n  \n  \n    R \n    62.4% \n    1.8% \n    35.8% \n  \n  \n    SAS \n    12.8% \n    3.7% \n    83.5% \n  \n  \n    SPSS \n    11.9% \n    3.7% \n    84.4% \n  \n  \n    SQL \n    21.1% \n    4.6% \n    74.3% \n  \n  \n    Stata \n    51.4% \n    2.8% \n    45.9% \n  \n  \n    VBA \n    11.9% \n    3.7% \n    84.4% \n  \n\n\n\na Sample size = 109\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    50% \n    25% \n    25% \n  \n  \n    Java / Scala \n    83.3% \n    0% \n    16.7% \n  \n  \n    Javascript / Typescript \n    66.7% \n    0% \n    33.3% \n  \n  \n    Matlab \n    28.6% \n    0% \n    71.4% \n  \n  \n    Python \n    55.7% \n    34.4% \n    9.8% \n  \n  \n    R \n    30.6% \n    66.3% \n    3.1% \n  \n  \n    SAS \n    60% \n    17.1% \n    22.9% \n  \n  \n    SPSS \n    60.6% \n    9.1% \n    30.3% \n  \n  \n    SQL \n    48.9% \n    37.8% \n    13.3% \n  \n  \n    Stata \n    17.6% \n    47.1% \n    35.3% \n  \n  \n    VBA \n    63.9% \n    30.6% \n    5.6%"
  },
  {
    "objectID": "professions/government-economic-service.html#coding-capability",
    "href": "professions/government-economic-service.html#coding-capability",
    "title": "Profession summary: government economic service (GES)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    8.5% \n  \n  \n    Slightly worse \n    15.5% \n  \n  \n    No change \n    21.1% \n  \n  \n    Slightly better \n    31% \n  \n  \n    Significantly better \n    23.9% \n  \n\n\n\na Sample size = 71\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    27% \n  \n  \n    In education \n    44.9% \n  \n  \n    In private sector employment \n    3.4% \n  \n  \n    In public sector employment \n    12.4% \n  \n  \n    Self-taught \n    11.2% \n  \n  \n    Other \n    1.1% \n  \n\n\n\na Sample size = 89"
  },
  {
    "objectID": "professions/government-economic-service.html#coding-practices",
    "href": "professions/government-economic-service.html#coding-practices",
    "title": "Profession summary: government economic service (GES)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    25% \n    25% \n    13.9% \n    22.2% \n    9.7% \n    4.2% \n  \n  \n    Automated data quality assurance \n    8.3% \n    43.1% \n    18.1% \n    18.1% \n    6.9% \n    5.6% \n  \n  \n    Code review \n    1.4% \n    8.3% \n    6.9% \n    31.9% \n    33.3% \n    18.1% \n  \n  \n    Coding guidelines / Style guides \n    8.3% \n    15.3% \n    12.5% \n    25% \n    26.4% \n    12.5% \n  \n  \n    Functions \n    8.3% \n    13.9% \n    11.1% \n    22.2% \n    23.6% \n    20.8% \n  \n  \n    Open source own code \n    34.7% \n    44.4% \n    5.6% \n    9.7% \n    4.2% \n    1.4% \n  \n  \n    Packaging code \n    29.2% \n    44.4% \n    13.9% \n    8.3% \n    2.8% \n    1.4% \n  \n  \n    Standard directory structure \n    29.2% \n    22.2% \n    11.1% \n    11.1% \n    19.4% \n    6.9% \n  \n  \n    Unit testing \n    44.4% \n    22.2% \n    18.1% \n    9.7% \n    5.6% \n    0% \n  \n  \n    Use open source software \n    20.8% \n    11.1% \n    8.3% \n    19.4% \n    19.4% \n    20.8% \n  \n  \n    Version control \n    18.1% \n    41.7% \n    16.7% \n    8.3% \n    11.1% \n    4.2% \n  \n\n\n\na Sample size = 72\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    22.2% \n    26.4% \n    8.3% \n    19.4% \n    18.1% \n    5.6% \n  \n  \n    Code comments \n    6.9% \n    8.3% \n    2.8% \n    9.7% \n    25% \n    47.2% \n  \n  \n    Data or assumptions registers \n    15.3% \n    25% \n    9.7% \n    12.5% \n    25% \n    12.5% \n  \n  \n    Desk notes \n    34.7% \n    25% \n    8.3% \n    13.9% \n    11.1% \n    6.9% \n  \n  \n    Documentation for each function or class \n    22.2% \n    34.7% \n    18.1% \n    12.5% \n    8.3% \n    4.2% \n  \n  \n    Flow charts \n    13.9% \n    40.3% \n    12.5% \n    23.6% \n    9.7% \n    0% \n  \n  \n    README files \n    16.7% \n    31.9% \n    19.4% \n    15.3% \n    11.1% \n    5.6% \n  \n\n\n\na Sample size = 72\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    6.9% \n  \n  \n    No \n    36.1% \n  \n  \n    I don't know what dependency management is \n    56.9% \n  \n\n\n\na Sample size = 72\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    8.3% \n  \n  \n    No \n    50% \n  \n  \n    I don't know what continuous integration is \n    41.7% \n  \n\n\n\na Sample size = 72\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    1.4% \n  \n  \n    No \n    37.5% \n  \n  \n    I don't know what reproducible workflows are \n    61.1% \n  \n\n\n\na Sample size = 72"
  },
  {
    "objectID": "professions/government-economic-service.html#rap-knowledge-and-opinions",
    "href": "professions/government-economic-service.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government economic service (GES)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    33% \n  \n  \n    I don't know what a RAP champion is \n    22% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    26.6% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    1.8% \n  \n  \n    I know who the RAP champion in my department is \n    16.5% \n  \n\n\n\na Sample size = 109\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    23.3% \n    32.9% \n    24.7% \n    15.1% \n    4.1% \n  \n  \n    I feel confident implementing RAP in my work \n    12.3% \n    30.1% \n    24.7% \n    28.8% \n    4.1% \n  \n  \n    I feel supported to implement RAP in my work \n    9.6% \n    20.5% \n    45.2% \n    19.2% \n    5.5% \n  \n  \n    I know where to find resources to help me implement RAP \n    9.6% \n    26% \n    24.7% \n    28.8% \n    11% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    6.8% \n    19.2% \n    37% \n    31.5% \n    5.5% \n  \n  \n    I think it is important to implement RAP in my work \n    1.4% \n    11% \n    30.1% \n    31.5% \n    26% \n  \n  \n    I understand what the key components of the RAP methodology are \n    11% \n    26% \n    24.7% \n    31.5% \n    6.8% \n  \n\n\n\na Sample size = 73"
  },
  {
    "objectID": "professions/government-economic-service.html#rap-scores",
    "href": "professions/government-economic-service.html#rap-scores",
    "title": "Profession summary: government economic service (GES)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    40.3% \n  \n  \n    Team open source code \n    Basic \n    5.6% \n  \n  \n    Version control \n    Basic \n    15.3% \n  \n  \n    Peer review \n    Basic \n    51.4% \n  \n  \n    AQUA book guidance \n    Basic \n    13.9% \n  \n  \n    Documentation \n    Basic \n    16.7% \n  \n  \n    Functions \n    Advanced \n    44.4% \n  \n  \n    Unit testing \n    Advanced \n    5.6% \n  \n  \n    Function documentation \n    Advanced \n    12.5% \n  \n  \n    Code packages \n    Advanced \n    4.2% \n  \n  \n    Follow code style guidelines \n    Advanced \n    38.9% \n  \n  \n    Continuous integration \n    Advanced \n    8.3% \n  \n  \n    Dependency management \n    Advanced \n    6.9% \n  \n\n\n\na Sample size = 72\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.2% \n  \n  \n    1 \n    38.9% \n  \n  \n    2 \n    20.8% \n  \n  \n    3 \n    11.1% \n  \n  \n    4 \n    5.6% \n  \n  \n    5 \n    1.4% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 72\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    36.1% \n  \n  \n    1 \n    33.3% \n  \n  \n    2 \n    15.3% \n  \n  \n    3 \n    8.3% \n  \n  \n    4 \n    5.6% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    1.4% \n  \n\n\n\na Sample size = 72"
  },
  {
    "objectID": "professions/government-geography.html#draft-notice",
    "href": "professions/government-geography.html#draft-notice",
    "title": "Profession summary: government geography profession",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "professions/government-geography.html#coding-frequency-and-tools",
    "href": "professions/government-geography.html#coding-frequency-and-tools",
    "title": "Profession summary: government geography profession",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    4.5% \n  \n  \n    Rarely \n    9.1% \n  \n  \n    Sometimes \n    22.7% \n  \n  \n    Regularly \n    31.8% \n  \n  \n    All the time \n    31.8% \n  \n\n\n\na Sample size = 22\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    81.8% \n    18.2% \n  \n  \n    Data cleaning \n    90.5% \n    9.5% \n  \n  \n    Data linking \n    88.2% \n    11.8% \n  \n  \n    Data transfer / migration \n    80% \n    20% \n  \n  \n    Data visualisation \n    80% \n    20% \n  \n  \n    Machine learning \n    87.5% \n    12.5% \n  \n  \n    Modelling \n    77.8% \n    22.2% \n  \n  \n    Quality assurance \n    66.7% \n    33.3% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    18.2% \n    68.2% \n    13.6% \n  \n  \n    Java / Scala \n    18.2% \n    68.2% \n    13.6% \n  \n  \n    Javascript / Typescript \n    45.5% \n    50% \n    4.5% \n  \n  \n    Matlab \n    4.5% \n    63.6% \n    31.8% \n  \n  \n    Python \n    86.4% \n    9.1% \n    4.5% \n  \n  \n    R \n    90.9% \n    4.5% \n    4.5% \n  \n  \n    SAS \n    13.6% \n    77.3% \n    9.1% \n  \n  \n    SPSS \n    27.3% \n    63.6% \n    9.1% \n  \n  \n    SQL \n    72.7% \n    18.2% \n    9.1% \n  \n  \n    Stata \n    22.7% \n    68.2% \n    9.1% \n  \n  \n    VBA \n    45.5% \n    54.5% \n    0% \n  \n\n\n\na Sample size = 22\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    18.2% \n    0% \n    81.8% \n  \n  \n    Java / Scala \n    0% \n    4.5% \n    95.5% \n  \n  \n    Javascript / Typescript \n    27.3% \n    0% \n    72.7% \n  \n  \n    Matlab \n    18.2% \n    13.6% \n    68.2% \n  \n  \n    Python \n    72.7% \n    4.5% \n    22.7% \n  \n  \n    R \n    63.6% \n    4.5% \n    31.8% \n  \n  \n    SAS \n    13.6% \n    4.5% \n    81.8% \n  \n  \n    SPSS \n    18.2% \n    9.1% \n    72.7% \n  \n  \n    SQL \n    68.2% \n    4.5% \n    27.3% \n  \n  \n    Stata \n    0% \n    4.5% \n    95.5% \n  \n  \n    VBA \n    22.7% \n    9.1% \n    68.2% \n  \n\n\n\na Sample size = 22\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    33.3% \n    33.3% \n    33.3% \n  \n  \n    Java / Scala \n    100% \n    0% \n    0% \n  \n  \n    Javascript / Typescript \n    45.5% \n    45.5% \n    9.1% \n  \n  \n    Matlab \n    20% \n    0% \n    80% \n  \n  \n    Python \n    20% \n    75% \n    5% \n  \n  \n    R \n    30% \n    70% \n    0% \n  \n  \n    SAS \n    25% \n    50% \n    25% \n  \n  \n    SPSS \n    50% \n    25% \n    25% \n  \n  \n    SQL \n    11.8% \n    82.4% \n    5.9% \n  \n  \n    Stata \n    100% \n    0% \n    0% \n  \n  \n    VBA \n    50% \n    50% \n    0%"
  },
  {
    "objectID": "professions/government-geography.html#coding-capability",
    "href": "professions/government-geography.html#coding-capability",
    "title": "Profession summary: government geography profession",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    10% \n  \n  \n    Slightly worse \n    10% \n  \n  \n    No change \n    0% \n  \n  \n    Slightly better \n    50% \n  \n  \n    Significantly better \n    30% \n  \n\n\n\na Sample size = 20\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    9.5% \n  \n  \n    In education \n    52.4% \n  \n  \n    In private sector employment \n    4.8% \n  \n  \n    In public sector employment \n    0% \n  \n  \n    Self-taught \n    28.6% \n  \n  \n    Other \n    4.8% \n  \n\n\n\na Sample size = 21"
  },
  {
    "objectID": "professions/government-geography.html#coding-practices",
    "href": "professions/government-geography.html#coding-practices",
    "title": "Profession summary: government geography profession",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    38.1% \n    14.3% \n    9.5% \n    23.8% \n    9.5% \n    4.8% \n  \n  \n    Automated data quality assurance \n    4.8% \n    19% \n    9.5% \n    33.3% \n    19% \n    14.3% \n  \n  \n    Code review \n    0% \n    14.3% \n    4.8% \n    28.6% \n    42.9% \n    9.5% \n  \n  \n    Coding guidelines / Style guides \n    4.8% \n    19% \n    0% \n    38.1% \n    38.1% \n    0% \n  \n  \n    Functions \n    4.8% \n    9.5% \n    4.8% \n    19% \n    23.8% \n    38.1% \n  \n  \n    Open source own code \n    4.8% \n    33.3% \n    19% \n    19% \n    14.3% \n    9.5% \n  \n  \n    Packaging code \n    9.5% \n    28.6% \n    19% \n    28.6% \n    14.3% \n    0% \n  \n  \n    Standard directory structure \n    28.6% \n    19% \n    9.5% \n    28.6% \n    14.3% \n    0% \n  \n  \n    Unit testing \n    28.6% \n    14.3% \n    0% \n    33.3% \n    14.3% \n    9.5% \n  \n  \n    Use open source software \n    4.8% \n    9.5% \n    0% \n    14.3% \n    33.3% \n    38.1% \n  \n  \n    Version control \n    0% \n    14.3% \n    23.8% \n    23.8% \n    33.3% \n    4.8% \n  \n\n\n\na Sample size = 21\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    28.6% \n    28.6% \n    14.3% \n    19% \n    0% \n    9.5% \n  \n  \n    Code comments \n    4.8% \n    0% \n    0% \n    4.8% \n    38.1% \n    52.4% \n  \n  \n    Data or assumptions registers \n    33.3% \n    19% \n    19% \n    14.3% \n    9.5% \n    4.8% \n  \n  \n    Desk notes \n    28.6% \n    4.8% \n    14.3% \n    9.5% \n    38.1% \n    4.8% \n  \n  \n    Documentation for each function or class \n    19% \n    9.5% \n    4.8% \n    28.6% \n    23.8% \n    14.3% \n  \n  \n    Flow charts \n    4.8% \n    33.3% \n    33.3% \n    14.3% \n    14.3% \n    0% \n  \n  \n    README files \n    4.8% \n    9.5% \n    0% \n    23.8% \n    42.9% \n    19% \n  \n\n\n\na Sample size = 21\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    38.1% \n  \n  \n    No \n    19% \n  \n  \n    I don't know what dependency management is \n    42.9% \n  \n\n\n\na Sample size = 21\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    33.3% \n  \n  \n    No \n    23.8% \n  \n  \n    I don't know what continuous integration is \n    42.9% \n  \n\n\n\na Sample size = 21\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    4.8% \n  \n  \n    No \n    42.9% \n  \n  \n    I don't know what reproducible workflows are \n    52.4% \n  \n\n\n\na Sample size = 21"
  },
  {
    "objectID": "professions/government-geography.html#rap-knowledge-and-opinions",
    "href": "professions/government-geography.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government geography profession",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    18.2% \n  \n  \n    I don't know what a RAP champion is \n    22.7% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    36.4% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    4.5% \n  \n  \n    I know who the RAP champion in my department is \n    18.2% \n  \n\n\n\na Sample size = 22\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    11.1% \n    22.2% \n    33.3% \n    22.2% \n    11.1% \n  \n  \n    I feel confident implementing RAP in my work \n    5.6% \n    16.7% \n    27.8% \n    44.4% \n    5.6% \n  \n  \n    I feel supported to implement RAP in my work \n    11.1% \n    22.2% \n    27.8% \n    33.3% \n    5.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.6% \n    27.8% \n    16.7% \n    38.9% \n    11.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.6% \n    5.6% \n    44.4% \n    33.3% \n    11.1% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    5.6% \n    16.7% \n    44.4% \n    33.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.6% \n    27.8% \n    5.6% \n    55.6% \n    5.6% \n  \n\n\n\na Sample size = 18"
  },
  {
    "objectID": "professions/government-geography.html#rap-scores",
    "href": "professions/government-geography.html#rap-scores",
    "title": "Profession summary: government geography profession",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    71.4% \n  \n  \n    Team open source code \n    Basic \n    23.8% \n  \n  \n    Version control \n    Basic \n    38.1% \n  \n  \n    Peer review \n    Basic \n    52.4% \n  \n  \n    AQUA book guidance \n    Basic \n    14.3% \n  \n  \n    Documentation \n    Basic \n    61.9% \n  \n  \n    Functions \n    Advanced \n    61.9% \n  \n  \n    Unit testing \n    Advanced \n    23.8% \n  \n  \n    Function documentation \n    Advanced \n    38.1% \n  \n  \n    Code packages \n    Advanced \n    14.3% \n  \n  \n    Follow code style guidelines \n    Advanced \n    38.1% \n  \n  \n    Continuous integration \n    Advanced \n    33.3% \n  \n  \n    Dependency management \n    Advanced \n    38.1% \n  \n\n\n\na Sample size = 21\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    9.5% \n  \n  \n    1 \n    14.3% \n  \n  \n    2 \n    23.8% \n  \n  \n    3 \n    23.8% \n  \n  \n    4 \n    14.3% \n  \n  \n    5 \n    14.3% \n  \n  \n    6 \n    0% \n  \n\n\n\na Sample size = 21\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.8% \n  \n  \n    1 \n    9.5% \n  \n  \n    2 \n    19% \n  \n  \n    3 \n    14.3% \n  \n  \n    4 \n    9.5% \n  \n  \n    5 \n    23.8% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 21"
  },
  {
    "objectID": "professions/government-operational-research.html#draft-notice",
    "href": "professions/government-operational-research.html#draft-notice",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "professions/government-operational-research.html#coding-frequency-and-tools",
    "href": "professions/government-operational-research.html#coding-frequency-and-tools",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    7.9% \n  \n  \n    Rarely \n    7.9% \n  \n  \n    Sometimes \n    20.7% \n  \n  \n    Regularly \n    31.4% \n  \n  \n    All the time \n    32.1% \n  \n\n\n\na Sample size = 140\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    84.3% \n    15.7% \n  \n  \n    Data cleaning \n    87.7% \n    12.3% \n  \n  \n    Data linking \n    87% \n    13% \n  \n  \n    Data transfer / migration \n    77.5% \n    22.5% \n  \n  \n    Data visualisation \n    78.6% \n    21.4% \n  \n  \n    Machine learning \n    88.9% \n    11.1% \n  \n  \n    Modelling \n    80% \n    20% \n  \n  \n    Quality assurance \n    71.3% \n    28.7% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5% \n    49.3% \n    45.7% \n  \n  \n    Java / Scala \n    8.6% \n    50.7% \n    40.7% \n  \n  \n    Javascript / Typescript \n    16.4% \n    49.3% \n    34.3% \n  \n  \n    Matlab \n    5.7% \n    40.7% \n    53.6% \n  \n  \n    Python \n    70.7% \n    11.4% \n    17.9% \n  \n  \n    R \n    95.7% \n    2.1% \n    2.1% \n  \n  \n    SAS \n    34.3% \n    38.6% \n    27.1% \n  \n  \n    SPSS \n    26.4% \n    51.4% \n    22.1% \n  \n  \n    SQL \n    69.3% \n    22.1% \n    8.6% \n  \n  \n    Stata \n    22.1% \n    55% \n    22.9% \n  \n  \n    VBA \n    70.7% \n    22.9% \n    6.4% \n  \n\n\n\na Sample size = 140\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    17.1% \n    2.9% \n    80% \n  \n  \n    Java / Scala \n    5.7% \n    3.6% \n    90.7% \n  \n  \n    Javascript / Typescript \n    10% \n    2.1% \n    87.9% \n  \n  \n    Matlab \n    32.9% \n    3.6% \n    63.6% \n  \n  \n    Python \n    56.4% \n    2.1% \n    41.4% \n  \n  \n    R \n    85.7% \n    0.7% \n    13.6% \n  \n  \n    SAS \n    34.3% \n    2.9% \n    62.9% \n  \n  \n    SPSS \n    17.1% \n    5% \n    77.9% \n  \n  \n    SQL \n    73.6% \n    1.4% \n    25% \n  \n  \n    Stata \n    6.4% \n    3.6% \n    90% \n  \n  \n    VBA \n    45.7% \n    4.3% \n    50% \n  \n\n\n\na Sample size = 140\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    11.1% \n    14.8% \n    74.1% \n  \n  \n    Java / Scala \n    60% \n    0% \n    40% \n  \n  \n    Javascript / Typescript \n    50% \n    32.1% \n    17.9% \n  \n  \n    Matlab \n    13.2% \n    1.9% \n    84.9% \n  \n  \n    Python \n    31.9% \n    53.4% \n    14.7% \n  \n  \n    R \n    11.1% \n    88.1% \n    0.7% \n  \n  \n    SAS \n    27.3% \n    45.5% \n    27.3% \n  \n  \n    SPSS \n    53.8% \n    17.3% \n    28.8% \n  \n  \n    SQL \n    9.6% \n    75.4% \n    14.9% \n  \n  \n    Stata \n    76.3% \n    5.3% \n    18.4% \n  \n  \n    VBA \n    37.3% \n    59.8% \n    2.9%"
  },
  {
    "objectID": "professions/government-operational-research.html#coding-capability",
    "href": "professions/government-operational-research.html#coding-capability",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7.3% \n  \n  \n    Slightly worse \n    11.3% \n  \n  \n    No change \n    16.1% \n  \n  \n    Slightly better \n    39.5% \n  \n  \n    Significantly better \n    25.8% \n  \n\n\n\na Sample size = 124\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    10.9% \n  \n  \n    In education \n    65.7% \n  \n  \n    In private sector employment \n    0.7% \n  \n  \n    In public sector employment \n    8.8% \n  \n  \n    Self-taught \n    13.1% \n  \n  \n    Other \n    0.7% \n  \n\n\n\na Sample size = 137"
  },
  {
    "objectID": "professions/government-operational-research.html#coding-practices",
    "href": "professions/government-operational-research.html#coding-practices",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    10.1% \n    7.8% \n    10.9% \n    29.5% \n    31% \n    10.9% \n  \n  \n    Automated data quality assurance \n    2.3% \n    17.8% \n    20.9% \n    29.5% \n    22.5% \n    7% \n  \n  \n    Code review \n    0% \n    6.2% \n    5.4% \n    15.5% \n    41.1% \n    31.8% \n  \n  \n    Coding guidelines / Style guides \n    6.2% \n    6.2% \n    10.9% \n    23.3% \n    35.7% \n    17.8% \n  \n  \n    Functions \n    0% \n    2.3% \n    9.3% \n    12.4% \n    32.6% \n    43.4% \n  \n  \n    Open source own code \n    8.5% \n    54.3% \n    20.2% \n    10.9% \n    6.2% \n    0% \n  \n  \n    Packaging code \n    6.2% \n    48.1% \n    17.8% \n    20.9% \n    4.7% \n    2.3% \n  \n  \n    Standard directory structure \n    19.4% \n    15.5% \n    14% \n    19.4% \n    20.2% \n    11.6% \n  \n  \n    Unit testing \n    17.8% \n    13.2% \n    18.6% \n    27.1% \n    14% \n    9.3% \n  \n  \n    Use open source software \n    4.7% \n    7% \n    4.7% \n    14% \n    27.1% \n    42.6% \n  \n  \n    Version control \n    3.1% \n    22.5% \n    10.9% \n    12.4% \n    20.9% \n    30.2% \n  \n\n\n\na Sample size = 129\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    6.2% \n    13.2% \n    15.5% \n    25.6% \n    27.1% \n    12.4% \n  \n  \n    Code comments \n    0.8% \n    3.1% \n    1.6% \n    8.5% \n    14.7% \n    71.3% \n  \n  \n    Data or assumptions registers \n    6.2% \n    15.5% \n    17.1% \n    20.2% \n    24% \n    17.1% \n  \n  \n    Desk notes \n    28.7% \n    14% \n    15.5% \n    15.5% \n    19.4% \n    7% \n  \n  \n    Documentation for each function or class \n    5.4% \n    16.3% \n    16.3% \n    21.7% \n    22.5% \n    17.8% \n  \n  \n    Flow charts \n    2.3% \n    22.5% \n    21.7% \n    34.9% \n    15.5% \n    3.1% \n  \n  \n    README files \n    2.3% \n    14.7% \n    11.6% \n    31% \n    19.4% \n    20.9% \n  \n\n\n\na Sample size = 129\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    35.7% \n  \n  \n    No \n    38% \n  \n  \n    I don't know what dependency management is \n    26.4% \n  \n\n\n\na Sample size = 129\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    17.8% \n  \n  \n    No \n    43.4% \n  \n  \n    I don't know what continuous integration is \n    38.8% \n  \n\n\n\na Sample size = 129\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    7% \n  \n  \n    No \n    59.7% \n  \n  \n    I don't know what reproducible workflows are \n    33.3% \n  \n\n\n\na Sample size = 129"
  },
  {
    "objectID": "professions/government-operational-research.html#rap-knowledge-and-opinions",
    "href": "professions/government-operational-research.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government operational research (GORS)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    11.6% \n  \n  \n    I don't know what a RAP champion is \n    18.8% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    37.7% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0.7% \n  \n  \n    I know who the RAP champion in my department is \n    31.2% \n  \n\n\n\na Sample size = 138\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    18.5% \n    16.9% \n    22.6% \n    27.4% \n    14.5% \n  \n  \n    I feel confident implementing RAP in my work \n    12.9% \n    17.7% \n    13.7% \n    37.9% \n    17.7% \n  \n  \n    I feel supported to implement RAP in my work \n    12.1% \n    10.5% \n    24.2% \n    37.9% \n    15.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    10.5% \n    16.9% \n    16.9% \n    37.1% \n    18.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    12.1% \n    8.1% \n    35.5% \n    29.8% \n    14.5% \n  \n  \n    I think it is important to implement RAP in my work \n    8.9% \n    1.6% \n    17.7% \n    39.5% \n    32.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.9% \n    11.3% \n    14.5% \n    44.4% \n    21% \n  \n\n\n\na Sample size = 124"
  },
  {
    "objectID": "professions/government-operational-research.html#rap-scores",
    "href": "professions/government-operational-research.html#rap-scores",
    "title": "Profession summary: government operational research (GORS)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    69.8% \n  \n  \n    Team open source code \n    Basic \n    6.2% \n  \n  \n    Version control \n    Basic \n    51.2% \n  \n  \n    Peer review \n    Basic \n    72.9% \n  \n  \n    AQUA book guidance \n    Basic \n    41.9% \n  \n  \n    Documentation \n    Basic \n    37.2% \n  \n  \n    Functions \n    Advanced \n    76% \n  \n  \n    Unit testing \n    Advanced \n    23.3% \n  \n  \n    Function documentation \n    Advanced \n    40.3% \n  \n  \n    Code packages \n    Advanced \n    7% \n  \n  \n    Follow code style guidelines \n    Advanced \n    53.5% \n  \n  \n    Continuous integration \n    Advanced \n    17.8% \n  \n  \n    Dependency management \n    Advanced \n    35.7% \n  \n\n\n\na Sample size = 129\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    9.3% \n  \n  \n    1 \n    14% \n  \n  \n    2 \n    17.1% \n  \n  \n    3 \n    24% \n  \n  \n    4 \n    20.9% \n  \n  \n    5 \n    13.2% \n  \n  \n    6 \n    1.6% \n  \n\n\n\na Sample size = 129\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14% \n  \n  \n    1 \n    14% \n  \n  \n    2 \n    23.3% \n  \n  \n    3 \n    22.5% \n  \n  \n    4 \n    10.9% \n  \n  \n    5 \n    11.6% \n  \n  \n    6 \n    3.1% \n  \n  \n    7 \n    0.8% \n  \n\n\n\na Sample size = 129"
  },
  {
    "objectID": "professions/government-social-research.html#draft-notice",
    "href": "professions/government-social-research.html#draft-notice",
    "title": "Profession summary: government social research (GSR)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "professions/government-social-research.html#coding-frequency-and-tools",
    "href": "professions/government-social-research.html#coding-frequency-and-tools",
    "title": "Profession summary: government social research (GSR)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    24.7% \n  \n  \n    Rarely \n    14.3% \n  \n  \n    Sometimes \n    20.1% \n  \n  \n    Regularly \n    21.4% \n  \n  \n    All the time \n    19.5% \n  \n\n\n\na Sample size = 154\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    74.2% \n    25.8% \n  \n  \n    Data cleaning \n    82.2% \n    17.8% \n  \n  \n    Data linking \n    84% \n    16% \n  \n  \n    Data transfer / migration \n    62.9% \n    37.1% \n  \n  \n    Data visualisation \n    55.7% \n    44.3% \n  \n  \n    Machine learning \n    85.7% \n    14.3% \n  \n  \n    Modelling \n    85.7% \n    14.3% \n  \n  \n    Quality assurance \n    62.4% \n    37.6% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0.6% \n    73.4% \n    26% \n  \n  \n    Java / Scala \n    3.9% \n    74.7% \n    21.4% \n  \n  \n    Javascript / Typescript \n    3.2% \n    74.7% \n    22.1% \n  \n  \n    Matlab \n    5.2% \n    66.9% \n    27.9% \n  \n  \n    Python \n    64.9% \n    24.7% \n    10.4% \n  \n  \n    R \n    83.8% \n    9.1% \n    7.1% \n  \n  \n    SAS \n    32.5% \n    46.8% \n    20.8% \n  \n  \n    SPSS \n    48.1% \n    24.7% \n    27.3% \n  \n  \n    SQL \n    42.9% \n    46.8% \n    10.4% \n  \n  \n    Stata \n    23.4% \n    54.5% \n    22.1% \n  \n  \n    VBA \n    18.8% \n    63% \n    18.2% \n  \n\n\n\na Sample size = 154\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.2% \n    8.4% \n    88.3% \n  \n  \n    Java / Scala \n    2.6% \n    9.1% \n    88.3% \n  \n  \n    Javascript / Typescript \n    1.3% \n    9.7% \n    89% \n  \n  \n    Matlab \n    6.5% \n    9.7% \n    83.8% \n  \n  \n    Python \n    34.4% \n    3.9% \n    61.7% \n  \n  \n    R \n    51.9% \n    4.5% \n    43.5% \n  \n  \n    SAS \n    22.7% \n    7.1% \n    70.1% \n  \n  \n    SPSS \n    67.5% \n    6.5% \n    26% \n  \n  \n    SQL \n    29.9% \n    8.4% \n    61.7% \n  \n  \n    Stata \n    24% \n    5.8% \n    70.1% \n  \n  \n    VBA \n    10.4% \n    5.8% \n    83.8% \n  \n\n\n\na Sample size = 154\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    16.7% \n    0% \n    83.3% \n  \n  \n    Java / Scala \n    55.6% \n    11.1% \n    33.3% \n  \n  \n    Javascript / Typescript \n    71.4% \n    0% \n    28.6% \n  \n  \n    Matlab \n    41.2% \n    5.9% \n    52.9% \n  \n  \n    Python \n    49% \n    47.1% \n    3.8% \n  \n  \n    R \n    39.8% \n    57.1% \n    3% \n  \n  \n    SAS \n    47.8% \n    26.9% \n    25.4% \n  \n  \n    SPSS \n    14% \n    47.1% \n    38.8% \n  \n  \n    SQL \n    37% \n    53.4% \n    9.6% \n  \n  \n    Stata \n    32.7% \n    32.7% \n    34.5% \n  \n  \n    VBA \n    55.6% \n    25% \n    19.4%"
  },
  {
    "objectID": "professions/government-social-research.html#coding-capability",
    "href": "professions/government-social-research.html#coding-capability",
    "title": "Profession summary: government social research (GSR)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    14.4% \n  \n  \n    Slightly worse \n    16.5% \n  \n  \n    No change \n    17.5% \n  \n  \n    Slightly better \n    22.7% \n  \n  \n    Significantly better \n    28.9% \n  \n\n\n\na Sample size = 97\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    28.9% \n  \n  \n    In education \n    43% \n  \n  \n    In private sector employment \n    3% \n  \n  \n    In public sector employment \n    17% \n  \n  \n    Self-taught \n    6.7% \n  \n  \n    Other \n    1.5% \n  \n\n\n\na Sample size = 135"
  },
  {
    "objectID": "professions/government-social-research.html#coding-practices",
    "href": "professions/government-social-research.html#coding-practices",
    "title": "Profession summary: government social research (GSR)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    50% \n    15.5% \n    6% \n    15.5% \n    9.5% \n    3.4% \n  \n  \n    Automated data quality assurance \n    8.6% \n    28.4% \n    11.2% \n    29.3% \n    15.5% \n    6.9% \n  \n  \n    Code review \n    1.7% \n    5.2% \n    5.2% \n    24.1% \n    37.1% \n    26.7% \n  \n  \n    Coding guidelines / Style guides \n    11.2% \n    16.4% \n    9.5% \n    19% \n    35.3% \n    8.6% \n  \n  \n    Functions \n    6.9% \n    14.7% \n    15.5% \n    27.6% \n    25.9% \n    9.5% \n  \n  \n    Open source own code \n    22.4% \n    58.6% \n    10.3% \n    4.3% \n    1.7% \n    2.6% \n  \n  \n    Packaging code \n    27.6% \n    46.6% \n    9.5% \n    9.5% \n    4.3% \n    2.6% \n  \n  \n    Standard directory structure \n    44.8% \n    17.2% \n    9.5% \n    8.6% \n    14.7% \n    5.2% \n  \n  \n    Unit testing \n    41.4% \n    19.8% \n    8.6% \n    15.5% \n    9.5% \n    5.2% \n  \n  \n    Use open source software \n    17.2% \n    20.7% \n    6.9% \n    14.7% \n    23.3% \n    17.2% \n  \n  \n    Version control \n    13.8% \n    40.5% \n    6% \n    14.7% \n    12.9% \n    12.1% \n  \n\n\n\na Sample size = 116\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    33.6% \n    40.5% \n    8.6% \n    8.6% \n    4.3% \n    4.3% \n  \n  \n    Code comments \n    3.4% \n    10.3% \n    1.7% \n    8.6% \n    27.6% \n    48.3% \n  \n  \n    Data or assumptions registers \n    29.3% \n    41.4% \n    2.6% \n    7.8% \n    8.6% \n    10.3% \n  \n  \n    Desk notes \n    14.7% \n    21.6% \n    11.2% \n    25% \n    15.5% \n    12.1% \n  \n  \n    Documentation for each function or class \n    23.3% \n    37.1% \n    11.2% \n    10.3% \n    12.9% \n    5.2% \n  \n  \n    Flow charts \n    14.7% \n    55.2% \n    11.2% \n    10.3% \n    7.8% \n    0.9% \n  \n  \n    README files \n    12.9% \n    37.9% \n    18.1% \n    20.7% \n    6.9% \n    3.4% \n  \n\n\n\na Sample size = 116\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    10.3% \n  \n  \n    No \n    31% \n  \n  \n    I don't know what dependency management is \n    58.6% \n  \n\n\n\na Sample size = 116\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    9.5% \n  \n  \n    No \n    37.9% \n  \n  \n    I don't know what continuous integration is \n    52.6% \n  \n\n\n\na Sample size = 116\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0.9% \n  \n  \n    No \n    44% \n  \n  \n    I don't know what reproducible workflows are \n    55.2% \n  \n\n\n\na Sample size = 116"
  },
  {
    "objectID": "professions/government-social-research.html#rap-knowledge-and-opinions",
    "href": "professions/government-social-research.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government social research (GSR)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    22.1% \n  \n  \n    I don't know what a RAP champion is \n    19.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    39% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    1.3% \n  \n  \n    I know who the RAP champion in my department is \n    18.2% \n  \n\n\n\na Sample size = 154\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    28.3% \n    28.3% \n    20% \n    17.5% \n    5.8% \n  \n  \n    I feel confident implementing RAP in my work \n    17.5% \n    35.8% \n    20.8% \n    22.5% \n    3.3% \n  \n  \n    I feel supported to implement RAP in my work \n    10% \n    18.3% \n    28.3% \n    36.7% \n    6.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    10% \n    30.8% \n    19.2% \n    33.3% \n    6.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    14.2% \n    19.2% \n    31.7% \n    24.2% \n    10.8% \n  \n  \n    I think it is important to implement RAP in my work \n    5.8% \n    4.2% \n    34.2% \n    38.3% \n    17.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    10.8% \n    35% \n    19.2% \n    27.5% \n    7.5% \n  \n\n\n\na Sample size = 120"
  },
  {
    "objectID": "professions/government-social-research.html#rap-scores",
    "href": "professions/government-social-research.html#rap-scores",
    "title": "Profession summary: government social research (GSR)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    40.5% \n  \n  \n    Team open source code \n    Basic \n    4.3% \n  \n  \n    Version control \n    Basic \n    25% \n  \n  \n    Peer review \n    Basic \n    63.8% \n  \n  \n    AQUA book guidance \n    Basic \n    12.9% \n  \n  \n    Documentation \n    Basic \n    9.5% \n  \n  \n    Functions \n    Advanced \n    35.3% \n  \n  \n    Unit testing \n    Advanced \n    14.7% \n  \n  \n    Function documentation \n    Advanced \n    18.1% \n  \n  \n    Code packages \n    Advanced \n    6.9% \n  \n  \n    Follow code style guidelines \n    Advanced \n    44% \n  \n  \n    Continuous integration \n    Advanced \n    9.5% \n  \n  \n    Dependency management \n    Advanced \n    10.3% \n  \n\n\n\na Sample size = 116\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.4% \n  \n  \n    1 \n    36.2% \n  \n  \n    2 \n    17.2% \n  \n  \n    3 \n    15.5% \n  \n  \n    4 \n    5.2% \n  \n  \n    5 \n    2.6% \n  \n  \n    6 \n    0.9% \n  \n\n\n\na Sample size = 116\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    37.1% \n  \n  \n    1 \n    24.1% \n  \n  \n    2 \n    14.7% \n  \n  \n    3 \n    14.7% \n  \n  \n    4 \n    6.9% \n  \n  \n    5 \n    1.7% \n  \n  \n    6 \n    0.9% \n  \n  \n    7 \n    0% \n  \n\n\n\na Sample size = 116"
  },
  {
    "objectID": "professions/government-statician-group.html#draft-notice",
    "href": "professions/government-statician-group.html#draft-notice",
    "title": "Profession summary: government statician group (GSG)",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "professions/government-statician-group.html#coding-frequency-and-tools",
    "href": "professions/government-statician-group.html#coding-frequency-and-tools",
    "title": "Profession summary: government statician group (GSG)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.3% \n  \n  \n    Rarely \n    10.3% \n  \n  \n    Sometimes \n    19.6% \n  \n  \n    Regularly \n    35% \n  \n  \n    All the time \n    26.9% \n  \n\n\n\na Sample size = 506\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    86.8% \n    13.2% \n  \n  \n    Data cleaning \n    90.8% \n    9.2% \n  \n  \n    Data linking \n    90.9% \n    9.1% \n  \n  \n    Data transfer / migration \n    75.1% \n    24.9% \n  \n  \n    Data visualisation \n    68.4% \n    31.6% \n  \n  \n    Machine learning \n    91.4% \n    8.6% \n  \n  \n    Modelling \n    81.9% \n    18.1% \n  \n  \n    Quality assurance \n    67.5% \n    32.5% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4.5% \n    56.1% \n    39.3% \n  \n  \n    Java / Scala \n    7.7% \n    56.7% \n    35.6% \n  \n  \n    Javascript / Typescript \n    7.5% \n    57.7% \n    34.8% \n  \n  \n    Matlab \n    3.6% \n    52% \n    44.5% \n  \n  \n    Python \n    70.9% \n    16.6% \n    12.5% \n  \n  \n    R \n    93.1% \n    1.8% \n    5.1% \n  \n  \n    SAS \n    45.7% \n    32.4% \n    21.9% \n  \n  \n    SPSS \n    35.6% \n    35.8% \n    28.7% \n  \n  \n    SQL \n    75.3% \n    15.8% \n    8.9% \n  \n  \n    Stata \n    22.3% \n    45.8% \n    31.8% \n  \n  \n    VBA \n    54% \n    32% \n    14% \n  \n\n\n\na Sample size = 506\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.5% \n    5.7% \n    87.7% \n  \n  \n    Java / Scala \n    5.1% \n    5.9% \n    88.9% \n  \n  \n    Javascript / Typescript \n    4.7% \n    5.7% \n    89.5% \n  \n  \n    Matlab \n    18.6% \n    4.9% \n    76.5% \n  \n  \n    Python \n    39.1% \n    3.2% \n    57.7% \n  \n  \n    R \n    77.5% \n    1.8% \n    20.8% \n  \n  \n    SAS \n    39.9% \n    5.1% \n    54.9% \n  \n  \n    SPSS \n    41.5% \n    5.7% \n    52.8% \n  \n  \n    SQL \n    65.8% \n    3% \n    31.2% \n  \n  \n    Stata \n    12.6% \n    4.9% \n    82.4% \n  \n  \n    VBA \n    27.5% \n    6.5% \n    66% \n  \n\n\n\na Sample size = 506\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    35.3% \n    9.8% \n    54.9% \n  \n  \n    Java / Scala \n    55.9% \n    10.2% \n    33.9% \n  \n  \n    Javascript / Typescript \n    51% \n    26.5% \n    22.4% \n  \n  \n    Matlab \n    12.1% \n    4.7% \n    83.2% \n  \n  \n    Python \n    49.5% \n    42.1% \n    8.4% \n  \n  \n    R \n    20.2% \n    75.8% \n    4.1% \n  \n  \n    SAS \n    29.6% \n    50.9% \n    19.5% \n  \n  \n    SPSS \n    28.3% \n    33.1% \n    38.6% \n  \n  \n    SQL \n    21.6% \n    68% \n    10.4% \n  \n  \n    Stata \n    57.9% \n    16.4% \n    25.7% \n  \n  \n    VBA \n    53.4% \n    38.3% \n    8.4%"
  },
  {
    "objectID": "professions/government-statician-group.html#coding-capability",
    "href": "professions/government-statician-group.html#coding-capability",
    "title": "Profession summary: government statician group (GSG)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7.6% \n  \n  \n    Slightly worse \n    14.8% \n  \n  \n    No change \n    12.9% \n  \n  \n    Slightly better \n    34.6% \n  \n  \n    Significantly better \n    30.1% \n  \n\n\n\na Sample size = 419\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    18% \n  \n  \n    In education \n    50.4% \n  \n  \n    In private sector employment \n    1.4% \n  \n  \n    In public sector employment \n    17.4% \n  \n  \n    Self-taught \n    11.1% \n  \n  \n    Other \n    1.6% \n  \n\n\n\na Sample size = 494"
  },
  {
    "objectID": "professions/government-statician-group.html#coding-practices",
    "href": "professions/government-statician-group.html#coding-practices",
    "title": "Profession summary: government statician group (GSG)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    31.5% \n    13.4% \n    11.4% \n    19.6% \n    18.8% \n    5.4% \n  \n  \n    Automated data quality assurance \n    2.4% \n    16.6% \n    19.8% \n    27.2% \n    25% \n    9.1% \n  \n  \n    Code review \n    0.9% \n    6% \n    10.8% \n    30.2% \n    33.8% \n    18.3% \n  \n  \n    Coding guidelines / Style guides \n    5.2% \n    10.3% \n    9.7% \n    28% \n    31.5% \n    15.3% \n  \n  \n    Functions \n    3% \n    8.4% \n    8.8% \n    28.7% \n    28% \n    23.1% \n  \n  \n    Open source own code \n    13.4% \n    45.7% \n    15.5% \n    12.1% \n    8.6% \n    4.7% \n  \n  \n    Packaging code \n    10.8% \n    46.8% \n    16.4% \n    14.7% \n    7.3% \n    4.1% \n  \n  \n    Standard directory structure \n    26.1% \n    15.1% \n    8.6% \n    17.2% \n    20.7% \n    12.3% \n  \n  \n    Unit testing \n    27.8% \n    18.8% \n    13.6% \n    20.5% \n    12.1% \n    7.3% \n  \n  \n    Use open source software \n    5.6% \n    14.4% \n    7.1% \n    13.8% \n    22.4% \n    36.6% \n  \n  \n    Version control \n    3.7% \n    34.7% \n    9.9% \n    12.7% \n    19.4% \n    19.6% \n  \n\n\n\na Sample size = 464\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    22.2% \n    28.9% \n    14.4% \n    19.2% \n    10.6% \n    4.7% \n  \n  \n    Code comments \n    1.9% \n    2.4% \n    0.6% \n    8% \n    29.3% \n    57.8% \n  \n  \n    Data or assumptions registers \n    17.7% \n    35.3% \n    14% \n    13.8% \n    13.4% \n    5.8% \n  \n  \n    Desk notes \n    11.2% \n    14% \n    11.6% \n    23.1% \n    27.6% \n    12.5% \n  \n  \n    Documentation for each function or class \n    11.4% \n    23.3% \n    13.8% \n    21.3% \n    17.9% \n    12.3% \n  \n  \n    Flow charts \n    6% \n    38.8% \n    22% \n    22.8% \n    7.5% \n    2.8% \n  \n  \n    README files \n    5.4% \n    25.6% \n    14% \n    22.8% \n    20.5% \n    11.6% \n  \n\n\n\na Sample size = 464\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    22.4% \n  \n  \n    No \n    35.6% \n  \n  \n    I don't know what dependency management is \n    42% \n  \n\n\n\na Sample size = 464\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    13.6% \n  \n  \n    No \n    41.2% \n  \n  \n    I don't know what continuous integration is \n    45.3% \n  \n\n\n\na Sample size = 464\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    2.6% \n  \n  \n    No \n    58.4% \n  \n  \n    I don't know what reproducible workflows are \n    39% \n  \n\n\n\na Sample size = 464"
  },
  {
    "objectID": "professions/government-statician-group.html#rap-knowledge-and-opinions",
    "href": "professions/government-statician-group.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government statician group (GSG)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    4.4% \n  \n  \n    I don't know what a RAP champion is \n    15% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    41.9% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    3.5% \n  \n  \n    I know who the RAP champion in my department is \n    35.2% \n  \n\n\n\na Sample size = 480\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    12.6% \n    19.4% \n    21.6% \n    27.8% \n    18.6% \n  \n  \n    I feel confident implementing RAP in my work \n    8.7% \n    18.8% \n    20% \n    34.6% \n    17.9% \n  \n  \n    I feel supported to implement RAP in my work \n    6.4% \n    13.2% \n    24.1% \n    37.7% \n    18.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    4.9% \n    19.4% \n    15.3% \n    39.8% \n    20.6% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.6% \n    8.7% \n    24.9% \n    34.2% \n    24.5% \n  \n  \n    I think it is important to implement RAP in my work \n    2.3% \n    3.7% \n    18.1% \n    39% \n    36.9% \n  \n  \n    I understand what the key components of the RAP methodology are \n    7% \n    15.9% \n    18.4% \n    40.4% \n    18.4% \n  \n\n\n\na Sample size = 485"
  },
  {
    "objectID": "professions/government-statician-group.html#rap-scores",
    "href": "professions/government-statician-group.html#rap-scores",
    "title": "Profession summary: government statician group (GSG)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    59.1% \n  \n  \n    Team open source code \n    Basic \n    13.4% \n  \n  \n    Version control \n    Basic \n    39% \n  \n  \n    Peer review \n    Basic \n    52.2% \n  \n  \n    AQUA book guidance \n    Basic \n    24.1% \n  \n  \n    Documentation \n    Basic \n    30.6% \n  \n  \n    Functions \n    Advanced \n    51.1% \n  \n  \n    Unit testing \n    Advanced \n    19.4% \n  \n  \n    Function documentation \n    Advanced \n    30.2% \n  \n  \n    Code packages \n    Advanced \n    11.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    46.8% \n  \n  \n    Continuous integration \n    Advanced \n    13.6% \n  \n  \n    Dependency management \n    Advanced \n    22.4% \n  \n\n\n\na Sample size = 464\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14% \n  \n  \n    1 \n    26.7% \n  \n  \n    2 \n    22% \n  \n  \n    3 \n    14.2% \n  \n  \n    4 \n    13.1% \n  \n  \n    5 \n    7.1% \n  \n  \n    6 \n    2.8% \n  \n\n\n\na Sample size = 464\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    26.9% \n  \n  \n    1 \n    22% \n  \n  \n    2 \n    17.9% \n  \n  \n    3 \n    13.4% \n  \n  \n    4 \n    7.8% \n  \n  \n    5 \n    7.8% \n  \n  \n    6 \n    3% \n  \n  \n    7 \n    1.3% \n  \n\n\n\na Sample size = 464"
  },
  {
    "objectID": "professions.html",
    "href": "professions.html",
    "title": "Profession summaries",
    "section": "",
    "text": "Below are links to profession-specific reports These contain summary statistics, filtered by profession. Only professions with 20 or more respondents are included.\n\nGovernment data scientists\nDigital and data profession (DDAT)\nGovernment actuary’s department (GAD)\nGovernment economic service (GES)\nGovernment geography profession\nGovernment operational research (GORS)\nGovernment social research (GSR)\nGovernment statician group (GSG)"
  },
  {
    "objectID": "summary.html#draft-notice",
    "href": "summary.html#draft-notice",
    "title": "Summary statistics",
    "section": "Draft notice",
    "text": "Draft notice\nPlease note that all outputs are provisional. All findings have been thoroughly quality assured. However, the outputs presented here may change.\nWhile any changes to the data are not likely to be substantial, we are planning to carry out more in-depth analysis and the commentary may change. As such, we recommend linking to these pages rather than sharing this analysis any other way at this stage."
  },
  {
    "objectID": "summary.html#coding-frequency-and-tools",
    "href": "summary.html#coding-frequency-and-tools",
    "title": "Summary statistics",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often do respondents use code\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    12.3% \n  \n  \n    Rarely \n    10.6% \n  \n  \n    Sometimes \n    18.2% \n  \n  \n    Regularly \n    29% \n  \n  \n    All the time \n    29.9% \n  \n\n\n\na Sample size = 1322\n\n\n\n\n\n\n\n\n\nWhat is code being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    82.1% \n    17.9% \n  \n  \n    Data cleaning \n    85.8% \n    14.2% \n  \n  \n    Data linking \n    86.9% \n    13.1% \n  \n  \n    Data transfer / migration \n    71.1% \n    28.9% \n  \n  \n    Data visualisation \n    70% \n    30% \n  \n  \n    Machine learning \n    91% \n    9% \n  \n  \n    Modelling \n    80.3% \n    19.7% \n  \n  \n    Quality assurance \n    65.1% \n    34.9% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.5% \n    58.9% \n    34.6% \n  \n  \n    Java / Scala \n    8% \n    60.1% \n    31.9% \n  \n  \n    Javascript / Typescript \n    11% \n    59.3% \n    29.7% \n  \n  \n    Matlab \n    5.5% \n    53.4% \n    41.1% \n  \n  \n    Python \n    68.5% \n    19.4% \n    12.1% \n  \n  \n    R \n    91.2% \n    4.1% \n    4.7% \n  \n  \n    SAS \n    34.4% \n    42.1% \n    23.5% \n  \n  \n    SPSS \n    31.9% \n    41.9% \n    26.2% \n  \n  \n    SQL \n    65.8% \n    24.9% \n    9.3% \n  \n  \n    Stata \n    20.1% \n    51.1% \n    28.7% \n  \n  \n    VBA \n    47.4% \n    39.2% \n    13.4% \n  \n\n\n\na Sample size = 1322\n\n\n\n\n\n\n\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.9% \n    5.2% \n    86.8% \n  \n  \n    Java / Scala \n    4.7% \n    5.6% \n    89.7% \n  \n  \n    Javascript / Typescript \n    7.9% \n    5.5% \n    86.5% \n  \n  \n    Matlab \n    17% \n    5.4% \n    77.5% \n  \n  \n    Python \n    41.5% \n    2.9% \n    55.6% \n  \n  \n    R \n    71.9% \n    1.9% \n    26.2% \n  \n  \n    SAS \n    27.8% \n    4.6% \n    67.5% \n  \n  \n    SPSS \n    34.3% \n    4.9% \n    60.8% \n  \n  \n    SQL \n    56.2% \n    3.3% \n    40.5% \n  \n  \n    Stata \n    14.7% \n    4.6% \n    80.7% \n  \n  \n    VBA \n    26.5% \n    5.4% \n    68.1% \n  \n\n\n\na Sample size = 1322\n\n\n\n\n\n\n\n\n\nAccess and knowledge gaps\nUsing the data presented above we calculated the number of respondents with:\n\nAccess to tools they do not have the capability to use (access only)\n\nAccess to tools they are able to use (access and knowledge)\n\nOr capability to use tools they cannot access at work (knowledge only)\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Access Only \n    Both \n    Knowledge Only \n  \n \n\n  \n    C++ / C# \n    37.5% \n    13.7% \n    48.8% \n  \n  \n    Java / Scala \n    60% \n    8.4% \n    31.6% \n  \n  \n    Javascript / Typescript \n    45.9% \n    29.4% \n    24.7% \n  \n  \n    Matlab \n    19.6% \n    6.4% \n    73.9% \n  \n  \n    Python \n    45.4% \n    44.8% \n    9.9% \n  \n  \n    R \n    23.6% \n    73.4% \n    3.1% \n  \n  \n    SAS \n    36.7% \n    41.7% \n    21.7% \n  \n  \n    SPSS \n    30.7% \n    33.8% \n    35.5% \n  \n  \n    SQL \n    23.2% \n    66.6% \n    10.1% \n  \n  \n    Stata \n    48.4% \n    22.3% \n    29.3% \n  \n  \n    VBA \n    47.8% \n    45.6% \n    6.6%"
  },
  {
    "objectID": "summary.html#coding-capability",
    "href": "summary.html#coding-capability",
    "title": "Summary statistics",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    6% \n  \n  \n    Slightly worse \n    13.1% \n  \n  \n    No change \n    15.2% \n  \n  \n    Slightly better \n    34% \n  \n  \n    Significantly better \n    31.8% \n  \n\n\n\na Sample size = 1033\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    19.4% \n  \n  \n    In education \n    50% \n  \n  \n    In private sector employment \n    2.4% \n  \n  \n    In public sector employment \n    12.4% \n  \n  \n    Self-taught \n    14.4% \n  \n  \n    Other \n    1.4% \n  \n\n\n\na Sample size = 1240"
  },
  {
    "objectID": "summary.html#coding-practices",
    "href": "summary.html#coding-practices",
    "title": "Summary statistics",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    39.9% \n    14.8% \n    9.2% \n    16.6% \n    15% \n    4.6% \n  \n  \n    Automated data quality assurance \n    4.8% \n    20.5% \n    18.5% \n    27.7% \n    20.6% \n    7.9% \n  \n  \n    Code review \n    0.6% \n    7.4% \n    11.4% \n    27.5% \n    32.7% \n    20.4% \n  \n  \n    Coding guidelines / Style guides \n    5.7% \n    11.8% \n    9.1% \n    25.2% \n    33.5% \n    14.7% \n  \n  \n    Functions \n    3.6% \n    8.5% \n    9.5% \n    24% \n    27.9% \n    26.6% \n  \n  \n    Open source own code \n    13.1% \n    45.4% \n    15.1% \n    14.9% \n    7.3% \n    4.1% \n  \n  \n    Packaging code \n    12.6% \n    44.4% \n    16.4% \n    14.8% \n    8.1% \n    3.6% \n  \n  \n    Standard directory structure \n    23.8% \n    15.6% \n    9.4% \n    18.1% \n    21.5% \n    11.6% \n  \n  \n    Unit testing \n    26.9% \n    17.3% \n    14.7% \n    21.3% \n    13.2% \n    6.6% \n  \n  \n    Use open source software \n    7.2% \n    11.8% \n    6.1% \n    13% \n    22.7% \n    39.1% \n  \n  \n    Version control \n    6.1% \n    31.2% \n    10.4% \n    13.5% \n    17.8% \n    21.1% \n  \n\n\n\na Sample size = 1159\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    23.6% \n    29.9% \n    12.3% \n    17.9% \n    11% \n    5.3% \n  \n  \n    Code comments \n    2.4% \n    4.4% \n    1.9% \n    8.5% \n    27.3% \n    55.6% \n  \n  \n    Data or assumptions registers \n    22.9% \n    35% \n    11.9% \n    11% \n    12.6% \n    6.6% \n  \n  \n    Desk notes \n    21.1% \n    18.5% \n    11.4% \n    21.1% \n    19.5% \n    8.5% \n  \n  \n    Documentation for each function or class \n    11.7% \n    25.1% \n    13.7% \n    19.4% \n    17.9% \n    12.2% \n  \n  \n    Flow charts \n    6.8% \n    38.5% \n    19.8% \n    23.4% \n    9.3% \n    2.2% \n  \n  \n    README files \n    6.6% \n    23.1% \n    14.6% \n    23.6% \n    19.5% \n    12.6% \n  \n\n\n\na Sample size = 1159\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    26% \n  \n  \n    No \n    34.9% \n  \n  \n    I don't know what dependency management is \n    39.1% \n  \n\n\n\na Sample size = 1159\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    14.7% \n  \n  \n    No \n    41.4% \n  \n  \n    I don't know what continuous integration is \n    43.9% \n  \n\n\n\na Sample size = 1159\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    3.8% \n  \n  \n    No \n    56.3% \n  \n  \n    I don't know what reproducible workflows are \n    39.9% \n  \n\n\n\na Sample size = 1159"
  },
  {
    "objectID": "summary.html#rap-knowledge-and-opinions",
    "href": "summary.html#rap-knowledge-and-opinions",
    "title": "Summary statistics",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who are RAP champions themselves have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    20.5% \n  \n  \n    I don't know what a RAP champion is \n    18.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    33.1% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    3.6% \n  \n  \n    I know who the RAP champion in my department is \n    24.3% \n  \n\n\n\na Sample size = 1281\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    15.8% \n    21.2% \n    23% \n    23.8% \n    16.2% \n  \n  \n    I feel confident implementing RAP in my work \n    11% \n    21.2% \n    21.1% \n    31.7% \n    15.1% \n  \n  \n    I feel supported to implement RAP in my work \n    8.7% \n    14.7% \n    27.6% \n    34.3% \n    14.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    7.4% \n    21.3% \n    18.1% \n    36.1% \n    17.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    9.7% \n    10.7% \n    28.3% \n    30.5% \n    20.8% \n  \n  \n    I think it is important to implement RAP in my work \n    3.9% \n    4.4% \n    20.3% \n    38.1% \n    33.2% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.2% \n    17.8% \n    18.7% \n    39.4% \n    16% \n  \n\n\n\na Sample size = 1059"
  },
  {
    "objectID": "summary.html#rap-scores",
    "href": "summary.html#rap-scores",
    "title": "Summary statistics",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    61.8% \n  \n  \n    Team open source code \n    Basic \n    11.5% \n  \n  \n    Version control \n    Basic \n    38.8% \n  \n  \n    Peer review \n    Basic \n    53.1% \n  \n  \n    AQUA book guidance \n    Basic \n    19.6% \n  \n  \n    Documentation \n    Basic \n    30.2% \n  \n  \n    Functions \n    Advanced \n    54.4% \n  \n  \n    Unit testing \n    Advanced \n    19.8% \n  \n  \n    Function documentation \n    Advanced \n    30% \n  \n  \n    Code packages \n    Advanced \n    11.7% \n  \n  \n    Follow code style guidelines \n    Advanced \n    48.1% \n  \n  \n    Continuous integration \n    Advanced \n    14.7% \n  \n  \n    Dependency management \n    Advanced \n    26% \n  \n\n\n\na Sample size = 1159\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14.8% \n  \n  \n    1 \n    26.9% \n  \n  \n    2 \n    20.2% \n  \n  \n    3 \n    15.8% \n  \n  \n    4 \n    13.3% \n  \n  \n    5 \n    7.2% \n  \n  \n    6 \n    1.8% \n  \n\n\n\na Sample size = 1159\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    24.5% \n  \n  \n    1 \n    21.7% \n  \n  \n    2 \n    18.5% \n  \n  \n    3 \n    14.5% \n  \n  \n    4 \n    8.8% \n  \n  \n    5 \n    6.6% \n  \n  \n    6 \n    3.8% \n  \n  \n    7 \n    1.6% \n  \n\n\n\na Sample size = 1159"
  }
]