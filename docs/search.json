[
  {
    "objectID": "data_collection.html#where-our-data-comes-from",
    "href": "data_collection.html#where-our-data-comes-from",
    "title": "Data collection",
    "section": "Where our data comes from",
    "text": "Where our data comes from\nLink tracking allows us to see where responses are coming from. Links promoted by RAP champions were the most commonly used for the past three waves, but consistently account for fewer than half of responses.\n\n\n\n \n  \n    Tracking link \n    2020 \n    2021 \n    2022 \n  \n \n\n  \n    RAP champions \n    33.9% \n    47.6% \n    40.8% \n  \n  \n    HoP/DDan mailing list \n    4.7% \n    12.8% \n    15.7% \n  \n  \n    Profession newsletters/mailing lists \n    7.5% \n    10.7% \n    15.6% \n  \n  \n    Slack \n    12.2% \n    3.7% \n    11.8% \n  \n  \n    Other \n    12% \n    2.6% \n    6.8% \n  \n  \n    Quality champions \n    0% \n    14.7% \n    5.2% \n  \n  \n    ONS RAS mailing list \n    17.5% \n    7% \n    4.2% \n  \n  \n    Other champions \n    12.3% \n    0.8% \n    0%"
  },
  {
    "objectID": "data_collection.html#sample-size-by-year",
    "href": "data_collection.html#sample-size-by-year",
    "title": "Data collection",
    "section": "Sample size by year",
    "text": "Sample size by year\n\n\n\n \n  \n    Year \n    Sample \n  \n \n\n  \n    2020 \n    1060 \n  \n  \n    2021 \n    912 \n  \n  \n    2022 \n    1322"
  },
  {
    "objectID": "data_collection.html#coding-frequency",
    "href": "data_collection.html#coding-frequency",
    "title": "Data collection",
    "section": "Coding frequency",
    "text": "Coding frequency\nEvery year, we ask respondents how often they code to achieve work objectives. While our communication strategy has changed over time, particularly to encourage more non-coders to respond, the findings remain consistent, with a gradual increase in the number of coders over time. Although we seek responses from all analysts the data probably over-represents people with current or prior coding experience.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    In your current role, how often do you write code to complete your work objectives? \n    2020 \n    2021 \n    2022 \n  \n \n\n  \n    Never \n    15.1% \n    12% \n    12.3% \n  \n  \n    Rarely \n    12.9% \n    13% \n    10.6% \n  \n  \n    Sometimes \n    20.4% \n    18.4% \n    18.2% \n  \n  \n    Regularly \n    29.7% \n    30.9% \n    29% \n  \n  \n    All the time \n    21.9% \n    25.7% \n    29.9%"
  },
  {
    "objectID": "data_collection.html#grade",
    "href": "data_collection.html#grade",
    "title": "Data collection",
    "section": "Grade",
    "text": "Grade\nAcross all waves, over 80% of Civil Service respondents reported that they are at H, S or Grade 7 grades. While this will be representative of the grade distribution of analysts in some government organisations, it may not be the case for all organisations.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Grade \n    2020 \n    2021 \n    2022 \n  \n \n\n  \n    Administrative officer or executive officer \n    8.1% \n    9% \n    8.1% \n  \n  \n    Higher Executive Officer \n    28.2% \n    27.7% \n    27.1% \n  \n  \n    Senior Executive Officer \n    32.9% \n    29.6% \n    32.1% \n  \n  \n    Grade 7 \n    24.2% \n    26.8% \n    23.8% \n  \n  \n    Grade 6 or above \n    6.7% \n    6.9% \n    8.9%"
  },
  {
    "objectID": "data_collection.html#profession",
    "href": "data_collection.html#profession",
    "title": "Data collection",
    "section": "Profession",
    "text": "Profession\nBelow is a breakdown of the proportion of respondents in different Civil Service professions. These cover the Analysis Function professions and do not apply outside of the civil service. The exception to this are data scientists who do not have an official government profession. They are included separately here to avoid skewing the data for other professions. Note that respondents can be members of more than one analytical profession. Profession data is difficult to compare across waves as these questions have changed in line with changes to the Analysis Function.\nThe CARS sample has high representation from statisticians compared with other professions. This again may be representative of some organisations but not all.\n\n\n\n \n  \n    Profession \n    Percent \n  \n \n\n  \n    Statisticians \n    38.3% \n  \n  \n    Data scientists \n    13.9% \n  \n  \n    Social researchers \n    11.6% \n  \n  \n    civil servant - no profession membership \n    11.6% \n  \n  \n    Operational researchers \n    10.6% \n  \n  \n    Economists \n    8.2% \n  \n  \n    Digital, data and technology profession \n    7% \n  \n  \n    Civil servant - other profession \n    5% \n  \n  \n    Actuaries \n    2.8% \n  \n  \n    Georgraphers \n    1.7%"
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#how-to-use-this-research",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#how-to-use-this-research",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-frequency-and-tools",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-frequency-and-tools",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0% \n  \n  \n    Rarely \n    5.1% \n  \n  \n    Sometimes \n    23.1% \n  \n  \n    Regularly \n    23.1% \n  \n  \n    All the time \n    48.7% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    89.5% \n    10.5% \n  \n  \n    Data cleaning \n    84.6% \n    15.4% \n  \n  \n    Data linking \n    84.6% \n    15.4% \n  \n  \n    Data transfer / migration \n    76% \n    24% \n  \n  \n    Data visualisation \n    86.8% \n    13.2% \n  \n  \n    Machine learning \n    81.8% \n    18.2% \n  \n  \n    Modelling \n    85.7% \n    14.3% \n  \n  \n    Quality assurance \n    69% \n    31% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    30.8% \n    64.1% \n    5.1% \n  \n  \n    Java / Scala \n    20.5% \n    76.9% \n    2.6% \n  \n  \n    Javascript / Typescript \n    20.5% \n    76.9% \n    2.6% \n  \n  \n    Matlab \n    35.9% \n    43.6% \n    20.5% \n  \n  \n    Python \n    89.7% \n    10.3% \n    0% \n  \n  \n    R \n    97.4% \n    2.6% \n    0% \n  \n  \n    SAS \n    2.6% \n    92.3% \n    5.1% \n  \n  \n    SPSS \n    5.1% \n    82.1% \n    12.8% \n  \n  \n    SQL \n    69.2% \n    28.2% \n    2.6% \n  \n  \n    Stata \n    10.3% \n    84.6% \n    5.1% \n  \n  \n    VBA \n    25.6% \n    74.4% \n    0% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    12.8% \n    5.1% \n    82.1% \n  \n  \n    Java / Scala \n    0% \n    7.7% \n    92.3% \n  \n  \n    Javascript / Typescript \n    2.6% \n    5.1% \n    92.3% \n  \n  \n    Matlab \n    35.9% \n    2.6% \n    61.5% \n  \n  \n    Python \n    38.5% \n    2.6% \n    59% \n  \n  \n    R \n    87.2% \n    5.1% \n    7.7% \n  \n  \n    SAS \n    7.7% \n    7.7% \n    84.6% \n  \n  \n    SPSS \n    20.5% \n    10.3% \n    69.2% \n  \n  \n    SQL \n    41% \n    2.6% \n    56.4% \n  \n  \n    Stata \n    7.7% \n    10.3% \n    82.1% \n  \n  \n    VBA \n    15.4% \n    12.8% \n    71.8% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    87.2% \n  \n  \n    No \n    2.6% \n  \n  \n    I don't know \n    10.3% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    69.2% \n  \n  \n    No \n    30.8% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 39"
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-capability",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-capability",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.4% \n  \n  \n    Slightly worse \n    6.9% \n  \n  \n    No change \n    17.2% \n  \n  \n    Slightly better \n    34.5% \n  \n  \n    Significantly better \n    37.9% \n  \n\n\n\n Sample size = 29\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    25.6% \n  \n  \n    In education \n    59% \n  \n  \n    In private sector employment \n    2.6% \n  \n  \n    In public sector employment \n    0% \n  \n  \n    Self-taught \n    12.8% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 39"
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-practices",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#coding-practices",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    76.9% \n    10.3% \n    5.1% \n    5.1% \n    0% \n    2.6% \n  \n  \n    Automated data quality assurance \n    5.1% \n    20.5% \n    17.9% \n    33.3% \n    15.4% \n    7.7% \n  \n  \n    Code review \n    0% \n    7.7% \n    30.8% \n    43.6% \n    15.4% \n    2.6% \n  \n  \n    Coding guidelines / Style guides \n    7.7% \n    20.5% \n    10.3% \n    35.9% \n    20.5% \n    5.1% \n  \n  \n    Functions \n    0% \n    7.7% \n    10.3% \n    23.1% \n    38.5% \n    20.5% \n  \n  \n    Open source own code \n    5.1% \n    23.1% \n    12.8% \n    43.6% \n    7.7% \n    7.7% \n  \n  \n    Packaging code \n    5.1% \n    46.2% \n    25.6% \n    17.9% \n    5.1% \n    0% \n  \n  \n    Standard directory structure \n    12.8% \n    20.5% \n    17.9% \n    17.9% \n    20.5% \n    10.3% \n  \n  \n    Unit testing \n    30.8% \n    10.3% \n    12.8% \n    33.3% \n    10.3% \n    2.6% \n  \n  \n    Use open source software \n    7.7% \n    0% \n    2.6% \n    10.3% \n    20.5% \n    59% \n  \n  \n    Version control \n    5.1% \n    23.1% \n    5.1% \n    33.3% \n    20.5% \n    12.8% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    23.1% \n    46.2% \n    12.8% \n    15.4% \n    2.6% \n    0% \n  \n  \n    Code comments \n    2.6% \n    0% \n    7.7% \n    10.3% \n    25.6% \n    53.8% \n  \n  \n    Data or assumptions registers \n    25.6% \n    53.8% \n    7.7% \n    5.1% \n    7.7% \n    0% \n  \n  \n    Desk notes \n    23.1% \n    17.9% \n    15.4% \n    28.2% \n    12.8% \n    2.6% \n  \n  \n    Documentation for each function or class \n    7.7% \n    28.2% \n    17.9% \n    12.8% \n    28.2% \n    5.1% \n  \n  \n    Flow charts \n    5.1% \n    46.2% \n    20.5% \n    25.6% \n    2.6% \n    0% \n  \n  \n    README files \n    5.1% \n    20.5% \n    17.9% \n    15.4% \n    28.2% \n    12.8% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    25.6% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what dependency management is \n    20.5% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    12.8% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what continuous integration is \n    33.3% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    2.6% \n  \n  \n    No \n    69.2% \n  \n  \n    I don't know what reproducible workflows are \n    28.2% \n  \n\n\n\n Sample size = 39"
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#rap-knowledge-and-opinions",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#rap-knowledge-and-opinions",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    69.2% \n  \n  \n    I don't know what a RAP champion is \n    15.4% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    10.3% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    2.6% \n  \n  \n    I know who the RAP champion in my department is \n    2.6% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    50% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    50% \n  \n  \n    I have read the RAP strategy \n    0% \n  \n\n\n\n Sample size = 12\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    25% \n    16.7% \n    33.3% \n    25% \n    0% \n  \n  \n    I feel confident implementing RAP in my work \n    16.7% \n    33.3% \n    16.7% \n    33.3% \n    0% \n  \n  \n    I feel supported to implement RAP in my work \n    16.7% \n    33.3% \n    16.7% \n    33.3% \n    0% \n  \n  \n    I know where to find resources to help me implement RAP \n    25% \n    41.7% \n    8.3% \n    16.7% \n    8.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    25% \n    0% \n    25% \n    50% \n    0% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    0% \n    25% \n    50% \n    25% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.3% \n    8.3% \n    25% \n    58.3% \n    0% \n  \n\n\n\n Sample size = 12"
  },
  {
    "objectID": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#rap-scores",
    "href": "departments/centre-for-environment-fisheries-and-aquaculture-science.html#rap-scores",
    "title": "Department summary: Centre for Environment, Fisheries and Aquaculture Science",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    79.5% \n  \n  \n    Documentation \n    Basic \n    35.9% \n  \n  \n    Version control \n    Basic \n    33.3% \n  \n  \n    Peer review \n    Basic \n    17.9% \n  \n  \n    Team open source code \n    Basic \n    15.4% \n  \n  \n    AQUA book guidance \n    Basic \n    2.6% \n  \n  \n    Functions \n    Advanced \n    59% \n  \n  \n    Function documentation \n    Advanced \n    33.3% \n  \n  \n    Follow code style guidelines \n    Advanced \n    25.6% \n  \n  \n    Dependency management \n    Advanced \n    25.6% \n  \n  \n    Unit testing \n    Advanced \n    12.8% \n  \n  \n    Continuous integration \n    Advanced \n    12.8% \n  \n  \n    Code packages \n    Advanced \n    5.1% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    7.7% \n  \n  \n    1 \n    41% \n  \n  \n    2 \n    25.6% \n  \n  \n    3 \n    12.8% \n  \n  \n    4 \n    10.3% \n  \n  \n    5 \n    2.6% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.1% \n  \n  \n    1 \n    28.2% \n  \n  \n    2 \n    20.5% \n  \n  \n    3 \n    12.8% \n  \n  \n    4 \n    10.3% \n  \n  \n    5 \n    5.1% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 39"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    15% \n  \n  \n    Rarely \n    10% \n  \n  \n    Sometimes \n    30% \n  \n  \n    Regularly \n    30% \n  \n  \n    All the time \n    15% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    75% \n    25% \n  \n  \n    Data cleaning \n    94.4% \n    5.6% \n  \n  \n    Data linking \n    87.5% \n    12.5% \n  \n  \n    Data transfer / migration \n    63.6% \n    36.4% \n  \n  \n    Data visualisation \n    61.1% \n    38.9% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    69.2% \n    30.8% \n  \n  \n    Quality assurance \n    55.6% \n    44.4% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    75% \n    25% \n  \n  \n    Java / Scala \n    0% \n    80% \n    20% \n  \n  \n    Javascript / Typescript \n    15% \n    70% \n    15% \n  \n  \n    Matlab \n    40% \n    50% \n    10% \n  \n  \n    Python \n    95% \n    0% \n    5% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SAS \n    60% \n    35% \n    5% \n  \n  \n    SPSS \n    50% \n    30% \n    20% \n  \n  \n    SQL \n    90% \n    10% \n    0% \n  \n  \n    Stata \n    40% \n    50% \n    10% \n  \n  \n    VBA \n    80% \n    20% \n    0% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    10% \n    0% \n    90% \n  \n  \n    Java / Scala \n    5% \n    0% \n    95% \n  \n  \n    Javascript / Typescript \n    5% \n    0% \n    95% \n  \n  \n    Matlab \n    10% \n    0% \n    90% \n  \n  \n    Python \n    50% \n    0% \n    50% \n  \n  \n    R \n    70% \n    0% \n    30% \n  \n  \n    SAS \n    15% \n    0% \n    85% \n  \n  \n    SPSS \n    45% \n    0% \n    55% \n  \n  \n    SQL \n    85% \n    0% \n    15% \n  \n  \n    Stata \n    15% \n    0% \n    85% \n  \n  \n    VBA \n    50% \n    0% \n    50% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    90% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    10% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    70% \n  \n  \n    No \n    30% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 20"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-capability",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-capability",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    12.5% \n  \n  \n    No change \n    6.2% \n  \n  \n    Slightly better \n    37.5% \n  \n  \n    Significantly better \n    43.8% \n  \n\n\n\n Sample size = 16\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    5.9% \n  \n  \n    In education \n    70.6% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    11.8% \n  \n  \n    Self-taught \n    11.8% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 17"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    35.3% \n    5.9% \n    0% \n    17.6% \n    29.4% \n    11.8% \n  \n  \n    Automated data quality assurance \n    5.9% \n    11.8% \n    23.5% \n    35.3% \n    23.5% \n    0% \n  \n  \n    Code review \n    0% \n    0% \n    5.9% \n    11.8% \n    52.9% \n    29.4% \n  \n  \n    Coding guidelines / Style guides \n    5.9% \n    5.9% \n    11.8% \n    17.6% \n    41.2% \n    17.6% \n  \n  \n    Functions \n    0% \n    5.9% \n    5.9% \n    11.8% \n    41.2% \n    35.3% \n  \n  \n    Open source own code \n    23.5% \n    47.1% \n    11.8% \n    5.9% \n    5.9% \n    5.9% \n  \n  \n    Packaging code \n    5.9% \n    41.2% \n    17.6% \n    29.4% \n    5.9% \n    0% \n  \n  \n    Standard directory structure \n    35.3% \n    17.6% \n    5.9% \n    0% \n    29.4% \n    11.8% \n  \n  \n    Unit testing \n    41.2% \n    5.9% \n    5.9% \n    23.5% \n    23.5% \n    0% \n  \n  \n    Use open source software \n    5.9% \n    0% \n    5.9% \n    11.8% \n    29.4% \n    47.1% \n  \n  \n    Version control \n    5.9% \n    23.5% \n    5.9% \n    5.9% \n    23.5% \n    35.3% \n  \n\n\n\n Sample size = 17\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    11.8% \n    11.8% \n    23.5% \n    23.5% \n    23.5% \n    5.9% \n  \n  \n    Code comments \n    0% \n    0% \n    0% \n    5.9% \n    17.6% \n    76.5% \n  \n  \n    Data or assumptions registers \n    0% \n    11.8% \n    5.9% \n    17.6% \n    47.1% \n    17.6% \n  \n  \n    Desk notes \n    23.5% \n    5.9% \n    11.8% \n    5.9% \n    29.4% \n    23.5% \n  \n  \n    Documentation for each function or class \n    11.8% \n    11.8% \n    17.6% \n    11.8% \n    11.8% \n    35.3% \n  \n  \n    Flow charts \n    5.9% \n    29.4% \n    11.8% \n    17.6% \n    29.4% \n    5.9% \n  \n  \n    README files \n    5.9% \n    17.6% \n    0% \n    29.4% \n    29.4% \n    17.6% \n  \n\n\n\n Sample size = 17\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    35.3% \n  \n  \n    No \n    17.6% \n  \n  \n    I don't know what dependency management is \n    47.1% \n  \n\n\n\n Sample size = 17\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    17.6% \n  \n  \n    No \n    35.3% \n  \n  \n    I don't know what continuous integration is \n    47.1% \n  \n\n\n\n Sample size = 17\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    41.2% \n  \n  \n    I don't know what reproducible workflows are \n    58.8% \n  \n\n\n\n Sample size = 17"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    5% \n  \n  \n    I don't know what a RAP champion is \n    20% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    45% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    30% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    26.3% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    42.1% \n  \n  \n    I have read the RAP strategy \n    31.6% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    10.5% \n    26.3% \n    15.8% \n    31.6% \n    15.8% \n  \n  \n    I feel confident implementing RAP in my work \n    5.3% \n    26.3% \n    26.3% \n    21.1% \n    21.1% \n  \n  \n    I feel supported to implement RAP in my work \n    5.3% \n    15.8% \n    10.5% \n    57.9% \n    10.5% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.3% \n    26.3% \n    15.8% \n    36.8% \n    15.8% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.3% \n    21.1% \n    15.8% \n    36.8% \n    21.1% \n  \n  \n    I think it is important to implement RAP in my work \n    5.3% \n    10.5% \n    10.5% \n    42.1% \n    31.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.3% \n    10.5% \n    15.8% \n    36.8% \n    31.6% \n  \n\n\n\n Sample size = 19"
  },
  {
    "objectID": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-business-energy-and-industrial-strategy-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Business, Energy and Industrial Strategy (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Peer review \n    Basic \n    82.4% \n  \n  \n    Use open source software \n    Basic \n    76.5% \n  \n  \n    Version control \n    Basic \n    58.8% \n  \n  \n    AQUA book guidance \n    Basic \n    41.2% \n  \n  \n    Documentation \n    Basic \n    41.2% \n  \n  \n    Team open source code \n    Basic \n    11.8% \n  \n  \n    Functions \n    Advanced \n    76.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    58.8% \n  \n  \n    Function documentation \n    Advanced \n    47.1% \n  \n  \n    Dependency management \n    Advanced \n    35.3% \n  \n  \n    Unit testing \n    Advanced \n    23.5% \n  \n  \n    Continuous integration \n    Advanced \n    17.6% \n  \n  \n    Code packages \n    Advanced \n    5.9% \n  \n\n\n\n Sample size = 17\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    0% \n  \n  \n    1 \n    23.5% \n  \n  \n    2 \n    11.8% \n  \n  \n    3 \n    23.5% \n  \n  \n    4 \n    11.8% \n  \n  \n    5 \n    29.4% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 17\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.5% \n  \n  \n    1 \n    17.6% \n  \n  \n    2 \n    5.9% \n  \n  \n    3 \n    11.8% \n  \n  \n    4 \n    11.8% \n  \n  \n    5 \n    23.5% \n  \n  \n    6 \n    5.9% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 17"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#how-to-use-this-research",
    "href": "departments/department-for-digital-culture-media-and-sport.html#how-to-use-this-research",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#coding-frequency-and-tools",
    "href": "departments/department-for-digital-culture-media-and-sport.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    28% \n  \n  \n    Rarely \n    16% \n  \n  \n    Sometimes \n    28% \n  \n  \n    Regularly \n    20% \n  \n  \n    All the time \n    8% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    52% \n    48% \n  \n  \n    Data cleaning \n    57.9% \n    42.1% \n  \n  \n    Data linking \n    75% \n    25% \n  \n  \n    Data transfer / migration \n    45.5% \n    54.5% \n  \n  \n    Data visualisation \n    47.8% \n    52.2% \n  \n  \n    Machine learning \n    80% \n    20% \n  \n  \n    Modelling \n    56.2% \n    43.8% \n  \n  \n    Quality assurance \n    32% \n    68% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4% \n    76% \n    20% \n  \n  \n    Java / Scala \n    8% \n    72% \n    20% \n  \n  \n    Javascript / Typescript \n    8% \n    72% \n    20% \n  \n  \n    Matlab \n    0% \n    76% \n    24% \n  \n  \n    Python \n    76% \n    20% \n    4% \n  \n  \n    R \n    88% \n    12% \n    0% \n  \n  \n    SAS \n    4% \n    68% \n    28% \n  \n  \n    SPSS \n    40% \n    48% \n    12% \n  \n  \n    SQL \n    32% \n    48% \n    20% \n  \n  \n    Stata \n    12% \n    64% \n    24% \n  \n  \n    VBA \n    44% \n    48% \n    8% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    12% \n    4% \n    84% \n  \n  \n    Java / Scala \n    0% \n    4% \n    96% \n  \n  \n    Javascript / Typescript \n    0% \n    4% \n    96% \n  \n  \n    Matlab \n    8% \n    8% \n    84% \n  \n  \n    Python \n    48% \n    4% \n    48% \n  \n  \n    R \n    68% \n    8% \n    24% \n  \n  \n    SAS \n    8% \n    4% \n    88% \n  \n  \n    SPSS \n    28% \n    4% \n    68% \n  \n  \n    SQL \n    48% \n    4% \n    48% \n  \n  \n    Stata \n    16% \n    4% \n    80% \n  \n  \n    VBA \n    28% \n    4% \n    68% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    28% \n  \n  \n    No \n    12% \n  \n  \n    I don't know \n    60% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    16% \n  \n  \n    No \n    72% \n  \n  \n    I don't know \n    12% \n  \n\n\n\n Sample size = 25"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#coding-capability",
    "href": "departments/department-for-digital-culture-media-and-sport.html#coding-capability",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    41.2% \n  \n  \n    No change \n    5.9% \n  \n  \n    Slightly better \n    47.1% \n  \n  \n    Significantly better \n    5.9% \n  \n\n\n\n Sample size = 17\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    20% \n  \n  \n    In education \n    60% \n  \n  \n    In private sector employment \n    10% \n  \n  \n    In public sector employment \n    5% \n  \n  \n    Self-taught \n    5% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 20"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#coding-practices",
    "href": "departments/department-for-digital-culture-media-and-sport.html#coding-practices",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    22.2% \n    22.2% \n    16.7% \n    27.8% \n    5.6% \n    5.6% \n  \n  \n    Automated data quality assurance \n    16.7% \n    44.4% \n    16.7% \n    16.7% \n    0% \n    5.6% \n  \n  \n    Code review \n    0% \n    5.6% \n    11.1% \n    27.8% \n    22.2% \n    33.3% \n  \n  \n    Coding guidelines / Style guides \n    16.7% \n    22.2% \n    0% \n    27.8% \n    11.1% \n    22.2% \n  \n  \n    Functions \n    16.7% \n    16.7% \n    11.1% \n    16.7% \n    11.1% \n    27.8% \n  \n  \n    Open source own code \n    22.2% \n    61.1% \n    11.1% \n    5.6% \n    0% \n    0% \n  \n  \n    Packaging code \n    33.3% \n    50% \n    0% \n    0% \n    5.6% \n    11.1% \n  \n  \n    Standard directory structure \n    38.9% \n    22.2% \n    16.7% \n    0% \n    11.1% \n    11.1% \n  \n  \n    Unit testing \n    50% \n    16.7% \n    16.7% \n    5.6% \n    0% \n    11.1% \n  \n  \n    Use open source software \n    11.1% \n    11.1% \n    5.6% \n    11.1% \n    27.8% \n    33.3% \n  \n  \n    Version control \n    11.1% \n    61.1% \n    16.7% \n    5.6% \n    0% \n    5.6% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    27.8% \n    11.1% \n    11.1% \n    27.8% \n    16.7% \n    5.6% \n  \n  \n    Code comments \n    5.6% \n    5.6% \n    0% \n    5.6% \n    27.8% \n    55.6% \n  \n  \n    Data or assumptions registers \n    16.7% \n    16.7% \n    16.7% \n    22.2% \n    11.1% \n    16.7% \n  \n  \n    Desk notes \n    33.3% \n    22.2% \n    5.6% \n    16.7% \n    11.1% \n    11.1% \n  \n  \n    Documentation for each function or class \n    27.8% \n    27.8% \n    16.7% \n    16.7% \n    5.6% \n    5.6% \n  \n  \n    Flow charts \n    11.1% \n    38.9% \n    22.2% \n    27.8% \n    0% \n    0% \n  \n  \n    README files \n    16.7% \n    33.3% \n    16.7% \n    16.7% \n    11.1% \n    5.6% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    5.6% \n  \n  \n    No \n    33.3% \n  \n  \n    I don't know what dependency management is \n    61.1% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    61.1% \n  \n  \n    I don't know what continuous integration is \n    38.9% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    38.9% \n  \n  \n    I don't know what reproducible workflows are \n    61.1% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-digital-culture-media-and-sport.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    40% \n  \n  \n    I don't know what a RAP champion is \n    28% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    24% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    8% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    40% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    46.7% \n  \n  \n    I have read the RAP strategy \n    13.3% \n  \n\n\n\n Sample size = 15\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    6.7% \n    46.7% \n    33.3% \n    0% \n    13.3% \n  \n  \n    I feel confident implementing RAP in my work \n    13.3% \n    20% \n    26.7% \n    20% \n    20% \n  \n  \n    I feel supported to implement RAP in my work \n    6.7% \n    33.3% \n    40% \n    13.3% \n    6.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    13.3% \n    40% \n    26.7% \n    13.3% \n    6.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    0% \n    13.3% \n    40% \n    26.7% \n    20% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    6.7% \n    13.3% \n    46.7% \n    33.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    6.7% \n    26.7% \n    40% \n    20% \n    6.7% \n  \n\n\n\n Sample size = 15"
  },
  {
    "objectID": "departments/department-for-digital-culture-media-and-sport.html#rap-scores",
    "href": "departments/department-for-digital-culture-media-and-sport.html#rap-scores",
    "title": "Department summary: Department for Digital, Culture, Media and Sport",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    61.1% \n  \n  \n    Peer review \n    Basic \n    55.6% \n  \n  \n    Documentation \n    Basic \n    16.7% \n  \n  \n    AQUA book guidance \n    Basic \n    11.1% \n  \n  \n    Version control \n    Basic \n    5.6% \n  \n  \n    Team open source code \n    Basic \n    0% \n  \n  \n    Functions \n    Advanced \n    38.9% \n  \n  \n    Follow code style guidelines \n    Advanced \n    33.3% \n  \n  \n    Code packages \n    Advanced \n    16.7% \n  \n  \n    Unit testing \n    Advanced \n    11.1% \n  \n  \n    Function documentation \n    Advanced \n    11.1% \n  \n  \n    Dependency management \n    Advanced \n    5.6% \n  \n  \n    Continuous integration \n    Advanced \n    0% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    16.7% \n  \n  \n    1 \n    38.9% \n  \n  \n    2 \n    27.8% \n  \n  \n    3 \n    11.1% \n  \n  \n    4 \n    5.6% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    44.4% \n  \n  \n    1 \n    27.8% \n  \n  \n    2 \n    11.1% \n  \n  \n    3 \n    5.6% \n  \n  \n    4 \n    5.6% \n  \n  \n    5 \n    5.6% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "departments/department-for-education.html#how-to-use-this-research",
    "href": "departments/department-for-education.html#how-to-use-this-research",
    "title": "Department summary: Department for Education",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-education.html#coding-frequency-and-tools",
    "href": "departments/department-for-education.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Education",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    4.8% \n  \n  \n    Rarely \n    7.1% \n  \n  \n    Sometimes \n    9.5% \n  \n  \n    Regularly \n    42.9% \n  \n  \n    All the time \n    35.7% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    90.2% \n    9.8% \n  \n  \n    Data cleaning \n    92.3% \n    7.7% \n  \n  \n    Data linking \n    94.1% \n    5.9% \n  \n  \n    Data transfer / migration \n    78.3% \n    21.7% \n  \n  \n    Data visualisation \n    81.6% \n    18.4% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    79.2% \n    20.8% \n  \n  \n    Quality assurance \n    80.5% \n    19.5% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.1% \n    66.7% \n    26.2% \n  \n  \n    Java / Scala \n    4.8% \n    81% \n    14.3% \n  \n  \n    Javascript / Typescript \n    2.4% \n    85.7% \n    11.9% \n  \n  \n    Matlab \n    7.1% \n    61.9% \n    31% \n  \n  \n    Python \n    57.1% \n    35.7% \n    7.1% \n  \n  \n    R \n    97.6% \n    0% \n    2.4% \n  \n  \n    SAS \n    9.5% \n    66.7% \n    23.8% \n  \n  \n    SPSS \n    52.4% \n    35.7% \n    11.9% \n  \n  \n    SQL \n    85.7% \n    9.5% \n    4.8% \n  \n  \n    Stata \n    23.8% \n    61.9% \n    14.3% \n  \n  \n    VBA \n    66.7% \n    28.6% \n    4.8% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.1% \n    14.3% \n    78.6% \n  \n  \n    Java / Scala \n    2.4% \n    11.9% \n    85.7% \n  \n  \n    Javascript / Typescript \n    7.1% \n    14.3% \n    78.6% \n  \n  \n    Matlab \n    11.9% \n    16.7% \n    71.4% \n  \n  \n    Python \n    28.6% \n    7.1% \n    64.3% \n  \n  \n    R \n    83.3% \n    0% \n    16.7% \n  \n  \n    SAS \n    28.6% \n    4.8% \n    66.7% \n  \n  \n    SPSS \n    42.9% \n    9.5% \n    47.6% \n  \n  \n    SQL \n    76.2% \n    0% \n    23.8% \n  \n  \n    Stata \n    16.7% \n    7.1% \n    76.2% \n  \n  \n    VBA \n    26.2% \n    7.1% \n    66.7% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    90.5% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    9.5% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    73.8% \n  \n  \n    No \n    23.8% \n  \n  \n    I don't know \n    2.4% \n  \n\n\n\n Sample size = 42"
  },
  {
    "objectID": "departments/department-for-education.html#coding-capability",
    "href": "departments/department-for-education.html#coding-capability",
    "title": "Department summary: Department for Education",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    2.8% \n  \n  \n    Slightly worse \n    11.1% \n  \n  \n    No change \n    11.1% \n  \n  \n    Slightly better \n    41.7% \n  \n  \n    Significantly better \n    33.3% \n  \n\n\n\n Sample size = 36\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    14.3% \n  \n  \n    In education \n    54.8% \n  \n  \n    In private sector employment \n    4.8% \n  \n  \n    In public sector employment \n    9.5% \n  \n  \n    Self-taught \n    16.7% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 42"
  },
  {
    "objectID": "departments/department-for-education.html#coding-practices",
    "href": "departments/department-for-education.html#coding-practices",
    "title": "Department summary: Department for Education",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    22.5% \n    10% \n    2.5% \n    25% \n    25% \n    15% \n  \n  \n    Automated data quality assurance \n    5% \n    10% \n    15% \n    32.5% \n    30% \n    7.5% \n  \n  \n    Code review \n    0% \n    0% \n    10% \n    20% \n    35% \n    35% \n  \n  \n    Coding guidelines / Style guides \n    7.5% \n    10% \n    0% \n    25% \n    32.5% \n    25% \n  \n  \n    Functions \n    2.5% \n    10% \n    22.5% \n    10% \n    27.5% \n    27.5% \n  \n  \n    Open source own code \n    22.5% \n    42.5% \n    15% \n    2.5% \n    12.5% \n    5% \n  \n  \n    Packaging code \n    12.5% \n    47.5% \n    17.5% \n    7.5% \n    7.5% \n    7.5% \n  \n  \n    Standard directory structure \n    20% \n    17.5% \n    7.5% \n    17.5% \n    12.5% \n    25% \n  \n  \n    Unit testing \n    30% \n    15% \n    12.5% \n    27.5% \n    7.5% \n    7.5% \n  \n  \n    Use open source software \n    5% \n    12.5% \n    2.5% \n    5% \n    25% \n    50% \n  \n  \n    Version control \n    0% \n    25% \n    10% \n    17.5% \n    20% \n    27.5% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    10% \n    10% \n    15% \n    32.5% \n    17.5% \n    15% \n  \n  \n    Code comments \n    0% \n    5% \n    0% \n    5% \n    17.5% \n    72.5% \n  \n  \n    Data or assumptions registers \n    5% \n    5% \n    12.5% \n    25% \n    27.5% \n    25% \n  \n  \n    Desk notes \n    25% \n    25% \n    7.5% \n    20% \n    7.5% \n    15% \n  \n  \n    Documentation for each function or class \n    12.5% \n    32.5% \n    12.5% \n    17.5% \n    15% \n    10% \n  \n  \n    Flow charts \n    5% \n    27.5% \n    35% \n    25% \n    5% \n    2.5% \n  \n  \n    README files \n    2.5% \n    22.5% \n    15% \n    27.5% \n    12.5% \n    20% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    32.5% \n  \n  \n    No \n    32.5% \n  \n  \n    I don't know what dependency management is \n    35% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15% \n  \n  \n    No \n    27.5% \n  \n  \n    I don't know what continuous integration is \n    57.5% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    65% \n  \n  \n    I don't know what reproducible workflows are \n    35% \n  \n\n\n\n Sample size = 40"
  },
  {
    "objectID": "departments/department-for-education.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-education.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Education",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    19.5% \n  \n  \n    I don't know what a RAP champion is \n    24.4% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    39% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    17.1% \n  \n\n\n\n Sample size = 41\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    32.4% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    38.2% \n  \n  \n    I have read the RAP strategy \n    29.4% \n  \n\n\n\n Sample size = 34\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.7% \n    14.7% \n    20.6% \n    23.5% \n    26.5% \n  \n  \n    I feel confident implementing RAP in my work \n    8.8% \n    17.6% \n    20.6% \n    35.3% \n    17.6% \n  \n  \n    I feel supported to implement RAP in my work \n    8.8% \n    11.8% \n    35.3% \n    17.6% \n    26.5% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.9% \n    20.6% \n    26.5% \n    23.5% \n    23.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    14.7% \n    5.9% \n    23.5% \n    26.5% \n    29.4% \n  \n  \n    I think it is important to implement RAP in my work \n    8.8% \n    5.9% \n    23.5% \n    20.6% \n    41.2% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.8% \n    11.8% \n    17.6% \n    38.2% \n    23.5% \n  \n\n\n\n Sample size = 34"
  },
  {
    "objectID": "departments/department-for-education.html#rap-scores",
    "href": "departments/department-for-education.html#rap-scores",
    "title": "Department summary: Department for Education",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    75% \n  \n  \n    Peer review \n    Basic \n    70% \n  \n  \n    Version control \n    Basic \n    47.5% \n  \n  \n    AQUA book guidance \n    Basic \n    40% \n  \n  \n    Documentation \n    Basic \n    32.5% \n  \n  \n    Team open source code \n    Basic \n    17.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    57.5% \n  \n  \n    Functions \n    Advanced \n    55% \n  \n  \n    Dependency management \n    Advanced \n    32.5% \n  \n  \n    Function documentation \n    Advanced \n    25% \n  \n  \n    Unit testing \n    Advanced \n    15% \n  \n  \n    Code packages \n    Advanced \n    15% \n  \n  \n    Continuous integration \n    Advanced \n    15% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    5% \n  \n  \n    1 \n    27.5% \n  \n  \n    2 \n    15% \n  \n  \n    3 \n    15% \n  \n  \n    4 \n    15% \n  \n  \n    5 \n    15% \n  \n  \n    6 \n    7.5% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    30% \n  \n  \n    1 \n    17.5% \n  \n  \n    2 \n    15% \n  \n  \n    3 \n    7.5% \n  \n  \n    4 \n    15% \n  \n  \n    5 \n    7.5% \n  \n  \n    6 \n    5% \n  \n  \n    7 \n    2.5% \n  \n\n\n\n Sample size = 40"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    22.9% \n  \n  \n    Rarely \n    11.4% \n  \n  \n    Sometimes \n    11.4% \n  \n  \n    Regularly \n    31.4% \n  \n  \n    All the time \n    22.9% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    79.3% \n    20.7% \n  \n  \n    Data cleaning \n    77.8% \n    22.2% \n  \n  \n    Data linking \n    76.5% \n    23.5% \n  \n  \n    Data transfer / migration \n    80% \n    20% \n  \n  \n    Data visualisation \n    76.7% \n    23.3% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    82.4% \n    17.6% \n  \n  \n    Quality assurance \n    73.1% \n    26.9% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.7% \n    71.4% \n    22.9% \n  \n  \n    Java / Scala \n    17.1% \n    62.9% \n    20% \n  \n  \n    Javascript / Typescript \n    14.3% \n    57.1% \n    28.6% \n  \n  \n    Matlab \n    8.6% \n    45.7% \n    45.7% \n  \n  \n    Python \n    60% \n    31.4% \n    8.6% \n  \n  \n    R \n    91.4% \n    8.6% \n    0% \n  \n  \n    SAS \n    11.4% \n    65.7% \n    22.9% \n  \n  \n    SPSS \n    25.7% \n    57.1% \n    17.1% \n  \n  \n    SQL \n    54.3% \n    34.3% \n    11.4% \n  \n  \n    Stata \n    22.9% \n    57.1% \n    20% \n  \n  \n    VBA \n    48.6% \n    42.9% \n    8.6% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    11.4% \n    8.6% \n    80% \n  \n  \n    Java / Scala \n    5.7% \n    14.3% \n    80% \n  \n  \n    Javascript / Typescript \n    8.6% \n    11.4% \n    80% \n  \n  \n    Matlab \n    17.1% \n    11.4% \n    71.4% \n  \n  \n    Python \n    45.7% \n    8.6% \n    45.7% \n  \n  \n    R \n    80% \n    0% \n    20% \n  \n  \n    SAS \n    2.9% \n    14.3% \n    82.9% \n  \n  \n    SPSS \n    14.3% \n    11.4% \n    74.3% \n  \n  \n    SQL \n    51.4% \n    8.6% \n    40% \n  \n  \n    Stata \n    5.7% \n    11.4% \n    82.9% \n  \n  \n    VBA \n    20% \n    14.3% \n    65.7% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    62.9% \n  \n  \n    No \n    11.4% \n  \n  \n    I don't know \n    25.7% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    71.4% \n  \n  \n    No \n    28.6% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 35"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-capability",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-capability",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    13.3% \n  \n  \n    Slightly worse \n    13.3% \n  \n  \n    No change \n    6.7% \n  \n  \n    Slightly better \n    46.7% \n  \n  \n    Significantly better \n    20% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    6.5% \n  \n  \n    In education \n    64.5% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    3.2% \n  \n  \n    Self-taught \n    22.6% \n  \n  \n    Other \n    3.2% \n  \n\n\n\n Sample size = 31"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    29.6% \n    14.8% \n    18.5% \n    18.5% \n    18.5% \n    0% \n  \n  \n    Automated data quality assurance \n    3.7% \n    22.2% \n    18.5% \n    29.6% \n    22.2% \n    3.7% \n  \n  \n    Code review \n    0% \n    14.8% \n    14.8% \n    25.9% \n    33.3% \n    11.1% \n  \n  \n    Coding guidelines / Style guides \n    3.7% \n    18.5% \n    7.4% \n    18.5% \n    37% \n    14.8% \n  \n  \n    Functions \n    0% \n    7.4% \n    11.1% \n    14.8% \n    33.3% \n    33.3% \n  \n  \n    Open source own code \n    0% \n    37% \n    14.8% \n    25.9% \n    18.5% \n    3.7% \n  \n  \n    Packaging code \n    7.4% \n    29.6% \n    22.2% \n    22.2% \n    18.5% \n    0% \n  \n  \n    Standard directory structure \n    25.9% \n    3.7% \n    14.8% \n    18.5% \n    29.6% \n    7.4% \n  \n  \n    Unit testing \n    22.2% \n    14.8% \n    14.8% \n    29.6% \n    11.1% \n    7.4% \n  \n  \n    Use open source software \n    3.7% \n    3.7% \n    0% \n    18.5% \n    18.5% \n    55.6% \n  \n  \n    Version control \n    3.7% \n    18.5% \n    7.4% \n    7.4% \n    40.7% \n    22.2% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    18.5% \n    44.4% \n    7.4% \n    11.1% \n    14.8% \n    3.7% \n  \n  \n    Code comments \n    0% \n    3.7% \n    3.7% \n    3.7% \n    33.3% \n    55.6% \n  \n  \n    Data or assumptions registers \n    22.2% \n    40.7% \n    7.4% \n    14.8% \n    14.8% \n    0% \n  \n  \n    Desk notes \n    18.5% \n    7.4% \n    18.5% \n    29.6% \n    25.9% \n    0% \n  \n  \n    Documentation for each function or class \n    3.7% \n    22.2% \n    22.2% \n    7.4% \n    29.6% \n    14.8% \n  \n  \n    Flow charts \n    0% \n    55.6% \n    14.8% \n    25.9% \n    3.7% \n    0% \n  \n  \n    README files \n    0% \n    25.9% \n    3.7% \n    14.8% \n    44.4% \n    11.1% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    33.3% \n  \n  \n    No \n    37% \n  \n  \n    I don't know what dependency management is \n    29.6% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    18.5% \n  \n  \n    No \n    48.1% \n  \n  \n    I don't know what continuous integration is \n    33.3% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    7.4% \n  \n  \n    No \n    59.3% \n  \n  \n    I don't know what reproducible workflows are \n    33.3% \n  \n\n\n\n Sample size = 27"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    14.3% \n  \n  \n    I don't know what a RAP champion is \n    17.1% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    37.1% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.7% \n  \n  \n    I know who the RAP champion in my department is \n    25.7% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    23.3% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    46.7% \n  \n  \n    I have read the RAP strategy \n    30% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    10% \n    20% \n    20% \n    43.3% \n    6.7% \n  \n  \n    I feel confident implementing RAP in my work \n    10% \n    16.7% \n    23.3% \n    33.3% \n    16.7% \n  \n  \n    I feel supported to implement RAP in my work \n    16.7% \n    20% \n    43.3% \n    16.7% \n    3.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    10% \n    30% \n    16.7% \n    40% \n    3.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    10% \n    6.7% \n    30% \n    46.7% \n    6.7% \n  \n  \n    I think it is important to implement RAP in my work \n    6.7% \n    6.7% \n    13.3% \n    40% \n    33.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    10% \n    10% \n    20% \n    53.3% \n    6.7% \n  \n\n\n\n Sample size = 30"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    74.1% \n  \n  \n    Version control \n    Basic \n    63% \n  \n  \n    Documentation \n    Basic \n    51.9% \n  \n  \n    Peer review \n    Basic \n    44.4% \n  \n  \n    Team open source code \n    Basic \n    22.2% \n  \n  \n    AQUA book guidance \n    Basic \n    18.5% \n  \n  \n    Functions \n    Advanced \n    66.7% \n  \n  \n    Follow code style guidelines \n    Advanced \n    51.9% \n  \n  \n    Function documentation \n    Advanced \n    44.4% \n  \n  \n    Dependency management \n    Advanced \n    33.3% \n  \n  \n    Unit testing \n    Advanced \n    18.5% \n  \n  \n    Code packages \n    Advanced \n    18.5% \n  \n  \n    Continuous integration \n    Advanced \n    18.5% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    11.1% \n  \n  \n    1 \n    18.5% \n  \n  \n    2 \n    11.1% \n  \n  \n    3 \n    22.2% \n  \n  \n    4 \n    22.2% \n  \n  \n    5 \n    11.1% \n  \n  \n    6 \n    3.7% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    11.1% \n  \n  \n    1 \n    14.8% \n  \n  \n    2 \n    25.9% \n  \n  \n    3 \n    22.2% \n  \n  \n    4 \n    14.8% \n  \n  \n    5 \n    7.4% \n  \n  \n    6 \n    3.7% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 27"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#how-to-use-this-research",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.9% \n  \n  \n    Rarely \n    10.4% \n  \n  \n    Sometimes \n    17% \n  \n  \n    Regularly \n    29.6% \n  \n  \n    All the time \n    34.1% \n  \n\n\n\n Sample size = 135\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    84.9% \n    15.1% \n  \n  \n    Data cleaning \n    81.1% \n    18.9% \n  \n  \n    Data linking \n    82% \n    18% \n  \n  \n    Data transfer / migration \n    68.6% \n    31.4% \n  \n  \n    Data visualisation \n    82.7% \n    17.3% \n  \n  \n    Machine learning \n    92.5% \n    7.5% \n  \n  \n    Modelling \n    87.4% \n    12.6% \n  \n  \n    Quality assurance \n    69.2% \n    30.8% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    16.3% \n    65.9% \n    17.8% \n  \n  \n    Java / Scala \n    15.6% \n    68.9% \n    15.6% \n  \n  \n    Javascript / Typescript \n    13.3% \n    68.1% \n    18.5% \n  \n  \n    Matlab \n    15.6% \n    50.4% \n    34.1% \n  \n  \n    Python \n    70.4% \n    23.7% \n    5.9% \n  \n  \n    R \n    92.6% \n    6.7% \n    0.7% \n  \n  \n    SAS \n    11.1% \n    75.6% \n    13.3% \n  \n  \n    SPSS \n    14.1% \n    71.1% \n    14.8% \n  \n  \n    SQL \n    57% \n    37% \n    5.9% \n  \n  \n    Stata \n    11.1% \n    72.6% \n    16.3% \n  \n  \n    VBA \n    34.1% \n    59.3% \n    6.7% \n  \n\n\n\n Sample size = 135\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    11.1% \n    4.4% \n    84.4% \n  \n  \n    Java / Scala \n    3.7% \n    6.7% \n    89.6% \n  \n  \n    Javascript / Typescript \n    8.1% \n    5.2% \n    86.7% \n  \n  \n    Matlab \n    23.7% \n    5.9% \n    70.4% \n  \n  \n    Python \n    39.3% \n    3.7% \n    57% \n  \n  \n    R \n    80.7% \n    1.5% \n    17.8% \n  \n  \n    SAS \n    7.4% \n    6.7% \n    85.9% \n  \n  \n    SPSS \n    20.7% \n    8.1% \n    71.1% \n  \n  \n    SQL \n    48.1% \n    4.4% \n    47.4% \n  \n  \n    Stata \n    7.4% \n    7.4% \n    85.2% \n  \n  \n    VBA \n    19.3% \n    8.9% \n    71.9% \n  \n\n\n\n Sample size = 135\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    65.9% \n  \n  \n    No \n    8.9% \n  \n  \n    I don't know \n    25.2% \n  \n\n\n\n Sample size = 135\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    58.5% \n  \n  \n    No \n    41.5% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 135"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-capability",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-capability",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7.3% \n  \n  \n    Slightly worse \n    13.8% \n  \n  \n    No change \n    12.8% \n  \n  \n    Slightly better \n    38.5% \n  \n  \n    Significantly better \n    27.5% \n  \n\n\n\n Sample size = 109\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    16.4% \n  \n  \n    In education \n    57% \n  \n  \n    In private sector employment \n    2.3% \n  \n  \n    In public sector employment \n    4.7% \n  \n  \n    Self-taught \n    17.2% \n  \n  \n    Other \n    2.3% \n  \n\n\n\n Sample size = 128"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-practices",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-practices",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    56.9% \n    13.8% \n    8.1% \n    11.4% \n    8.9% \n    0.8% \n  \n  \n    Automated data quality assurance \n    6.5% \n    19.5% \n    14.6% \n    34.1% \n    18.7% \n    6.5% \n  \n  \n    Code review \n    0% \n    15.4% \n    18.7% \n    35.8% \n    25.2% \n    4.9% \n  \n  \n    Coding guidelines / Style guides \n    4.9% \n    20.3% \n    6.5% \n    30.1% \n    26.8% \n    11.4% \n  \n  \n    Functions \n    2.4% \n    12.2% \n    8.9% \n    24.4% \n    29.3% \n    22.8% \n  \n  \n    Open source own code \n    4.1% \n    35.8% \n    14.6% \n    30.9% \n    8.9% \n    5.7% \n  \n  \n    Packaging code \n    7.3% \n    41.5% \n    23.6% \n    14.6% \n    10.6% \n    2.4% \n  \n  \n    Standard directory structure \n    17.1% \n    17.9% \n    12.2% \n    22% \n    22% \n    8.9% \n  \n  \n    Unit testing \n    24.4% \n    17.1% \n    10.6% \n    30.9% \n    12.2% \n    4.9% \n  \n  \n    Use open source software \n    4.1% \n    4.9% \n    5.7% \n    13% \n    20.3% \n    52% \n  \n  \n    Version control \n    6.5% \n    29.3% \n    8.9% \n    18.7% \n    22.8% \n    13.8% \n  \n\n\n\n Sample size = 123\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    17.9% \n    45.5% \n    10.6% \n    14.6% \n    5.7% \n    5.7% \n  \n  \n    Code comments \n    0.8% \n    4.9% \n    4.9% \n    11.4% \n    26% \n    52% \n  \n  \n    Data or assumptions registers \n    22% \n    48.8% \n    10.6% \n    11.4% \n    6.5% \n    0.8% \n  \n  \n    Desk notes \n    14.6% \n    17.9% \n    13% \n    30.1% \n    17.1% \n    7.3% \n  \n  \n    Documentation for each function or class \n    5.7% \n    27.6% \n    19.5% \n    16.3% \n    22% \n    8.9% \n  \n  \n    Flow charts \n    2.4% \n    48% \n    19.5% \n    22.8% \n    6.5% \n    0.8% \n  \n  \n    README files \n    2.4% \n    22% \n    11.4% \n    25.2% \n    26.8% \n    12.2% \n  \n\n\n\n Sample size = 123\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    26% \n  \n  \n    No \n    43.9% \n  \n  \n    I don't know what dependency management is \n    30.1% \n  \n\n\n\n Sample size = 123\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15.4% \n  \n  \n    No \n    45.5% \n  \n  \n    I don't know what continuous integration is \n    39% \n  \n\n\n\n Sample size = 123\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    5.7% \n  \n  \n    No \n    65.9% \n  \n  \n    I don't know what reproducible workflows are \n    28.5% \n  \n\n\n\n Sample size = 123"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    42.5% \n  \n  \n    I don't know what a RAP champion is \n    17.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    17.9% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    6% \n  \n  \n    I know who the RAP champion in my department is \n    15.7% \n  \n\n\n\n Sample size = 134\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    38.5% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    34.6% \n  \n  \n    I have read the RAP strategy \n    26.9% \n  \n\n\n\n Sample size = 78\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.1% \n    19.2% \n    26.9% \n    32.1% \n    7.7% \n  \n  \n    I feel confident implementing RAP in my work \n    12.8% \n    20.5% \n    20.5% \n    33.3% \n    12.8% \n  \n  \n    I feel supported to implement RAP in my work \n    15.4% \n    25.6% \n    34.6% \n    21.8% \n    2.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    14.1% \n    35.9% \n    14.1% \n    28.2% \n    7.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    11.5% \n    6.4% \n    28.2% \n    38.5% \n    15.4% \n  \n  \n    I think it is important to implement RAP in my work \n    2.6% \n    6.4% \n    19.2% \n    41% \n    30.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    9% \n    16.7% \n    20.5% \n    46.2% \n    7.7% \n  \n\n\n\n Sample size = 78"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-scores",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-scores",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    72.4% \n  \n  \n    Version control \n    Basic \n    36.6% \n  \n  \n    Documentation \n    Basic \n    35% \n  \n  \n    Peer review \n    Basic \n    30.1% \n  \n  \n    Team open source code \n    Basic \n    14.6% \n  \n  \n    AQUA book guidance \n    Basic \n    9.8% \n  \n  \n    Functions \n    Advanced \n    52% \n  \n  \n    Follow code style guidelines \n    Advanced \n    38.2% \n  \n  \n    Function documentation \n    Advanced \n    30.9% \n  \n  \n    Dependency management \n    Advanced \n    26% \n  \n  \n    Unit testing \n    Advanced \n    17.1% \n  \n  \n    Continuous integration \n    Advanced \n    15.4% \n  \n  \n    Code packages \n    Advanced \n    13% \n  \n\n\n\n Sample size = 123\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    13.8% \n  \n  \n    1 \n    31.7% \n  \n  \n    2 \n    21.1% \n  \n  \n    3 \n    15.4% \n  \n  \n    4 \n    12.2% \n  \n  \n    5 \n    4.9% \n  \n  \n    6 \n    0.8% \n  \n\n\n\n Sample size = 123\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.8% \n  \n  \n    1 \n    24.4% \n  \n  \n    2 \n    22% \n  \n  \n    3 \n    12.2% \n  \n  \n    4 \n    9.8% \n  \n  \n    5 \n    5.7% \n  \n  \n    6 \n    2.4% \n  \n  \n    7 \n    0.8% \n  \n\n\n\n Sample size = 123"
  },
  {
    "objectID": "departments/department-for-international-trade.html#how-to-use-this-research",
    "href": "departments/department-for-international-trade.html#how-to-use-this-research",
    "title": "Department summary: Department for International Trade",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-international-trade.html#coding-frequency-and-tools",
    "href": "departments/department-for-international-trade.html#coding-frequency-and-tools",
    "title": "Department summary: Department for International Trade",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    28.4% \n  \n  \n    Rarely \n    13.6% \n  \n  \n    Sometimes \n    13.6% \n  \n  \n    Regularly \n    22.7% \n  \n  \n    All the time \n    21.6% \n  \n\n\n\n Sample size = 88\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    65.5% \n    34.5% \n  \n  \n    Data cleaning \n    75.8% \n    24.2% \n  \n  \n    Data linking \n    66.7% \n    33.3% \n  \n  \n    Data transfer / migration \n    51.4% \n    48.6% \n  \n  \n    Data visualisation \n    57.9% \n    42.1% \n  \n  \n    Machine learning \n    71.4% \n    28.6% \n  \n  \n    Modelling \n    65.8% \n    34.2% \n  \n  \n    Quality assurance \n    44% \n    56% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.8% \n    71.6% \n    21.6% \n  \n  \n    Java / Scala \n    6.8% \n    71.6% \n    21.6% \n  \n  \n    Javascript / Typescript \n    8% \n    71.6% \n    20.5% \n  \n  \n    Matlab \n    2.3% \n    71.6% \n    26.1% \n  \n  \n    Python \n    59.1% \n    33% \n    8% \n  \n  \n    R \n    90.9% \n    4.5% \n    4.5% \n  \n  \n    SAS \n    11.4% \n    68.2% \n    20.5% \n  \n  \n    SPSS \n    20.5% \n    58% \n    21.6% \n  \n  \n    SQL \n    55.7% \n    31.8% \n    12.5% \n  \n  \n    Stata \n    29.5% \n    52.3% \n    18.2% \n  \n  \n    VBA \n    26.1% \n    60.2% \n    13.6% \n  \n\n\n\n Sample size = 88\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4.5% \n    10.2% \n    85.2% \n  \n  \n    Java / Scala \n    3.4% \n    11.4% \n    85.2% \n  \n  \n    Javascript / Typescript \n    2.3% \n    11.4% \n    86.4% \n  \n  \n    Matlab \n    14.8% \n    10.2% \n    75% \n  \n  \n    Python \n    35.2% \n    9.1% \n    55.7% \n  \n  \n    R \n    65.9% \n    4.5% \n    29.5% \n  \n  \n    SAS \n    8% \n    11.4% \n    80.7% \n  \n  \n    SPSS \n    29.5% \n    9.1% \n    61.4% \n  \n  \n    SQL \n    35.2% \n    8% \n    56.8% \n  \n  \n    Stata \n    25% \n    8% \n    67% \n  \n  \n    VBA \n    8% \n    8% \n    84.1% \n  \n\n\n\n Sample size = 88\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    52.3% \n  \n  \n    No \n    5.7% \n  \n  \n    I don't know \n    42% \n  \n\n\n\n Sample size = 88\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    46.6% \n  \n  \n    No \n    43.2% \n  \n  \n    I don't know \n    10.2% \n  \n\n\n\n Sample size = 88"
  },
  {
    "objectID": "departments/department-for-international-trade.html#coding-capability",
    "href": "departments/department-for-international-trade.html#coding-capability",
    "title": "Department summary: Department for International Trade",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    6.8% \n  \n  \n    Slightly worse \n    15.3% \n  \n  \n    No change \n    25.4% \n  \n  \n    Slightly better \n    32.2% \n  \n  \n    Significantly better \n    20.3% \n  \n\n\n\n Sample size = 59\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    26% \n  \n  \n    In education \n    44.2% \n  \n  \n    In private sector employment \n    1.3% \n  \n  \n    In public sector employment \n    22.1% \n  \n  \n    Self-taught \n    5.2% \n  \n  \n    Other \n    1.3% \n  \n\n\n\n Sample size = 77"
  },
  {
    "objectID": "departments/department-for-international-trade.html#coding-practices",
    "href": "departments/department-for-international-trade.html#coding-practices",
    "title": "Department summary: Department for International Trade",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    22.2% \n    22.2% \n    14.3% \n    19% \n    17.5% \n    4.8% \n  \n  \n    Automated data quality assurance \n    7.9% \n    34.9% \n    19% \n    20.6% \n    12.7% \n    4.8% \n  \n  \n    Code review \n    4.8% \n    14.3% \n    6.3% \n    25.4% \n    34.9% \n    14.3% \n  \n  \n    Coding guidelines / Style guides \n    12.7% \n    17.5% \n    14.3% \n    11.1% \n    36.5% \n    7.9% \n  \n  \n    Functions \n    7.9% \n    11.1% \n    7.9% \n    19% \n    27% \n    27% \n  \n  \n    Open source own code \n    31.7% \n    36.5% \n    11.1% \n    11.1% \n    7.9% \n    1.6% \n  \n  \n    Packaging code \n    22.2% \n    49.2% \n    11.1% \n    9.5% \n    3.2% \n    4.8% \n  \n  \n    Standard directory structure \n    31.7% \n    15.9% \n    14.3% \n    11.1% \n    20.6% \n    6.3% \n  \n  \n    Unit testing \n    39.7% \n    15.9% \n    12.7% \n    15.9% \n    3.2% \n    12.7% \n  \n  \n    Use open source software \n    19% \n    9.5% \n    9.5% \n    11.1% \n    25.4% \n    25.4% \n  \n  \n    Version control \n    15.9% \n    31.7% \n    6.3% \n    11.1% \n    20.6% \n    14.3% \n  \n\n\n\n Sample size = 63\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    25.4% \n    33.3% \n    11.1% \n    17.5% \n    7.9% \n    4.8% \n  \n  \n    Code comments \n    7.9% \n    9.5% \n    4.8% \n    6.3% \n    17.5% \n    54% \n  \n  \n    Data or assumptions registers \n    11.1% \n    30.2% \n    4.8% \n    11.1% \n    30.2% \n    12.7% \n  \n  \n    Desk notes \n    30.2% \n    31.7% \n    12.7% \n    14.3% \n    11.1% \n    0% \n  \n  \n    Documentation for each function or class \n    19% \n    34.9% \n    7.9% \n    9.5% \n    17.5% \n    11.1% \n  \n  \n    Flow charts \n    15.9% \n    41.3% \n    12.7% \n    17.5% \n    9.5% \n    3.2% \n  \n  \n    README files \n    14.3% \n    36.5% \n    7.9% \n    14.3% \n    14.3% \n    12.7% \n  \n\n\n\n Sample size = 63\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    15.9% \n  \n  \n    No \n    31.7% \n  \n  \n    I don't know what dependency management is \n    52.4% \n  \n\n\n\n Sample size = 63\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    11.1% \n  \n  \n    No \n    39.7% \n  \n  \n    I don't know what continuous integration is \n    49.2% \n  \n\n\n\n Sample size = 63\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    1.6% \n  \n  \n    No \n    39.7% \n  \n  \n    I don't know what reproducible workflows are \n    58.7% \n  \n\n\n\n Sample size = 63"
  },
  {
    "objectID": "departments/department-for-international-trade.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-international-trade.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for International Trade",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    16.3% \n  \n  \n    I don't know what a RAP champion is \n    16.3% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    19.8% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    47.7% \n  \n\n\n\n Sample size = 86\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    28.4% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    51.4% \n  \n  \n    I have read the RAP strategy \n    20.3% \n  \n\n\n\n Sample size = 74\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    25.7% \n    21.6% \n    21.6% \n    21.6% \n    9.5% \n  \n  \n    I feel confident implementing RAP in my work \n    21.6% \n    17.6% \n    24.3% \n    21.6% \n    14.9% \n  \n  \n    I feel supported to implement RAP in my work \n    10.8% \n    16.2% \n    31.1% \n    29.7% \n    12.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    10.8% \n    17.6% \n    20.3% \n    33.8% \n    17.6% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    12.2% \n    12.2% \n    29.7% \n    31.1% \n    14.9% \n  \n  \n    I think it is important to implement RAP in my work \n    5.4% \n    2.7% \n    39.2% \n    29.7% \n    23% \n  \n  \n    I understand what the key components of the RAP methodology are \n    18.9% \n    23% \n    23% \n    23% \n    12.2% \n  \n\n\n\n Sample size = 74"
  },
  {
    "objectID": "departments/department-for-international-trade.html#rap-scores",
    "href": "departments/department-for-international-trade.html#rap-scores",
    "title": "Department summary: Department for International Trade",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    50.8% \n  \n  \n    Peer review \n    Basic \n    49.2% \n  \n  \n    Version control \n    Basic \n    34.9% \n  \n  \n    Documentation \n    Basic \n    25.4% \n  \n  \n    AQUA book guidance \n    Basic \n    22.2% \n  \n  \n    Team open source code \n    Basic \n    9.5% \n  \n  \n    Functions \n    Advanced \n    54% \n  \n  \n    Follow code style guidelines \n    Advanced \n    44.4% \n  \n  \n    Function documentation \n    Advanced \n    28.6% \n  \n  \n    Unit testing \n    Advanced \n    15.9% \n  \n  \n    Dependency management \n    Advanced \n    15.9% \n  \n  \n    Continuous integration \n    Advanced \n    11.1% \n  \n  \n    Code packages \n    Advanced \n    7.9% \n  \n\n\n\n Sample size = 63\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.2% \n  \n  \n    1 \n    23.8% \n  \n  \n    2 \n    20.6% \n  \n  \n    3 \n    17.5% \n  \n  \n    4 \n    7.9% \n  \n  \n    5 \n    4.8% \n  \n  \n    6 \n    3.2% \n  \n\n\n\n Sample size = 63\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    31.7% \n  \n  \n    1 \n    22.2% \n  \n  \n    2 \n    15.9% \n  \n  \n    3 \n    11.1% \n  \n  \n    4 \n    7.9% \n  \n  \n    5 \n    7.9% \n  \n  \n    6 \n    3.2% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 63"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#how-to-use-this-research",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#how-to-use-this-research",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#coding-frequency-and-tools",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    14.3% \n  \n  \n    Rarely \n    17.9% \n  \n  \n    Sometimes \n    17.9% \n  \n  \n    Regularly \n    25% \n  \n  \n    All the time \n    25% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    85.2% \n    14.8% \n  \n  \n    Data cleaning \n    79.2% \n    20.8% \n  \n  \n    Data linking \n    88.2% \n    11.8% \n  \n  \n    Data transfer / migration \n    72.7% \n    27.3% \n  \n  \n    Data visualisation \n    83.3% \n    16.7% \n  \n  \n    Machine learning \n    75% \n    25% \n  \n  \n    Modelling \n    75% \n    25% \n  \n  \n    Quality assurance \n    71.4% \n    28.6% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    75% \n    25% \n  \n  \n    Java / Scala \n    3.6% \n    75% \n    21.4% \n  \n  \n    Javascript / Typescript \n    14.3% \n    71.4% \n    14.3% \n  \n  \n    Matlab \n    0% \n    53.6% \n    46.4% \n  \n  \n    Python \n    89.3% \n    7.1% \n    3.6% \n  \n  \n    R \n    96.4% \n    0% \n    3.6% \n  \n  \n    SAS \n    17.9% \n    57.1% \n    25% \n  \n  \n    SPSS \n    64.3% \n    25% \n    10.7% \n  \n  \n    SQL \n    78.6% \n    14.3% \n    7.1% \n  \n  \n    Stata \n    46.4% \n    39.3% \n    14.3% \n  \n  \n    VBA \n    50% \n    39.3% \n    10.7% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.6% \n    7.1% \n    89.3% \n  \n  \n    Java / Scala \n    0% \n    7.1% \n    92.9% \n  \n  \n    Javascript / Typescript \n    7.1% \n    10.7% \n    82.1% \n  \n  \n    Matlab \n    25% \n    7.1% \n    67.9% \n  \n  \n    Python \n    39.3% \n    7.1% \n    53.6% \n  \n  \n    R \n    82.1% \n    3.6% \n    14.3% \n  \n  \n    SAS \n    17.9% \n    7.1% \n    75% \n  \n  \n    SPSS \n    42.9% \n    3.6% \n    53.6% \n  \n  \n    SQL \n    57.1% \n    3.6% \n    39.3% \n  \n  \n    Stata \n    25% \n    7.1% \n    67.9% \n  \n  \n    VBA \n    32.1% \n    10.7% \n    57.1% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    75% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    25% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    46.4% \n  \n  \n    No \n    50% \n  \n  \n    I don't know \n    3.6% \n  \n\n\n\n Sample size = 28"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#coding-capability",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#coding-capability",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    13.6% \n  \n  \n    Slightly worse \n    9.1% \n  \n  \n    No change \n    4.5% \n  \n  \n    Slightly better \n    59.1% \n  \n  \n    Significantly better \n    13.6% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    25.9% \n  \n  \n    In education \n    51.9% \n  \n  \n    In private sector employment \n    3.7% \n  \n  \n    In public sector employment \n    11.1% \n  \n  \n    Self-taught \n    7.4% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 27"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#coding-practices",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#coding-practices",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    37.5% \n    16.7% \n    8.3% \n    16.7% \n    16.7% \n    4.2% \n  \n  \n    Automated data quality assurance \n    0% \n    25% \n    8.3% \n    25% \n    33.3% \n    8.3% \n  \n  \n    Code review \n    0% \n    4.2% \n    20.8% \n    41.7% \n    12.5% \n    20.8% \n  \n  \n    Coding guidelines / Style guides \n    8.3% \n    8.3% \n    16.7% \n    29.2% \n    29.2% \n    8.3% \n  \n  \n    Functions \n    0% \n    8.3% \n    12.5% \n    25% \n    33.3% \n    20.8% \n  \n  \n    Open source own code \n    20.8% \n    41.7% \n    8.3% \n    8.3% \n    12.5% \n    8.3% \n  \n  \n    Packaging code \n    8.3% \n    54.2% \n    8.3% \n    16.7% \n    4.2% \n    8.3% \n  \n  \n    Standard directory structure \n    16.7% \n    16.7% \n    12.5% \n    16.7% \n    25% \n    12.5% \n  \n  \n    Unit testing \n    37.5% \n    8.3% \n    8.3% \n    16.7% \n    20.8% \n    8.3% \n  \n  \n    Use open source software \n    12.5% \n    16.7% \n    0% \n    8.3% \n    25% \n    37.5% \n  \n  \n    Version control \n    4.2% \n    37.5% \n    8.3% \n    12.5% \n    20.8% \n    16.7% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    16.7% \n    20.8% \n    12.5% \n    33.3% \n    16.7% \n    0% \n  \n  \n    Code comments \n    4.2% \n    8.3% \n    0% \n    12.5% \n    25% \n    50% \n  \n  \n    Data or assumptions registers \n    8.3% \n    25% \n    16.7% \n    20.8% \n    20.8% \n    8.3% \n  \n  \n    Desk notes \n    12.5% \n    20.8% \n    8.3% \n    29.2% \n    25% \n    4.2% \n  \n  \n    Documentation for each function or class \n    8.3% \n    25% \n    16.7% \n    25% \n    20.8% \n    4.2% \n  \n  \n    Flow charts \n    4.2% \n    29.2% \n    37.5% \n    25% \n    4.2% \n    0% \n  \n  \n    README files \n    8.3% \n    33.3% \n    16.7% \n    16.7% \n    16.7% \n    8.3% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    25% \n  \n  \n    No \n    20.8% \n  \n  \n    I don't know what dependency management is \n    54.2% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    16.7% \n  \n  \n    No \n    33.3% \n  \n  \n    I don't know what continuous integration is \n    50% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    50% \n  \n  \n    I don't know what reproducible workflows are \n    50% \n  \n\n\n\n Sample size = 24"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    14.8% \n  \n  \n    I don't know what a RAP champion is \n    7.4% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    44.4% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    33.3% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    25% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    45.8% \n  \n  \n    I have read the RAP strategy \n    29.2% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    16.7% \n    12.5% \n    25% \n    29.2% \n    16.7% \n  \n  \n    I feel confident implementing RAP in my work \n    12.5% \n    16.7% \n    20.8% \n    29.2% \n    20.8% \n  \n  \n    I feel supported to implement RAP in my work \n    8.3% \n    16.7% \n    25% \n    41.7% \n    8.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    8.3% \n    16.7% \n    8.3% \n    62.5% \n    4.2% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    8.3% \n    8.3% \n    29.2% \n    37.5% \n    16.7% \n  \n  \n    I think it is important to implement RAP in my work \n    4.2% \n    8.3% \n    12.5% \n    37.5% \n    37.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.3% \n    16.7% \n    8.3% \n    50% \n    16.7% \n  \n\n\n\n Sample size = 24"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing-and-communities.html#rap-scores",
    "href": "departments/department-for-levelling-up-housing-and-communities.html#rap-scores",
    "title": "Department summary: Department for Levelling Up, Housing and Communities",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    62.5% \n  \n  \n    Version control \n    Basic \n    37.5% \n  \n  \n    Peer review \n    Basic \n    33.3% \n  \n  \n    Documentation \n    Basic \n    25% \n  \n  \n    Team open source code \n    Basic \n    20.8% \n  \n  \n    AQUA book guidance \n    Basic \n    20.8% \n  \n  \n    Functions \n    Advanced \n    54.2% \n  \n  \n    Follow code style guidelines \n    Advanced \n    37.5% \n  \n  \n    Unit testing \n    Advanced \n    29.2% \n  \n  \n    Function documentation \n    Advanced \n    25% \n  \n  \n    Dependency management \n    Advanced \n    25% \n  \n  \n    Continuous integration \n    Advanced \n    16.7% \n  \n  \n    Code packages \n    Advanced \n    12.5% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    29.2% \n  \n  \n    1 \n    29.2% \n  \n  \n    2 \n    8.3% \n  \n  \n    3 \n    0% \n  \n  \n    4 \n    16.7% \n  \n  \n    5 \n    12.5% \n  \n  \n    6 \n    4.2% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    25% \n  \n  \n    1 \n    16.7% \n  \n  \n    2 \n    33.3% \n  \n  \n    3 \n    8.3% \n  \n  \n    4 \n    4.2% \n  \n  \n    5 \n    4.2% \n  \n  \n    6 \n    4.2% \n  \n  \n    7 \n    4.2% \n  \n\n\n\n Sample size = 24"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/department-for-transport-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-transport-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    7.5% \n  \n  \n    Rarely \n    12.5% \n  \n  \n    Sometimes \n    15% \n  \n  \n    Regularly \n    40% \n  \n  \n    All the time \n    25% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    84.6% \n    15.4% \n  \n  \n    Data cleaning \n    94.3% \n    5.7% \n  \n  \n    Data linking \n    86.7% \n    13.3% \n  \n  \n    Data transfer / migration \n    95% \n    5% \n  \n  \n    Data visualisation \n    76.9% \n    23.1% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    73.7% \n    26.3% \n  \n  \n    Quality assurance \n    70% \n    30% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5% \n    57.5% \n    37.5% \n  \n  \n    Java / Scala \n    7.5% \n    55% \n    37.5% \n  \n  \n    Javascript / Typescript \n    12.5% \n    50% \n    37.5% \n  \n  \n    Matlab \n    0% \n    55% \n    45% \n  \n  \n    Python \n    75% \n    20% \n    5% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SAS \n    7.5% \n    47.5% \n    45% \n  \n  \n    SPSS \n    10% \n    57.5% \n    32.5% \n  \n  \n    SQL \n    77.5% \n    20% \n    2.5% \n  \n  \n    Stata \n    15% \n    52.5% \n    32.5% \n  \n  \n    VBA \n    70% \n    22.5% \n    7.5% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    17.5% \n    10% \n    72.5% \n  \n  \n    Java / Scala \n    5% \n    7.5% \n    87.5% \n  \n  \n    Javascript / Typescript \n    7.5% \n    12.5% \n    80% \n  \n  \n    Matlab \n    10% \n    7.5% \n    82.5% \n  \n  \n    Python \n    50% \n    5% \n    45% \n  \n  \n    R \n    80% \n    2.5% \n    17.5% \n  \n  \n    SAS \n    20% \n    10% \n    70% \n  \n  \n    SPSS \n    30% \n    7.5% \n    62.5% \n  \n  \n    SQL \n    75% \n    0% \n    25% \n  \n  \n    Stata \n    15% \n    10% \n    75% \n  \n  \n    VBA \n    45% \n    10% \n    45% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    95% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    5% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    62.5% \n  \n  \n    No \n    30% \n  \n  \n    I don't know \n    7.5% \n  \n\n\n\n Sample size = 40"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#coding-capability",
    "href": "departments/department-for-transport-excl-agencies-.html#coding-capability",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.3% \n  \n  \n    Slightly worse \n    6.7% \n  \n  \n    No change \n    20% \n  \n  \n    Slightly better \n    40% \n  \n  \n    Significantly better \n    30% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    26.3% \n  \n  \n    In education \n    44.7% \n  \n  \n    In private sector employment \n    2.6% \n  \n  \n    In public sector employment \n    10.5% \n  \n  \n    Self-taught \n    15.8% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 38"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-transport-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    21.6% \n    16.2% \n    10.8% \n    13.5% \n    32.4% \n    5.4% \n  \n  \n    Automated data quality assurance \n    0% \n    16.2% \n    27% \n    29.7% \n    21.6% \n    5.4% \n  \n  \n    Code review \n    0% \n    5.4% \n    8.1% \n    35.1% \n    24.3% \n    27% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    13.5% \n    18.9% \n    18.9% \n    29.7% \n    18.9% \n  \n  \n    Functions \n    10.8% \n    0% \n    13.5% \n    24.3% \n    21.6% \n    29.7% \n  \n  \n    Open source own code \n    24.3% \n    37.8% \n    18.9% \n    10.8% \n    5.4% \n    2.7% \n  \n  \n    Packaging code \n    13.5% \n    51.4% \n    13.5% \n    16.2% \n    0% \n    5.4% \n  \n  \n    Standard directory structure \n    18.9% \n    13.5% \n    21.6% \n    16.2% \n    13.5% \n    16.2% \n  \n  \n    Unit testing \n    24.3% \n    24.3% \n    21.6% \n    16.2% \n    8.1% \n    5.4% \n  \n  \n    Use open source software \n    10.8% \n    10.8% \n    2.7% \n    13.5% \n    29.7% \n    32.4% \n  \n  \n    Version control \n    2.7% \n    18.9% \n    18.9% \n    16.2% \n    18.9% \n    24.3% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    13.5% \n    27% \n    10.8% \n    27% \n    18.9% \n    2.7% \n  \n  \n    Code comments \n    0% \n    0% \n    5.4% \n    2.7% \n    37.8% \n    54.1% \n  \n  \n    Data or assumptions registers \n    13.5% \n    24.3% \n    10.8% \n    13.5% \n    24.3% \n    13.5% \n  \n  \n    Desk notes \n    16.2% \n    8.1% \n    13.5% \n    24.3% \n    32.4% \n    5.4% \n  \n  \n    Documentation for each function or class \n    10.8% \n    18.9% \n    21.6% \n    21.6% \n    10.8% \n    16.2% \n  \n  \n    Flow charts \n    2.7% \n    40.5% \n    18.9% \n    27% \n    8.1% \n    2.7% \n  \n  \n    README files \n    5.4% \n    18.9% \n    13.5% \n    18.9% \n    27% \n    16.2% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    37.8% \n  \n  \n    No \n    35.1% \n  \n  \n    I don't know what dependency management is \n    27% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    13.5% \n  \n  \n    No \n    59.5% \n  \n  \n    I don't know what continuous integration is \n    27% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    2.7% \n  \n  \n    No \n    59.5% \n  \n  \n    I don't know what reproducible workflows are \n    37.8% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-transport-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    12.8% \n  \n  \n    I don't know what a RAP champion is \n    17.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    33.3% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    2.6% \n  \n  \n    I know who the RAP champion in my department is \n    33.3% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    42.9% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    42.9% \n  \n  \n    I have read the RAP strategy \n    14.3% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    11.4% \n    25.7% \n    28.6% \n    20% \n    14.3% \n  \n  \n    I feel confident implementing RAP in my work \n    8.6% \n    20% \n    17.1% \n    40% \n    14.3% \n  \n  \n    I feel supported to implement RAP in my work \n    5.7% \n    8.6% \n    20% \n    51.4% \n    14.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    2.9% \n    22.9% \n    14.3% \n    54.3% \n    5.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.7% \n    14.3% \n    42.9% \n    22.9% \n    14.3% \n  \n  \n    I think it is important to implement RAP in my work \n    5.7% \n    0% \n    17.1% \n    48.6% \n    28.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.7% \n    25.7% \n    17.1% \n    40% \n    11.4% \n  \n\n\n\n Sample size = 35"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-transport-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    62.2% \n  \n  \n    Peer review \n    Basic \n    51.4% \n  \n  \n    Version control \n    Basic \n    43.2% \n  \n  \n    Documentation \n    Basic \n    43.2% \n  \n  \n    AQUA book guidance \n    Basic \n    37.8% \n  \n  \n    Team open source code \n    Basic \n    8.1% \n  \n  \n    Functions \n    Advanced \n    51.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    48.6% \n  \n  \n    Dependency management \n    Advanced \n    37.8% \n  \n  \n    Function documentation \n    Advanced \n    27% \n  \n  \n    Unit testing \n    Advanced \n    13.5% \n  \n  \n    Continuous integration \n    Advanced \n    13.5% \n  \n  \n    Code packages \n    Advanced \n    5.4% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    8.1% \n  \n  \n    1 \n    32.4% \n  \n  \n    2 \n    16.2% \n  \n  \n    3 \n    13.5% \n  \n  \n    4 \n    10.8% \n  \n  \n    5 \n    16.2% \n  \n  \n    6 \n    2.7% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    29.7% \n  \n  \n    1 \n    18.9% \n  \n  \n    2 \n    13.5% \n  \n  \n    3 \n    13.5% \n  \n  \n    4 \n    16.2% \n  \n  \n    5 \n    5.4% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    2.7% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#how-to-use-this-research",
    "href": "departments/department-for-work-and-pensions.html#how-to-use-this-research",
    "title": "Department summary: Department for Work and Pensions",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#coding-frequency-and-tools",
    "href": "departments/department-for-work-and-pensions.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Work and Pensions",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0% \n  \n  \n    Rarely \n    15.2% \n  \n  \n    Sometimes \n    24.2% \n  \n  \n    Regularly \n    30.3% \n  \n  \n    All the time \n    30.3% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    96.7% \n    3.3% \n  \n  \n    Data cleaning \n    100% \n    0% \n  \n  \n    Data linking \n    100% \n    0% \n  \n  \n    Data transfer / migration \n    77.8% \n    22.2% \n  \n  \n    Data visualisation \n    40.6% \n    59.4% \n  \n  \n    Machine learning \n    0% \n    0% \n  \n  \n    Modelling \n    69.2% \n    30.8% \n  \n  \n    Quality assurance \n    62.5% \n    37.5% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    30.3% \n    69.7% \n  \n  \n    Java / Scala \n    15.2% \n    27.3% \n    57.6% \n  \n  \n    Javascript / Typescript \n    6.1% \n    33.3% \n    60.6% \n  \n  \n    Matlab \n    0% \n    24.2% \n    75.8% \n  \n  \n    Python \n    27.3% \n    18.2% \n    54.5% \n  \n  \n    R \n    42.4% \n    15.2% \n    42.4% \n  \n  \n    SAS \n    97% \n    0% \n    3% \n  \n  \n    SPSS \n    24.2% \n    33.3% \n    42.4% \n  \n  \n    SQL \n    63.6% \n    24.2% \n    12.1% \n  \n  \n    Stata \n    21.2% \n    36.4% \n    42.4% \n  \n  \n    VBA \n    60.6% \n    15.2% \n    24.2% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    15.2% \n    0% \n    84.8% \n  \n  \n    Java / Scala \n    6.1% \n    3% \n    90.9% \n  \n  \n    Javascript / Typescript \n    6.1% \n    0% \n    93.9% \n  \n  \n    Matlab \n    36.4% \n    0% \n    63.6% \n  \n  \n    Python \n    36.4% \n    0% \n    63.6% \n  \n  \n    R \n    39.4% \n    0% \n    60.6% \n  \n  \n    SAS \n    97% \n    0% \n    3% \n  \n  \n    SPSS \n    30.3% \n    6.1% \n    63.6% \n  \n  \n    SQL \n    72.7% \n    3% \n    24.2% \n  \n  \n    Stata \n    6.1% \n    0% \n    93.9% \n  \n  \n    VBA \n    36.4% \n    0% \n    63.6% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    27.3% \n  \n  \n    No \n    42.4% \n  \n  \n    I don't know \n    30.3% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    36.4% \n  \n  \n    No \n    63.6% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 33"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#coding-capability",
    "href": "departments/department-for-work-and-pensions.html#coding-capability",
    "title": "Department summary: Department for Work and Pensions",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    10.7% \n  \n  \n    Slightly worse \n    21.4% \n  \n  \n    No change \n    14.3% \n  \n  \n    Slightly better \n    39.3% \n  \n  \n    Significantly better \n    14.3% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    15.2% \n  \n  \n    In education \n    42.4% \n  \n  \n    In private sector employment \n    6.1% \n  \n  \n    In public sector employment \n    18.2% \n  \n  \n    Self-taught \n    18.2% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 33"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#coding-practices",
    "href": "departments/department-for-work-and-pensions.html#coding-practices",
    "title": "Department summary: Department for Work and Pensions",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    9.1% \n    9.1% \n    12.1% \n    39.4% \n    24.2% \n    6.1% \n  \n  \n    Automated data quality assurance \n    6.1% \n    18.2% \n    9.1% \n    42.4% \n    18.2% \n    6.1% \n  \n  \n    Code review \n    0% \n    3% \n    6.1% \n    18.2% \n    42.4% \n    30.3% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    9.1% \n    0% \n    36.4% \n    39.4% \n    15.2% \n  \n  \n    Functions \n    6.1% \n    12.1% \n    9.1% \n    33.3% \n    33.3% \n    6.1% \n  \n  \n    Open source own code \n    3% \n    87.9% \n    3% \n    3% \n    0% \n    3% \n  \n  \n    Packaging code \n    21.2% \n    48.5% \n    3% \n    15.2% \n    6.1% \n    6.1% \n  \n  \n    Standard directory structure \n    27.3% \n    18.2% \n    3% \n    27.3% \n    12.1% \n    12.1% \n  \n  \n    Unit testing \n    33.3% \n    18.2% \n    18.2% \n    6.1% \n    9.1% \n    15.2% \n  \n  \n    Use open source software \n    0% \n    72.7% \n    3% \n    12.1% \n    6.1% \n    6.1% \n  \n  \n    Version control \n    6.1% \n    72.7% \n    6.1% \n    6.1% \n    0% \n    9.1% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    15.2% \n    18.2% \n    6.1% \n    27.3% \n    24.2% \n    9.1% \n  \n  \n    Code comments \n    3% \n    3% \n    0% \n    9.1% \n    33.3% \n    51.5% \n  \n  \n    Data or assumptions registers \n    15.2% \n    27.3% \n    9.1% \n    12.1% \n    30.3% \n    6.1% \n  \n  \n    Desk notes \n    42.4% \n    12.1% \n    15.2% \n    6.1% \n    21.2% \n    3% \n  \n  \n    Documentation for each function or class \n    15.2% \n    21.2% \n    15.2% \n    24.2% \n    18.2% \n    6.1% \n  \n  \n    Flow charts \n    9.1% \n    36.4% \n    21.2% \n    24.2% \n    6.1% \n    3% \n  \n  \n    README files \n    6.1% \n    24.2% \n    12.1% \n    33.3% \n    15.2% \n    9.1% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    6.1% \n  \n  \n    No \n    51.5% \n  \n  \n    I don't know what dependency management is \n    42.4% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    3% \n  \n  \n    No \n    51.5% \n  \n  \n    I don't know what continuous integration is \n    45.5% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    57.6% \n  \n  \n    I don't know what reproducible workflows are \n    42.4% \n  \n\n\n\n Sample size = 33"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#rap-knowledge-and-opinions",
    "href": "departments/department-for-work-and-pensions.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department for Work and Pensions",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    6.1% \n  \n  \n    I don't know what a RAP champion is \n    18.2% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    57.6% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    18.2% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    19.4% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    45.2% \n  \n  \n    I have read the RAP strategy \n    35.5% \n  \n\n\n\n Sample size = 31\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    41.9% \n    25.8% \n    19.4% \n    6.5% \n    6.5% \n  \n  \n    I feel confident implementing RAP in my work \n    12.9% \n    45.2% \n    16.1% \n    22.6% \n    3.2% \n  \n  \n    I feel supported to implement RAP in my work \n    22.6% \n    19.4% \n    32.3% \n    22.6% \n    3.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    12.9% \n    38.7% \n    12.9% \n    29% \n    6.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    25.8% \n    16.1% \n    38.7% \n    9.7% \n    9.7% \n  \n  \n    I think it is important to implement RAP in my work \n    6.5% \n    9.7% \n    32.3% \n    29% \n    22.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    9.7% \n    29% \n    9.7% \n    41.9% \n    9.7% \n  \n\n\n\n Sample size = 31"
  },
  {
    "objectID": "departments/department-for-work-and-pensions.html#rap-scores",
    "href": "departments/department-for-work-and-pensions.html#rap-scores",
    "title": "Department summary: Department for Work and Pensions",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Peer review \n    Basic \n    72.7% \n  \n  \n    AQUA book guidance \n    Basic \n    30.3% \n  \n  \n    Documentation \n    Basic \n    24.2% \n  \n  \n    Use open source software \n    Basic \n    12.1% \n  \n  \n    Version control \n    Basic \n    9.1% \n  \n  \n    Team open source code \n    Basic \n    3% \n  \n  \n    Follow code style guidelines \n    Advanced \n    54.5% \n  \n  \n    Functions \n    Advanced \n    39.4% \n  \n  \n    Unit testing \n    Advanced \n    24.2% \n  \n  \n    Function documentation \n    Advanced \n    24.2% \n  \n  \n    Code packages \n    Advanced \n    12.1% \n  \n  \n    Dependency management \n    Advanced \n    6.1% \n  \n  \n    Continuous integration \n    Advanced \n    3% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    18.2% \n  \n  \n    1 \n    39.4% \n  \n  \n    2 \n    24.2% \n  \n  \n    3 \n    12.1% \n  \n  \n    4 \n    3% \n  \n  \n    5 \n    3% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    24.2% \n  \n  \n    1 \n    30.3% \n  \n  \n    2 \n    27.3% \n  \n  \n    3 \n    3% \n  \n  \n    4 \n    6.1% \n  \n  \n    5 \n    9.1% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 33"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    20% \n  \n  \n    Rarely \n    13.3% \n  \n  \n    Sometimes \n    20% \n  \n  \n    Regularly \n    21.3% \n  \n  \n    All the time \n    25.3% \n  \n\n\n\n Sample size = 75\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    76.1% \n    23.9% \n  \n  \n    Data cleaning \n    78% \n    22% \n  \n  \n    Data linking \n    82.4% \n    17.6% \n  \n  \n    Data transfer / migration \n    71% \n    29% \n  \n  \n    Data visualisation \n    67.2% \n    32.8% \n  \n  \n    Machine learning \n    90% \n    10% \n  \n  \n    Modelling \n    71.1% \n    28.9% \n  \n  \n    Quality assurance \n    48.4% \n    51.6% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4% \n    62.7% \n    33.3% \n  \n  \n    Java / Scala \n    4% \n    65.3% \n    30.7% \n  \n  \n    Javascript / Typescript \n    5.3% \n    65.3% \n    29.3% \n  \n  \n    Matlab \n    1.3% \n    60% \n    38.7% \n  \n  \n    Python \n    52% \n    33.3% \n    14.7% \n  \n  \n    R \n    93.3% \n    6.7% \n    0% \n  \n  \n    SAS \n    13.3% \n    62.7% \n    24% \n  \n  \n    SPSS \n    21.3% \n    56% \n    22.7% \n  \n  \n    SQL \n    56% \n    32% \n    12% \n  \n  \n    Stata \n    40% \n    38.7% \n    21.3% \n  \n  \n    VBA \n    46.7% \n    37.3% \n    16% \n  \n\n\n\n Sample size = 75\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    8% \n    4% \n    88% \n  \n  \n    Java / Scala \n    6.7% \n    2.7% \n    90.7% \n  \n  \n    Javascript / Typescript \n    8% \n    2.7% \n    89.3% \n  \n  \n    Matlab \n    20% \n    4% \n    76% \n  \n  \n    Python \n    28% \n    1.3% \n    70.7% \n  \n  \n    R \n    73.3% \n    0% \n    26.7% \n  \n  \n    SAS \n    21.3% \n    2.7% \n    76% \n  \n  \n    SPSS \n    29.3% \n    2.7% \n    68% \n  \n  \n    SQL \n    57.3% \n    1.3% \n    41.3% \n  \n  \n    Stata \n    25.3% \n    0% \n    74.7% \n  \n  \n    VBA \n    32% \n    2.7% \n    65.3% \n  \n\n\n\n Sample size = 75\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    72% \n  \n  \n    No \n    4% \n  \n  \n    I don't know \n    24% \n  \n\n\n\n Sample size = 75\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    54.7% \n  \n  \n    No \n    45.3% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 75"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-capability",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-capability",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    4.9% \n  \n  \n    Slightly worse \n    21.3% \n  \n  \n    No change \n    23% \n  \n  \n    Slightly better \n    23% \n  \n  \n    Significantly better \n    27.9% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    17.1% \n  \n  \n    In education \n    54.3% \n  \n  \n    In private sector employment \n    1.4% \n  \n  \n    In public sector employment \n    15.7% \n  \n  \n    Self-taught \n    8.6% \n  \n  \n    Other \n    2.9% \n  \n\n\n\n Sample size = 70"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-practices",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    21.7% \n    16.7% \n    6.7% \n    33.3% \n    16.7% \n    5% \n  \n  \n    Automated data quality assurance \n    3.3% \n    20% \n    28.3% \n    20% \n    18.3% \n    10% \n  \n  \n    Code review \n    1.7% \n    13.3% \n    3.3% \n    21.7% \n    36.7% \n    23.3% \n  \n  \n    Coding guidelines / Style guides \n    8.3% \n    15% \n    11.7% \n    33.3% \n    21.7% \n    10% \n  \n  \n    Functions \n    5% \n    13.3% \n    5% \n    26.7% \n    23.3% \n    26.7% \n  \n  \n    Open source own code \n    11.7% \n    46.7% \n    18.3% \n    15% \n    1.7% \n    6.7% \n  \n  \n    Packaging code \n    10% \n    51.7% \n    21.7% \n    6.7% \n    3.3% \n    6.7% \n  \n  \n    Standard directory structure \n    26.7% \n    20% \n    6.7% \n    21.7% \n    15% \n    10% \n  \n  \n    Unit testing \n    25% \n    31.7% \n    11.7% \n    16.7% \n    10% \n    5% \n  \n  \n    Use open source software \n    3.3% \n    15% \n    5% \n    16.7% \n    16.7% \n    43.3% \n  \n  \n    Version control \n    5% \n    25% \n    13.3% \n    20% \n    15% \n    21.7% \n  \n\n\n\n Sample size = 60\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    21.7% \n    25% \n    11.7% \n    15% \n    16.7% \n    10% \n  \n  \n    Code comments \n    3.3% \n    11.7% \n    0% \n    5% \n    23.3% \n    56.7% \n  \n  \n    Data or assumptions registers \n    16.7% \n    35% \n    20% \n    10% \n    10% \n    8.3% \n  \n  \n    Desk notes \n    25% \n    25% \n    11.7% \n    16.7% \n    18.3% \n    3.3% \n  \n  \n    Documentation for each function or class \n    11.7% \n    31.7% \n    8.3% \n    25% \n    11.7% \n    11.7% \n  \n  \n    Flow charts \n    10% \n    30% \n    23.3% \n    28.3% \n    6.7% \n    1.7% \n  \n  \n    README files \n    6.7% \n    28.3% \n    8.3% \n    30% \n    18.3% \n    8.3% \n  \n\n\n\n Sample size = 60\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    13.3% \n  \n  \n    No \n    40% \n  \n  \n    I don't know what dependency management is \n    46.7% \n  \n\n\n\n Sample size = 60\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15% \n  \n  \n    No \n    35% \n  \n  \n    I don't know what continuous integration is \n    50% \n  \n\n\n\n Sample size = 60\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    55% \n  \n  \n    I don't know what reproducible workflows are \n    45% \n  \n\n\n\n Sample size = 60"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    22.7% \n  \n  \n    I don't know what a RAP champion is \n    16% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    45.3% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    4% \n  \n  \n    I know who the RAP champion in my department is \n    12% \n  \n\n\n\n Sample size = 75\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    21.1% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    63.2% \n  \n  \n    I have read the RAP strategy \n    15.8% \n  \n\n\n\n Sample size = 58\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    15.5% \n    27.6% \n    19% \n    27.6% \n    10.3% \n  \n  \n    I feel confident implementing RAP in my work \n    10.3% \n    19% \n    24.1% \n    36.2% \n    10.3% \n  \n  \n    I feel supported to implement RAP in my work \n    8.6% \n    25.9% \n    25.9% \n    29.3% \n    10.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    6.9% \n    31% \n    25.9% \n    29.3% \n    6.9% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    8.6% \n    13.8% \n    31% \n    31% \n    15.5% \n  \n  \n    I think it is important to implement RAP in my work \n    6.9% \n    6.9% \n    13.8% \n    44.8% \n    27.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    3.4% \n    19% \n    22.4% \n    41.4% \n    13.8% \n  \n\n\n\n Sample size = 58"
  },
  {
    "objectID": "departments/department-of-health-and-social-care-excl-agencies-.html#rap-scores",
    "href": "departments/department-of-health-and-social-care-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department of Health and Social Care (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    60% \n  \n  \n    Peer review \n    Basic \n    60% \n  \n  \n    Version control \n    Basic \n    36.7% \n  \n  \n    Documentation \n    Basic \n    25% \n  \n  \n    AQUA book guidance \n    Basic \n    21.7% \n  \n  \n    Team open source code \n    Basic \n    8.3% \n  \n  \n    Functions \n    Advanced \n    50% \n  \n  \n    Follow code style guidelines \n    Advanced \n    31.7% \n  \n  \n    Function documentation \n    Advanced \n    23.3% \n  \n  \n    Unit testing \n    Advanced \n    15% \n  \n  \n    Continuous integration \n    Advanced \n    15% \n  \n  \n    Dependency management \n    Advanced \n    13.3% \n  \n  \n    Code packages \n    Advanced \n    10% \n  \n\n\n\n Sample size = 60\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    13.3% \n  \n  \n    1 \n    30% \n  \n  \n    2 \n    20% \n  \n  \n    3 \n    15% \n  \n  \n    4 \n    13.3% \n  \n  \n    5 \n    6.7% \n  \n  \n    6 \n    1.7% \n  \n\n\n\n Sample size = 60\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    36.7% \n  \n  \n    1 \n    20% \n  \n  \n    2 \n    15% \n  \n  \n    3 \n    16.7% \n  \n  \n    4 \n    3.3% \n  \n  \n    5 \n    5% \n  \n  \n    6 \n    3.3% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 60"
  },
  {
    "objectID": "departments/forestry-commission.html#how-to-use-this-research",
    "href": "departments/forestry-commission.html#how-to-use-this-research",
    "title": "Department summary: Forestry Commission",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/forestry-commission.html#coding-frequency-and-tools",
    "href": "departments/forestry-commission.html#coding-frequency-and-tools",
    "title": "Department summary: Forestry Commission",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.6% \n  \n  \n    Rarely \n    22.9% \n  \n  \n    Sometimes \n    17.1% \n  \n  \n    Regularly \n    31.4% \n  \n  \n    All the time \n    20% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    76.5% \n    23.5% \n  \n  \n    Data cleaning \n    66.7% \n    33.3% \n  \n  \n    Data linking \n    70.8% \n    29.2% \n  \n  \n    Data transfer / migration \n    48.1% \n    51.9% \n  \n  \n    Data visualisation \n    78.8% \n    21.2% \n  \n  \n    Machine learning \n    90% \n    10% \n  \n  \n    Modelling \n    88.9% \n    11.1% \n  \n  \n    Quality assurance \n    61.5% \n    38.5% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    20% \n    68.6% \n    11.4% \n  \n  \n    Java / Scala \n    11.4% \n    77.1% \n    11.4% \n  \n  \n    Javascript / Typescript \n    5.7% \n    82.9% \n    11.4% \n  \n  \n    Matlab \n    8.6% \n    60% \n    31.4% \n  \n  \n    Python \n    62.9% \n    31.4% \n    5.7% \n  \n  \n    R \n    88.6% \n    8.6% \n    2.9% \n  \n  \n    SAS \n    20% \n    68.6% \n    11.4% \n  \n  \n    SPSS \n    8.6% \n    77.1% \n    14.3% \n  \n  \n    SQL \n    34.3% \n    57.1% \n    8.6% \n  \n  \n    Stata \n    0% \n    80% \n    20% \n  \n  \n    VBA \n    17.1% \n    71.4% \n    11.4% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    11.4% \n    0% \n    88.6% \n  \n  \n    Java / Scala \n    2.9% \n    0% \n    97.1% \n  \n  \n    Javascript / Typescript \n    11.4% \n    0% \n    88.6% \n  \n  \n    Matlab \n    11.4% \n    2.9% \n    85.7% \n  \n  \n    Python \n    22.9% \n    0% \n    77.1% \n  \n  \n    R \n    68.6% \n    0% \n    31.4% \n  \n  \n    SAS \n    11.4% \n    0% \n    88.6% \n  \n  \n    SPSS \n    17.1% \n    0% \n    82.9% \n  \n  \n    SQL \n    34.3% \n    2.9% \n    62.9% \n  \n  \n    Stata \n    11.4% \n    2.9% \n    85.7% \n  \n  \n    VBA \n    17.1% \n    0% \n    82.9% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    48.6% \n  \n  \n    No \n    11.4% \n  \n  \n    I don't know \n    40% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    28.6% \n  \n  \n    No \n    71.4% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 35"
  },
  {
    "objectID": "departments/forestry-commission.html#coding-capability",
    "href": "departments/forestry-commission.html#coding-capability",
    "title": "Department summary: Forestry Commission",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    8.3% \n  \n  \n    Slightly worse \n    20.8% \n  \n  \n    No change \n    12.5% \n  \n  \n    Slightly better \n    37.5% \n  \n  \n    Significantly better \n    20.8% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    25% \n  \n  \n    In education \n    46.9% \n  \n  \n    In private sector employment \n    3.1% \n  \n  \n    In public sector employment \n    3.1% \n  \n  \n    Self-taught \n    18.8% \n  \n  \n    Other \n    3.1% \n  \n\n\n\n Sample size = 32"
  },
  {
    "objectID": "departments/forestry-commission.html#coding-practices",
    "href": "departments/forestry-commission.html#coding-practices",
    "title": "Department summary: Forestry Commission",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    71.9% \n    15.6% \n    3.1% \n    6.2% \n    3.1% \n    0% \n  \n  \n    Automated data quality assurance \n    12.5% \n    18.8% \n    12.5% \n    28.1% \n    25% \n    3.1% \n  \n  \n    Code review \n    0% \n    28.1% \n    15.6% \n    43.8% \n    12.5% \n    0% \n  \n  \n    Coding guidelines / Style guides \n    6.2% \n    28.1% \n    3.1% \n    25% \n    28.1% \n    9.4% \n  \n  \n    Functions \n    9.4% \n    18.8% \n    9.4% \n    25% \n    18.8% \n    18.8% \n  \n  \n    Open source own code \n    3.1% \n    46.9% \n    21.9% \n    18.8% \n    6.2% \n    3.1% \n  \n  \n    Packaging code \n    15.6% \n    50% \n    12.5% \n    0% \n    12.5% \n    9.4% \n  \n  \n    Standard directory structure \n    18.8% \n    28.1% \n    3.1% \n    28.1% \n    12.5% \n    9.4% \n  \n  \n    Unit testing \n    31.2% \n    25% \n    9.4% \n    18.8% \n    6.2% \n    9.4% \n  \n  \n    Use open source software \n    0% \n    9.4% \n    15.6% \n    12.5% \n    21.9% \n    40.6% \n  \n  \n    Version control \n    12.5% \n    40.6% \n    18.8% \n    6.2% \n    12.5% \n    9.4% \n  \n\n\n\n Sample size = 32\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    15.6% \n    50% \n    3.1% \n    21.9% \n    3.1% \n    6.2% \n  \n  \n    Code comments \n    0% \n    15.6% \n    3.1% \n    25% \n    12.5% \n    43.8% \n  \n  \n    Data or assumptions registers \n    25% \n    53.1% \n    15.6% \n    6.2% \n    0% \n    0% \n  \n  \n    Desk notes \n    6.2% \n    31.2% \n    6.2% \n    37.5% \n    9.4% \n    9.4% \n  \n  \n    Documentation for each function or class \n    6.2% \n    46.9% \n    15.6% \n    15.6% \n    9.4% \n    6.2% \n  \n  \n    Flow charts \n    3.1% \n    46.9% \n    21.9% \n    21.9% \n    6.2% \n    0% \n  \n  \n    README files \n    0% \n    21.9% \n    12.5% \n    46.9% \n    12.5% \n    6.2% \n  \n\n\n\n Sample size = 32\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    18.8% \n  \n  \n    No \n    40.6% \n  \n  \n    I don't know what dependency management is \n    40.6% \n  \n\n\n\n Sample size = 32\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15.6% \n  \n  \n    No \n    31.2% \n  \n  \n    I don't know what continuous integration is \n    53.1% \n  \n\n\n\n Sample size = 32\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    6.2% \n  \n  \n    No \n    65.6% \n  \n  \n    I don't know what reproducible workflows are \n    28.1% \n  \n\n\n\n Sample size = 32"
  },
  {
    "objectID": "departments/forestry-commission.html#rap-knowledge-and-opinions",
    "href": "departments/forestry-commission.html#rap-knowledge-and-opinions",
    "title": "Department summary: Forestry Commission",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    55.9% \n  \n  \n    I don't know what a RAP champion is \n    14.7% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    0% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    29.4% \n  \n\n\n\n Sample size = 34\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    37.5% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    6.2% \n  \n  \n    I have read the RAP strategy \n    56.2% \n  \n\n\n\n Sample size = 16\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    18.8% \n    18.8% \n    18.8% \n    31.2% \n    12.5% \n  \n  \n    I feel confident implementing RAP in my work \n    18.8% \n    12.5% \n    12.5% \n    37.5% \n    18.8% \n  \n  \n    I feel supported to implement RAP in my work \n    12.5% \n    31.2% \n    31.2% \n    25% \n    0% \n  \n  \n    I know where to find resources to help me implement RAP \n    18.8% \n    31.2% \n    6.2% \n    31.2% \n    12.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    12.5% \n    6.2% \n    18.8% \n    25% \n    37.5% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    6.2% \n    12.5% \n    37.5% \n    43.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    18.8% \n    18.8% \n    0% \n    43.8% \n    18.8% \n  \n\n\n\n Sample size = 16"
  },
  {
    "objectID": "departments/forestry-commission.html#rap-scores",
    "href": "departments/forestry-commission.html#rap-scores",
    "title": "Department summary: Forestry Commission",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    62.5% \n  \n  \n    Version control \n    Basic \n    21.9% \n  \n  \n    Documentation \n    Basic \n    15.6% \n  \n  \n    Peer review \n    Basic \n    12.5% \n  \n  \n    Team open source code \n    Basic \n    9.4% \n  \n  \n    AQUA book guidance \n    Basic \n    3.1% \n  \n  \n    Functions \n    Advanced \n    37.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    37.5% \n  \n  \n    Code packages \n    Advanced \n    21.9% \n  \n  \n    Dependency management \n    Advanced \n    18.8% \n  \n  \n    Unit testing \n    Advanced \n    15.6% \n  \n  \n    Function documentation \n    Advanced \n    15.6% \n  \n  \n    Continuous integration \n    Advanced \n    15.6% \n  \n\n\n\n Sample size = 32\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    28.1% \n  \n  \n    1 \n    31.2% \n  \n  \n    2 \n    31.2% \n  \n  \n    3 \n    6.2% \n  \n  \n    4 \n    3.1% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 32\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    34.4% \n  \n  \n    1 \n    25% \n  \n  \n    2 \n    21.9% \n  \n  \n    3 \n    3.1% \n  \n  \n    4 \n    3.1% \n  \n  \n    5 \n    6.2% \n  \n  \n    6 \n    3.1% \n  \n  \n    7 \n    3.1% \n  \n\n\n\n Sample size = 32"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#how-to-use-this-research",
    "href": "departments/government-actuary-s-department.html#how-to-use-this-research",
    "title": "Department summary: Government Actuary’s Department",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/government-actuary-s-department.html#coding-frequency-and-tools",
    "href": "departments/government-actuary-s-department.html#coding-frequency-and-tools",
    "title": "Department summary: Government Actuary’s Department",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    29.7% \n  \n  \n    Rarely \n    16.2% \n  \n  \n    Sometimes \n    10.8% \n  \n  \n    Regularly \n    27% \n  \n  \n    All the time \n    16.2% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    62.5% \n    37.5% \n  \n  \n    Data cleaning \n    61.5% \n    38.5% \n  \n  \n    Data linking \n    66.7% \n    33.3% \n  \n  \n    Data transfer / migration \n    62.5% \n    37.5% \n  \n  \n    Data visualisation \n    50% \n    50% \n  \n  \n    Machine learning \n    87.5% \n    12.5% \n  \n  \n    Modelling \n    60% \n    40% \n  \n  \n    Quality assurance \n    35.7% \n    64.3% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.7% \n    54.1% \n    43.2% \n  \n  \n    Java / Scala \n    0% \n    56.8% \n    43.2% \n  \n  \n    Javascript / Typescript \n    16.2% \n    54.1% \n    29.7% \n  \n  \n    Matlab \n    2.7% \n    43.2% \n    54.1% \n  \n  \n    Python \n    89.2% \n    8.1% \n    2.7% \n  \n  \n    R \n    91.9% \n    2.7% \n    5.4% \n  \n  \n    SAS \n    86.5% \n    8.1% \n    5.4% \n  \n  \n    SPSS \n    2.7% \n    48.6% \n    48.6% \n  \n  \n    SQL \n    45.9% \n    37.8% \n    16.2% \n  \n  \n    Stata \n    0% \n    54.1% \n    45.9% \n  \n  \n    VBA \n    89.2% \n    8.1% \n    2.7% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    13.5% \n    2.7% \n    83.8% \n  \n  \n    Java / Scala \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    Javascript / Typescript \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    Matlab \n    21.6% \n    5.4% \n    73% \n  \n  \n    Python \n    32.4% \n    0% \n    67.6% \n  \n  \n    R \n    62.2% \n    5.4% \n    32.4% \n  \n  \n    SAS \n    29.7% \n    5.4% \n    64.9% \n  \n  \n    SPSS \n    8.1% \n    2.7% \n    89.2% \n  \n  \n    SQL \n    29.7% \n    2.7% \n    67.6% \n  \n  \n    Stata \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    VBA \n    56.8% \n    2.7% \n    40.5% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    37.8% \n  \n  \n    No \n    5.4% \n  \n  \n    I don't know \n    56.8% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    24.3% \n  \n  \n    No \n    67.6% \n  \n  \n    I don't know \n    8.1% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#coding-capability",
    "href": "departments/government-actuary-s-department.html#coding-capability",
    "title": "Department summary: Government Actuary’s Department",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    12.5% \n  \n  \n    Slightly worse \n    16.7% \n  \n  \n    No change \n    12.5% \n  \n  \n    Slightly better \n    37.5% \n  \n  \n    Significantly better \n    20.8% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    34.4% \n  \n  \n    In education \n    43.8% \n  \n  \n    In private sector employment \n    3.1% \n  \n  \n    In public sector employment \n    3.1% \n  \n  \n    Self-taught \n    15.6% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 32"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#coding-practices",
    "href": "departments/government-actuary-s-department.html#coding-practices",
    "title": "Department summary: Government Actuary’s Department",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    46.2% \n    19.2% \n    7.7% \n    11.5% \n    11.5% \n    3.8% \n  \n  \n    Automated data quality assurance \n    15.4% \n    19.2% \n    26.9% \n    26.9% \n    7.7% \n    3.8% \n  \n  \n    Code review \n    0% \n    7.7% \n    15.4% \n    19.2% \n    38.5% \n    19.2% \n  \n  \n    Coding guidelines / Style guides \n    11.5% \n    19.2% \n    0% \n    26.9% \n    34.6% \n    7.7% \n  \n  \n    Functions \n    15.4% \n    3.8% \n    11.5% \n    15.4% \n    26.9% \n    26.9% \n  \n  \n    Open source own code \n    15.4% \n    65.4% \n    7.7% \n    3.8% \n    7.7% \n    0% \n  \n  \n    Packaging code \n    23.1% \n    30.8% \n    15.4% \n    19.2% \n    11.5% \n    0% \n  \n  \n    Standard directory structure \n    15.4% \n    23.1% \n    11.5% \n    15.4% \n    30.8% \n    3.8% \n  \n  \n    Unit testing \n    23.1% \n    15.4% \n    11.5% \n    30.8% \n    11.5% \n    7.7% \n  \n  \n    Use open source software \n    15.4% \n    11.5% \n    7.7% \n    26.9% \n    19.2% \n    19.2% \n  \n  \n    Version control \n    26.9% \n    30.8% \n    19.2% \n    7.7% \n    11.5% \n    3.8% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    23.1% \n    15.4% \n    3.8% \n    34.6% \n    15.4% \n    7.7% \n  \n  \n    Code comments \n    0% \n    3.8% \n    11.5% \n    7.7% \n    38.5% \n    38.5% \n  \n  \n    Data or assumptions registers \n    42.3% \n    34.6% \n    11.5% \n    3.8% \n    7.7% \n    0% \n  \n  \n    Desk notes \n    23.1% \n    23.1% \n    7.7% \n    34.6% \n    11.5% \n    0% \n  \n  \n    Documentation for each function or class \n    19.2% \n    15.4% \n    7.7% \n    30.8% \n    23.1% \n    3.8% \n  \n  \n    Flow charts \n    15.4% \n    26.9% \n    19.2% \n    23.1% \n    15.4% \n    0% \n  \n  \n    README files \n    23.1% \n    15.4% \n    15.4% \n    23.1% \n    19.2% \n    3.8% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    15.4% \n  \n  \n    No \n    34.6% \n  \n  \n    I don't know what dependency management is \n    50% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    7.7% \n  \n  \n    No \n    46.2% \n  \n  \n    I don't know what continuous integration is \n    46.2% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what reproducible workflows are \n    46.2% \n  \n\n\n\n Sample size = 26"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#rap-knowledge-and-opinions",
    "href": "departments/government-actuary-s-department.html#rap-knowledge-and-opinions",
    "title": "Department summary: Government Actuary’s Department",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    56.8% \n  \n  \n    I don't know what a RAP champion is \n    18.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    8.1% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.4% \n  \n  \n    I know who the RAP champion in my department is \n    10.8% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    25% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    56.2% \n  \n  \n    I have read the RAP strategy \n    18.8% \n  \n\n\n\n Sample size = 16\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    31.2% \n    6.2% \n    43.8% \n    12.5% \n    6.2% \n  \n  \n    I feel confident implementing RAP in my work \n    25% \n    18.8% \n    50% \n    0% \n    6.2% \n  \n  \n    I feel supported to implement RAP in my work \n    18.8% \n    12.5% \n    43.8% \n    18.8% \n    6.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    25% \n    18.8% \n    37.5% \n    6.2% \n    12.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    25% \n    6.2% \n    37.5% \n    25% \n    6.2% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    6.2% \n    56.2% \n    25% \n    12.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    18.8% \n    6.2% \n    43.8% \n    25% \n    6.2% \n  \n\n\n\n Sample size = 16"
  },
  {
    "objectID": "departments/government-actuary-s-department.html#rap-scores",
    "href": "departments/government-actuary-s-department.html#rap-scores",
    "title": "Department summary: Government Actuary’s Department",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Peer review \n    Basic \n    57.7% \n  \n  \n    Use open source software \n    Basic \n    38.5% \n  \n  \n    Documentation \n    Basic \n    19.2% \n  \n  \n    Version control \n    Basic \n    15.4% \n  \n  \n    AQUA book guidance \n    Basic \n    15.4% \n  \n  \n    Team open source code \n    Basic \n    7.7% \n  \n  \n    Functions \n    Advanced \n    53.8% \n  \n  \n    Follow code style guidelines \n    Advanced \n    42.3% \n  \n  \n    Function documentation \n    Advanced \n    26.9% \n  \n  \n    Unit testing \n    Advanced \n    19.2% \n  \n  \n    Dependency management \n    Advanced \n    15.4% \n  \n  \n    Code packages \n    Advanced \n    11.5% \n  \n  \n    Continuous integration \n    Advanced \n    7.7% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    19.2% \n  \n  \n    1 \n    38.5% \n  \n  \n    2 \n    23.1% \n  \n  \n    3 \n    11.5% \n  \n  \n    4 \n    3.8% \n  \n  \n    5 \n    3.8% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.1% \n  \n  \n    1 \n    26.9% \n  \n  \n    2 \n    26.9% \n  \n  \n    3 \n    7.7% \n  \n  \n    4 \n    7.7% \n  \n  \n    5 \n    3.8% \n  \n  \n    6 \n    3.8% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 26"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#how-to-use-this-research",
    "href": "departments/hm-revenue-and-customs.html#how-to-use-this-research",
    "title": "Department summary: HM Revenue and Customs",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#coding-frequency-and-tools",
    "href": "departments/hm-revenue-and-customs.html#coding-frequency-and-tools",
    "title": "Department summary: HM Revenue and Customs",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.2% \n  \n  \n    Rarely \n    12.9% \n  \n  \n    Sometimes \n    24.7% \n  \n  \n    Regularly \n    29.4% \n  \n  \n    All the time \n    24.7% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    88.6% \n    11.4% \n  \n  \n    Data cleaning \n    91.5% \n    8.5% \n  \n  \n    Data linking \n    88.1% \n    11.9% \n  \n  \n    Data transfer / migration \n    73.9% \n    26.1% \n  \n  \n    Data visualisation \n    67.1% \n    32.9% \n  \n  \n    Machine learning \n    81% \n    19% \n  \n  \n    Modelling \n    85.4% \n    14.6% \n  \n  \n    Quality assurance \n    71.1% \n    28.9% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.9% \n    40% \n    54.1% \n  \n  \n    Java / Scala \n    1.2% \n    42.4% \n    56.5% \n  \n  \n    Javascript / Typescript \n    9.4% \n    40% \n    50.6% \n  \n  \n    Matlab \n    2.4% \n    40% \n    57.6% \n  \n  \n    Python \n    36.5% \n    27.1% \n    36.5% \n  \n  \n    R \n    92.9% \n    3.5% \n    3.5% \n  \n  \n    SAS \n    89.4% \n    3.5% \n    7.1% \n  \n  \n    SPSS \n    31.8% \n    38.8% \n    29.4% \n  \n  \n    SQL \n    64.7% \n    20% \n    15.3% \n  \n  \n    Stata \n    22.4% \n    47.1% \n    30.6% \n  \n  \n    VBA \n    63.5% \n    24.7% \n    11.8% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.1% \n    3.5% \n    89.4% \n  \n  \n    Java / Scala \n    3.5% \n    2.4% \n    94.1% \n  \n  \n    Javascript / Typescript \n    10.6% \n    1.2% \n    88.2% \n  \n  \n    Matlab \n    20% \n    3.5% \n    76.5% \n  \n  \n    Python \n    32.9% \n    5.9% \n    61.2% \n  \n  \n    R \n    69.4% \n    1.2% \n    29.4% \n  \n  \n    SAS \n    72.9% \n    2.4% \n    24.7% \n  \n  \n    SPSS \n    22.4% \n    3.5% \n    74.1% \n  \n  \n    SQL \n    67.1% \n    2.4% \n    30.6% \n  \n  \n    Stata \n    5.9% \n    2.4% \n    91.8% \n  \n  \n    VBA \n    25.9% \n    7.1% \n    67.1% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    62.4% \n  \n  \n    No \n    14.1% \n  \n  \n    I don't know \n    23.5% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    48.2% \n  \n  \n    No \n    45.9% \n  \n  \n    I don't know \n    5.9% \n  \n\n\n\n Sample size = 85"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#coding-capability",
    "href": "departments/hm-revenue-and-customs.html#coding-capability",
    "title": "Department summary: HM Revenue and Customs",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7.5% \n  \n  \n    Slightly worse \n    17.9% \n  \n  \n    No change \n    17.9% \n  \n  \n    Slightly better \n    34.3% \n  \n  \n    Significantly better \n    22.4% \n  \n\n\n\n Sample size = 67\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    17.3% \n  \n  \n    In education \n    49.4% \n  \n  \n    In private sector employment \n    2.5% \n  \n  \n    In public sector employment \n    13.6% \n  \n  \n    Self-taught \n    17.3% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 81"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#coding-practices",
    "href": "departments/hm-revenue-and-customs.html#coding-practices",
    "title": "Department summary: HM Revenue and Customs",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    29.5% \n    5.1% \n    11.5% \n    20.5% \n    25.6% \n    7.7% \n  \n  \n    Automated data quality assurance \n    2.6% \n    17.9% \n    15.4% \n    26.9% \n    26.9% \n    10.3% \n  \n  \n    Code review \n    0% \n    1.3% \n    9% \n    25.6% \n    30.8% \n    33.3% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    3.8% \n    10.3% \n    30.8% \n    41% \n    14.1% \n  \n  \n    Functions \n    0% \n    6.4% \n    3.8% \n    26.9% \n    32.1% \n    30.8% \n  \n  \n    Open source own code \n    9% \n    55.1% \n    16.7% \n    15.4% \n    3.8% \n    0% \n  \n  \n    Packaging code \n    9% \n    38.5% \n    15.4% \n    20.5% \n    15.4% \n    1.3% \n  \n  \n    Standard directory structure \n    19.2% \n    15.4% \n    9% \n    24.4% \n    19.2% \n    12.8% \n  \n  \n    Unit testing \n    24.4% \n    11.5% \n    10.3% \n    32.1% \n    17.9% \n    3.8% \n  \n  \n    Use open source software \n    5.1% \n    21.8% \n    7.7% \n    19.2% \n    24.4% \n    21.8% \n  \n  \n    Version control \n    5.1% \n    39.7% \n    14.1% \n    10.3% \n    16.7% \n    14.1% \n  \n\n\n\n Sample size = 78\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    16.7% \n    17.9% \n    17.9% \n    28.2% \n    12.8% \n    6.4% \n  \n  \n    Code comments \n    1.3% \n    2.6% \n    1.3% \n    11.5% \n    20.5% \n    62.8% \n  \n  \n    Data or assumptions registers \n    16.7% \n    23.1% \n    24.4% \n    15.4% \n    11.5% \n    9% \n  \n  \n    Desk notes \n    24.4% \n    23.1% \n    14.1% \n    15.4% \n    19.2% \n    3.8% \n  \n  \n    Documentation for each function or class \n    10.3% \n    19.2% \n    15.4% \n    21.8% \n    17.9% \n    15.4% \n  \n  \n    Flow charts \n    7.7% \n    32.1% \n    15.4% \n    26.9% \n    15.4% \n    2.6% \n  \n  \n    README files \n    7.7% \n    19.2% \n    10.3% \n    25.6% \n    21.8% \n    15.4% \n  \n\n\n\n Sample size = 78\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    25.6% \n  \n  \n    No \n    47.4% \n  \n  \n    I don't know what dependency management is \n    26.9% \n  \n\n\n\n Sample size = 78\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    10.3% \n  \n  \n    No \n    52.6% \n  \n  \n    I don't know what continuous integration is \n    37.2% \n  \n\n\n\n Sample size = 78\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    5.1% \n  \n  \n    No \n    66.7% \n  \n  \n    I don't know what reproducible workflows are \n    28.2% \n  \n\n\n\n Sample size = 78"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#rap-knowledge-and-opinions",
    "href": "departments/hm-revenue-and-customs.html#rap-knowledge-and-opinions",
    "title": "Department summary: HM Revenue and Customs",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    13.3% \n  \n  \n    I don't know what a RAP champion is \n    8.4% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    34.9% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    1.2% \n  \n  \n    I know who the RAP champion in my department is \n    42.2% \n  \n\n\n\n Sample size = 83\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    24.3% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    47.3% \n  \n  \n    I have read the RAP strategy \n    28.4% \n  \n\n\n\n Sample size = 74\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.9% \n    21.6% \n    25.7% \n    18.9% \n    18.9% \n  \n  \n    I feel confident implementing RAP in my work \n    5.4% \n    18.9% \n    21.6% \n    37.8% \n    16.2% \n  \n  \n    I feel supported to implement RAP in my work \n    6.8% \n    8.1% \n    27% \n    37.8% \n    20.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.4% \n    16.2% \n    10.8% \n    43.2% \n    24.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    13.5% \n    8.1% \n    29.7% \n    29.7% \n    18.9% \n  \n  \n    I think it is important to implement RAP in my work \n    2.7% \n    4.1% \n    18.9% \n    43.2% \n    31.1% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.4% \n    8.1% \n    17.6% \n    47.3% \n    21.6% \n  \n\n\n\n Sample size = 74"
  },
  {
    "objectID": "departments/hm-revenue-and-customs.html#rap-scores",
    "href": "departments/hm-revenue-and-customs.html#rap-scores",
    "title": "Department summary: HM Revenue and Customs",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Peer review \n    Basic \n    64.1% \n  \n  \n    Use open source software \n    Basic \n    46.2% \n  \n  \n    Documentation \n    Basic \n    35.9% \n  \n  \n    AQUA book guidance \n    Basic \n    33.3% \n  \n  \n    Version control \n    Basic \n    30.8% \n  \n  \n    Team open source code \n    Basic \n    3.8% \n  \n  \n    Functions \n    Advanced \n    62.8% \n  \n  \n    Follow code style guidelines \n    Advanced \n    55.1% \n  \n  \n    Function documentation \n    Advanced \n    33.3% \n  \n  \n    Dependency management \n    Advanced \n    25.6% \n  \n  \n    Unit testing \n    Advanced \n    21.8% \n  \n  \n    Code packages \n    Advanced \n    16.7% \n  \n  \n    Continuous integration \n    Advanced \n    10.3% \n  \n\n\n\n Sample size = 78\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    17.9% \n  \n  \n    1 \n    19.2% \n  \n  \n    2 \n    25.6% \n  \n  \n    3 \n    17.9% \n  \n  \n    4 \n    7.7% \n  \n  \n    5 \n    10.3% \n  \n  \n    6 \n    1.3% \n  \n\n\n\n Sample size = 78\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    21.8% \n  \n  \n    1 \n    19.2% \n  \n  \n    2 \n    14.1% \n  \n  \n    3 \n    20.5% \n  \n  \n    4 \n    10.3% \n  \n  \n    5 \n    10.3% \n  \n  \n    6 \n    2.6% \n  \n  \n    7 \n    1.3% \n  \n\n\n\n Sample size = 78"
  },
  {
    "objectID": "departments/ministry-of-defence.html#how-to-use-this-research",
    "href": "departments/ministry-of-defence.html#how-to-use-this-research",
    "title": "Department summary: Ministry of Defence",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/ministry-of-defence.html#coding-frequency-and-tools",
    "href": "departments/ministry-of-defence.html#coding-frequency-and-tools",
    "title": "Department summary: Ministry of Defence",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    15.2% \n  \n  \n    Rarely \n    15.2% \n  \n  \n    Sometimes \n    39.4% \n  \n  \n    Regularly \n    24.2% \n  \n  \n    All the time \n    6.1% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    73.3% \n    26.7% \n  \n  \n    Data cleaning \n    80.8% \n    19.2% \n  \n  \n    Data linking \n    76.2% \n    23.8% \n  \n  \n    Data transfer / migration \n    72.2% \n    27.8% \n  \n  \n    Data visualisation \n    50% \n    50% \n  \n  \n    Machine learning \n    75% \n    25% \n  \n  \n    Modelling \n    70% \n    30% \n  \n  \n    Quality assurance \n    45.2% \n    54.8% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.1% \n    54.5% \n    39.4% \n  \n  \n    Java / Scala \n    9.1% \n    60.6% \n    30.3% \n  \n  \n    Javascript / Typescript \n    18.2% \n    60.6% \n    21.2% \n  \n  \n    Matlab \n    9.1% \n    51.5% \n    39.4% \n  \n  \n    Python \n    66.7% \n    15.2% \n    18.2% \n  \n  \n    R \n    87.9% \n    0% \n    12.1% \n  \n  \n    SAS \n    12.1% \n    48.5% \n    39.4% \n  \n  \n    SPSS \n    51.5% \n    24.2% \n    24.2% \n  \n  \n    SQL \n    75.8% \n    12.1% \n    12.1% \n  \n  \n    Stata \n    12.1% \n    63.6% \n    24.2% \n  \n  \n    VBA \n    69.7% \n    21.2% \n    9.1% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    9.1% \n    0% \n    90.9% \n  \n  \n    Java / Scala \n    3% \n    0% \n    97% \n  \n  \n    Javascript / Typescript \n    12.1% \n    0% \n    87.9% \n  \n  \n    Matlab \n    12.1% \n    3% \n    84.8% \n  \n  \n    Python \n    18.2% \n    0% \n    81.8% \n  \n  \n    R \n    57.6% \n    0% \n    42.4% \n  \n  \n    SAS \n    18.2% \n    3% \n    78.8% \n  \n  \n    SPSS \n    36.4% \n    0% \n    63.6% \n  \n  \n    SQL \n    63.6% \n    0% \n    36.4% \n  \n  \n    Stata \n    12.1% \n    0% \n    87.9% \n  \n  \n    VBA \n    48.5% \n    0% \n    51.5% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    72.7% \n  \n  \n    No \n    15.2% \n  \n  \n    I don't know \n    12.1% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    48.5% \n  \n  \n    No \n    48.5% \n  \n  \n    I don't know \n    3% \n  \n\n\n\n Sample size = 33"
  },
  {
    "objectID": "departments/ministry-of-defence.html#coding-capability",
    "href": "departments/ministry-of-defence.html#coding-capability",
    "title": "Department summary: Ministry of Defence",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    4.5% \n  \n  \n    Slightly worse \n    4.5% \n  \n  \n    No change \n    27.3% \n  \n  \n    Slightly better \n    40.9% \n  \n  \n    Significantly better \n    22.7% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    27.6% \n  \n  \n    In education \n    31% \n  \n  \n    In private sector employment \n    3.4% \n  \n  \n    In public sector employment \n    10.3% \n  \n  \n    Self-taught \n    27.6% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 29"
  },
  {
    "objectID": "departments/ministry-of-defence.html#coding-practices",
    "href": "departments/ministry-of-defence.html#coding-practices",
    "title": "Department summary: Ministry of Defence",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    21.4% \n    25% \n    14.3% \n    10.7% \n    17.9% \n    10.7% \n  \n  \n    Automated data quality assurance \n    7.1% \n    17.9% \n    21.4% \n    25% \n    10.7% \n    17.9% \n  \n  \n    Code review \n    0% \n    7.1% \n    25% \n    39.3% \n    21.4% \n    7.1% \n  \n  \n    Coding guidelines / Style guides \n    3.6% \n    7.1% \n    28.6% \n    28.6% \n    10.7% \n    21.4% \n  \n  \n    Functions \n    0% \n    7.1% \n    14.3% \n    32.1% \n    21.4% \n    25% \n  \n  \n    Open source own code \n    7.1% \n    71.4% \n    3.6% \n    14.3% \n    0% \n    3.6% \n  \n  \n    Packaging code \n    17.9% \n    35.7% \n    21.4% \n    14.3% \n    10.7% \n    0% \n  \n  \n    Standard directory structure \n    17.9% \n    17.9% \n    10.7% \n    17.9% \n    17.9% \n    17.9% \n  \n  \n    Unit testing \n    21.4% \n    10.7% \n    21.4% \n    17.9% \n    17.9% \n    10.7% \n  \n  \n    Use open source software \n    10.7% \n    28.6% \n    14.3% \n    7.1% \n    17.9% \n    21.4% \n  \n  \n    Version control \n    3.6% \n    42.9% \n    7.1% \n    7.1% \n    28.6% \n    10.7% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    21.4% \n    25% \n    17.9% \n    21.4% \n    3.6% \n    10.7% \n  \n  \n    Code comments \n    0% \n    3.6% \n    0% \n    10.7% \n    28.6% \n    57.1% \n  \n  \n    Data or assumptions registers \n    32.1% \n    32.1% \n    14.3% \n    7.1% \n    7.1% \n    7.1% \n  \n  \n    Desk notes \n    3.6% \n    14.3% \n    3.6% \n    25% \n    14.3% \n    39.3% \n  \n  \n    Documentation for each function or class \n    10.7% \n    21.4% \n    17.9% \n    21.4% \n    21.4% \n    7.1% \n  \n  \n    Flow charts \n    0% \n    28.6% \n    28.6% \n    32.1% \n    3.6% \n    7.1% \n  \n  \n    README files \n    3.6% \n    25% \n    7.1% \n    42.9% \n    17.9% \n    3.6% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    14.3% \n  \n  \n    No \n    32.1% \n  \n  \n    I don't know what dependency management is \n    53.6% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    17.9% \n  \n  \n    No \n    42.9% \n  \n  \n    I don't know what continuous integration is \n    39.3% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    3.6% \n  \n  \n    No \n    46.4% \n  \n  \n    I don't know what reproducible workflows are \n    50% \n  \n\n\n\n Sample size = 28"
  },
  {
    "objectID": "departments/ministry-of-defence.html#rap-knowledge-and-opinions",
    "href": "departments/ministry-of-defence.html#rap-knowledge-and-opinions",
    "title": "Department summary: Ministry of Defence",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    32.3% \n  \n  \n    I don't know what a RAP champion is \n    22.6% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    35.5% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    9.7% \n  \n\n\n\n Sample size = 31\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    26.1% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    56.5% \n  \n  \n    I have read the RAP strategy \n    17.4% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    21.7% \n    17.4% \n    17.4% \n    30.4% \n    13% \n  \n  \n    I feel confident implementing RAP in my work \n    30.4% \n    17.4% \n    13% \n    21.7% \n    17.4% \n  \n  \n    I feel supported to implement RAP in my work \n    8.7% \n    4.3% \n    39.1% \n    30.4% \n    17.4% \n  \n  \n    I know where to find resources to help me implement RAP \n    17.4% \n    26.1% \n    13% \n    21.7% \n    21.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    13% \n    4.3% \n    30.4% \n    26.1% \n    26.1% \n  \n  \n    I think it is important to implement RAP in my work \n    8.7% \n    4.3% \n    21.7% \n    26.1% \n    39.1% \n  \n  \n    I understand what the key components of the RAP methodology are \n    21.7% \n    26.1% \n    4.3% \n    26.1% \n    21.7% \n  \n\n\n\n Sample size = 23"
  },
  {
    "objectID": "departments/ministry-of-defence.html#rap-scores",
    "href": "departments/ministry-of-defence.html#rap-scores",
    "title": "Department summary: Ministry of Defence",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    39.3% \n  \n  \n    Version control \n    Basic \n    39.3% \n  \n  \n    Peer review \n    Basic \n    28.6% \n  \n  \n    AQUA book guidance \n    Basic \n    28.6% \n  \n  \n    Documentation \n    Basic \n    21.4% \n  \n  \n    Team open source code \n    Basic \n    3.6% \n  \n  \n    Functions \n    Advanced \n    46.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    32.1% \n  \n  \n    Unit testing \n    Advanced \n    28.6% \n  \n  \n    Function documentation \n    Advanced \n    28.6% \n  \n  \n    Continuous integration \n    Advanced \n    17.9% \n  \n  \n    Dependency management \n    Advanced \n    14.3% \n  \n  \n    Code packages \n    Advanced \n    10.7% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    25% \n  \n  \n    1 \n    28.6% \n  \n  \n    2 \n    17.9% \n  \n  \n    3 \n    17.9% \n  \n  \n    4 \n    10.7% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    21.4% \n  \n  \n    1 \n    25% \n  \n  \n    2 \n    28.6% \n  \n  \n    3 \n    10.7% \n  \n  \n    4 \n    10.7% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    3.6% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 28"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/ministry-of-justice-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/ministry-of-justice-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    1.9% \n  \n  \n    Rarely \n    9.6% \n  \n  \n    Sometimes \n    15.4% \n  \n  \n    Regularly \n    30.8% \n  \n  \n    All the time \n    42.3% \n  \n\n\n\n Sample size = 52\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    96.1% \n    3.9% \n  \n  \n    Data cleaning \n    93.8% \n    6.2% \n  \n  \n    Data linking \n    92.3% \n    7.7% \n  \n  \n    Data transfer / migration \n    76.9% \n    23.1% \n  \n  \n    Data visualisation \n    74.4% \n    25.6% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    91.7% \n    8.3% \n  \n  \n    Quality assurance \n    70% \n    30% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.8% \n    59.6% \n    34.6% \n  \n  \n    Java / Scala \n    11.5% \n    59.6% \n    28.8% \n  \n  \n    Javascript / Typescript \n    15.4% \n    55.8% \n    28.8% \n  \n  \n    Matlab \n    1.9% \n    55.8% \n    42.3% \n  \n  \n    Python \n    90.4% \n    7.7% \n    1.9% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SAS \n    42.3% \n    28.8% \n    28.8% \n  \n  \n    SPSS \n    3.8% \n    55.8% \n    40.4% \n  \n  \n    SQL \n    92.3% \n    3.8% \n    3.8% \n  \n  \n    Stata \n    5.8% \n    51.9% \n    42.3% \n  \n  \n    VBA \n    53.8% \n    34.6% \n    11.5% \n  \n\n\n\n Sample size = 52\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    9.6% \n    3.8% \n    86.5% \n  \n  \n    Java / Scala \n    0% \n    5.8% \n    94.2% \n  \n  \n    Javascript / Typescript \n    9.6% \n    3.8% \n    86.5% \n  \n  \n    Matlab \n    19.2% \n    5.8% \n    75% \n  \n  \n    Python \n    46.2% \n    1.9% \n    51.9% \n  \n  \n    R \n    90.4% \n    0% \n    9.6% \n  \n  \n    SAS \n    32.7% \n    1.9% \n    65.4% \n  \n  \n    SPSS \n    32.7% \n    9.6% \n    57.7% \n  \n  \n    SQL \n    86.5% \n    0% \n    13.5% \n  \n  \n    Stata \n    15.4% \n    5.8% \n    78.8% \n  \n  \n    VBA \n    26.9% \n    3.8% \n    69.2% \n  \n\n\n\n Sample size = 52\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    96.2% \n  \n  \n    No \n    1.9% \n  \n  \n    I don't know \n    1.9% \n  \n\n\n\n Sample size = 52\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    92.3% \n  \n  \n    No \n    7.7% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 52"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#coding-capability",
    "href": "departments/ministry-of-justice-excl-agencies-.html#coding-capability",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    8.5% \n  \n  \n    No change \n    19.1% \n  \n  \n    Slightly better \n    38.3% \n  \n  \n    Significantly better \n    34% \n  \n\n\n\n Sample size = 47\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    11.5% \n  \n  \n    In education \n    40.4% \n  \n  \n    In private sector employment \n    1.9% \n  \n  \n    In public sector employment \n    23.1% \n  \n  \n    Self-taught \n    21.2% \n  \n  \n    Other \n    1.9% \n  \n\n\n\n Sample size = 52"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#coding-practices",
    "href": "departments/ministry-of-justice-excl-agencies-.html#coding-practices",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    27.5% \n    13.7% \n    11.8% \n    25.5% \n    15.7% \n    5.9% \n  \n  \n    Automated data quality assurance \n    2% \n    17.6% \n    23.5% \n    21.6% \n    21.6% \n    13.7% \n  \n  \n    Code review \n    0% \n    2% \n    5.9% \n    25.5% \n    45.1% \n    21.6% \n  \n  \n    Coding guidelines / Style guides \n    2% \n    9.8% \n    5.9% \n    31.4% \n    27.5% \n    23.5% \n  \n  \n    Functions \n    3.9% \n    3.9% \n    13.7% \n    25.5% \n    13.7% \n    39.2% \n  \n  \n    Open source own code \n    9.8% \n    37.3% \n    9.8% \n    25.5% \n    7.8% \n    9.8% \n  \n  \n    Packaging code \n    3.9% \n    49% \n    11.8% \n    19.6% \n    7.8% \n    7.8% \n  \n  \n    Standard directory structure \n    17.6% \n    15.7% \n    11.8% \n    21.6% \n    19.6% \n    13.7% \n  \n  \n    Unit testing \n    21.6% \n    19.6% \n    15.7% \n    15.7% \n    11.8% \n    15.7% \n  \n  \n    Use open source software \n    5.9% \n    2% \n    7.8% \n    17.6% \n    23.5% \n    43.1% \n  \n  \n    Version control \n    0% \n    5.9% \n    5.9% \n    11.8% \n    29.4% \n    47.1% \n  \n\n\n\n Sample size = 51\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    17.6% \n    9.8% \n    15.7% \n    21.6% \n    27.5% \n    7.8% \n  \n  \n    Code comments \n    2% \n    2% \n    0% \n    5.9% \n    41.2% \n    49% \n  \n  \n    Data or assumptions registers \n    9.8% \n    15.7% \n    11.8% \n    19.6% \n    27.5% \n    15.7% \n  \n  \n    Desk notes \n    29.4% \n    13.7% \n    15.7% \n    17.6% \n    21.6% \n    2% \n  \n  \n    Documentation for each function or class \n    9.8% \n    23.5% \n    13.7% \n    17.6% \n    19.6% \n    15.7% \n  \n  \n    Flow charts \n    2% \n    43.1% \n    23.5% \n    23.5% \n    7.8% \n    0% \n  \n  \n    README files \n    2% \n    5.9% \n    25.5% \n    19.6% \n    19.6% \n    27.5% \n  \n\n\n\n Sample size = 51\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    62.7% \n  \n  \n    No \n    15.7% \n  \n  \n    I don't know what dependency management is \n    21.6% \n  \n\n\n\n Sample size = 51\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    31.4% \n  \n  \n    No \n    23.5% \n  \n  \n    I don't know what continuous integration is \n    45.1% \n  \n\n\n\n Sample size = 51\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    3.9% \n  \n  \n    No \n    58.8% \n  \n  \n    I don't know what reproducible workflows are \n    37.3% \n  \n\n\n\n Sample size = 51"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/ministry-of-justice-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    9.8% \n  \n  \n    I don't know what a RAP champion is \n    17.6% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    41.2% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    2% \n  \n  \n    I know who the RAP champion in my department is \n    29.4% \n  \n\n\n\n Sample size = 51\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    25.5% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    46.8% \n  \n  \n    I have read the RAP strategy \n    27.7% \n  \n\n\n\n Sample size = 47\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    8.5% \n    19.1% \n    19.1% \n    34% \n    19.1% \n  \n  \n    I feel confident implementing RAP in my work \n    8.5% \n    21.3% \n    12.8% \n    38.3% \n    19.1% \n  \n  \n    I feel supported to implement RAP in my work \n    2.1% \n    14.9% \n    14.9% \n    48.9% \n    19.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    2.1% \n    19.1% \n    23.4% \n    36.2% \n    19.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    4.3% \n    6.4% \n    29.8% \n    42.6% \n    17% \n  \n  \n    I think it is important to implement RAP in my work \n    4.3% \n    2.1% \n    10.6% \n    53.2% \n    29.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    4.3% \n    27.7% \n    14.9% \n    38.3% \n    14.9% \n  \n\n\n\n Sample size = 47"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#rap-scores",
    "href": "departments/ministry-of-justice-excl-agencies-.html#rap-scores",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Version control \n    Basic \n    76.5% \n  \n  \n    Use open source software \n    Basic \n    66.7% \n  \n  \n    Peer review \n    Basic \n    66.7% \n  \n  \n    Documentation \n    Basic \n    47.1% \n  \n  \n    AQUA book guidance \n    Basic \n    21.6% \n  \n  \n    Team open source code \n    Basic \n    17.6% \n  \n  \n    Dependency management \n    Advanced \n    62.7% \n  \n  \n    Functions \n    Advanced \n    52.9% \n  \n  \n    Follow code style guidelines \n    Advanced \n    51% \n  \n  \n    Function documentation \n    Advanced \n    35.3% \n  \n  \n    Continuous integration \n    Advanced \n    31.4% \n  \n  \n    Unit testing \n    Advanced \n    27.5% \n  \n  \n    Code packages \n    Advanced \n    15.7% \n  \n\n\n\n Sample size = 51\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    7.8% \n  \n  \n    1 \n    7.8% \n  \n  \n    2 \n    23.5% \n  \n  \n    3 \n    19.6% \n  \n  \n    4 \n    25.5% \n  \n  \n    5 \n    13.7% \n  \n  \n    6 \n    2% \n  \n\n\n\n Sample size = 51\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    19.6% \n  \n  \n    1 \n    11.8% \n  \n  \n    2 \n    21.6% \n  \n  \n    3 \n    13.7% \n  \n  \n    4 \n    9.8% \n  \n  \n    5 \n    5.9% \n  \n  \n    6 \n    11.8% \n  \n  \n    7 \n    5.9% \n  \n\n\n\n Sample size = 51"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#how-to-use-this-research",
    "href": "departments/national-records-of-scotland.html#how-to-use-this-research",
    "title": "Department summary: National Records of Scotland",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/national-records-of-scotland.html#coding-frequency-and-tools",
    "href": "departments/national-records-of-scotland.html#coding-frequency-and-tools",
    "title": "Department summary: National Records of Scotland",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    6.9% \n  \n  \n    Rarely \n    13.8% \n  \n  \n    Sometimes \n    20.7% \n  \n  \n    Regularly \n    51.7% \n  \n  \n    All the time \n    6.9% \n  \n\n\n\n Sample size = 29\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    81.5% \n    18.5% \n  \n  \n    Data cleaning \n    95.8% \n    4.2% \n  \n  \n    Data linking \n    92.9% \n    7.1% \n  \n  \n    Data transfer / migration \n    33.3% \n    66.7% \n  \n  \n    Data visualisation \n    76% \n    24% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    90.9% \n    9.1% \n  \n  \n    Quality assurance \n    57.7% \n    42.3% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    48.3% \n    51.7% \n  \n  \n    Java / Scala \n    3.4% \n    51.7% \n    44.8% \n  \n  \n    Javascript / Typescript \n    3.4% \n    51.7% \n    44.8% \n  \n  \n    Matlab \n    0% \n    51.7% \n    48.3% \n  \n  \n    Python \n    37.9% \n    44.8% \n    17.2% \n  \n  \n    R \n    96.6% \n    0% \n    3.4% \n  \n  \n    SAS \n    100% \n    0% \n    0% \n  \n  \n    SPSS \n    17.2% \n    41.4% \n    41.4% \n  \n  \n    SQL \n    41.4% \n    41.4% \n    17.2% \n  \n  \n    Stata \n    10.3% \n    44.8% \n    44.8% \n  \n  \n    VBA \n    55.2% \n    27.6% \n    17.2% \n  \n\n\n\n Sample size = 29\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.9% \n    3.4% \n    89.7% \n  \n  \n    Java / Scala \n    10.3% \n    6.9% \n    82.8% \n  \n  \n    Javascript / Typescript \n    6.9% \n    6.9% \n    86.2% \n  \n  \n    Matlab \n    17.2% \n    3.4% \n    79.3% \n  \n  \n    Python \n    34.5% \n    3.4% \n    62.1% \n  \n  \n    R \n    82.8% \n    0% \n    17.2% \n  \n  \n    SAS \n    86.2% \n    0% \n    13.8% \n  \n  \n    SPSS \n    37.9% \n    13.8% \n    48.3% \n  \n  \n    SQL \n    27.6% \n    10.3% \n    62.1% \n  \n  \n    Stata \n    10.3% \n    6.9% \n    82.8% \n  \n  \n    VBA \n    24.1% \n    10.3% \n    65.5% \n  \n\n\n\n Sample size = 29\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    72.4% \n  \n  \n    No \n    6.9% \n  \n  \n    I don't know \n    20.7% \n  \n\n\n\n Sample size = 29\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    44.8% \n  \n  \n    No \n    44.8% \n  \n  \n    I don't know \n    10.3% \n  \n\n\n\n Sample size = 29"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#coding-capability",
    "href": "departments/national-records-of-scotland.html#coding-capability",
    "title": "Department summary: National Records of Scotland",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.6% \n  \n  \n    Slightly worse \n    21.4% \n  \n  \n    No change \n    14.3% \n  \n  \n    Slightly better \n    32.1% \n  \n  \n    Significantly better \n    28.6% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    3.4% \n  \n  \n    In education \n    79.3% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    3.4% \n  \n  \n    Self-taught \n    13.8% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 29"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#coding-practices",
    "href": "departments/national-records-of-scotland.html#coding-practices",
    "title": "Department summary: National Records of Scotland",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    77.8% \n    7.4% \n    3.7% \n    3.7% \n    7.4% \n    0% \n  \n  \n    Automated data quality assurance \n    7.4% \n    14.8% \n    22.2% \n    29.6% \n    22.2% \n    3.7% \n  \n  \n    Code review \n    0% \n    11.1% \n    11.1% \n    48.1% \n    29.6% \n    0% \n  \n  \n    Coding guidelines / Style guides \n    7.4% \n    14.8% \n    11.1% \n    29.6% \n    25.9% \n    11.1% \n  \n  \n    Functions \n    0% \n    3.7% \n    3.7% \n    48.1% \n    29.6% \n    14.8% \n  \n  \n    Open source own code \n    3.7% \n    59.3% \n    14.8% \n    14.8% \n    3.7% \n    3.7% \n  \n  \n    Packaging code \n    11.1% \n    59.3% \n    14.8% \n    14.8% \n    0% \n    0% \n  \n  \n    Standard directory structure \n    40.7% \n    11.1% \n    7.4% \n    18.5% \n    14.8% \n    7.4% \n  \n  \n    Unit testing \n    29.6% \n    11.1% \n    14.8% \n    33.3% \n    11.1% \n    0% \n  \n  \n    Use open source software \n    0% \n    11.1% \n    11.1% \n    37% \n    18.5% \n    22.2% \n  \n  \n    Version control \n    3.7% \n    48.1% \n    3.7% \n    18.5% \n    14.8% \n    11.1% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    29.6% \n    37% \n    18.5% \n    7.4% \n    7.4% \n    0% \n  \n  \n    Code comments \n    3.7% \n    3.7% \n    3.7% \n    14.8% \n    29.6% \n    44.4% \n  \n  \n    Data or assumptions registers \n    25.9% \n    40.7% \n    11.1% \n    7.4% \n    11.1% \n    3.7% \n  \n  \n    Desk notes \n    0% \n    7.4% \n    11.1% \n    29.6% \n    37% \n    14.8% \n  \n  \n    Documentation for each function or class \n    18.5% \n    25.9% \n    14.8% \n    22.2% \n    18.5% \n    0% \n  \n  \n    Flow charts \n    3.7% \n    37% \n    22.2% \n    33.3% \n    3.7% \n    0% \n  \n  \n    README files \n    7.4% \n    18.5% \n    7.4% \n    25.9% \n    37% \n    3.7% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    3.7% \n  \n  \n    No \n    37% \n  \n  \n    I don't know what dependency management is \n    59.3% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    3.7% \n  \n  \n    No \n    33.3% \n  \n  \n    I don't know what continuous integration is \n    63% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    55.6% \n  \n  \n    I don't know what reproducible workflows are \n    44.4% \n  \n\n\n\n Sample size = 27"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#rap-knowledge-and-opinions",
    "href": "departments/national-records-of-scotland.html#rap-knowledge-and-opinions",
    "title": "Department summary: National Records of Scotland",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    7.4% \n  \n  \n    I don't know what a RAP champion is \n    18.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    29.6% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    3.7% \n  \n  \n    I know who the RAP champion in my department is \n    40.7% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    14.8% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    66.7% \n  \n  \n    I have read the RAP strategy \n    18.5% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.8% \n    18.5% \n    22.2% \n    29.6% \n    14.8% \n  \n  \n    I feel confident implementing RAP in my work \n    7.4% \n    14.8% \n    22.2% \n    40.7% \n    14.8% \n  \n  \n    I feel supported to implement RAP in my work \n    3.7% \n    7.4% \n    25.9% \n    48.1% \n    14.8% \n  \n  \n    I know where to find resources to help me implement RAP \n    3.7% \n    11.1% \n    14.8% \n    51.9% \n    18.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    11.1% \n    14.8% \n    11.1% \n    44.4% \n    18.5% \n  \n  \n    I think it is important to implement RAP in my work \n    3.7% \n    3.7% \n    18.5% \n    48.1% \n    25.9% \n  \n  \n    I understand what the key components of the RAP methodology are \n    7.4% \n    7.4% \n    22.2% \n    51.9% \n    11.1% \n  \n\n\n\n Sample size = 27"
  },
  {
    "objectID": "departments/national-records-of-scotland.html#rap-scores",
    "href": "departments/national-records-of-scotland.html#rap-scores",
    "title": "Department summary: National Records of Scotland",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    40.7% \n  \n  \n    Peer review \n    Basic \n    29.6% \n  \n  \n    Documentation \n    Basic \n    29.6% \n  \n  \n    Version control \n    Basic \n    25.9% \n  \n  \n    Team open source code \n    Basic \n    7.4% \n  \n  \n    AQUA book guidance \n    Basic \n    7.4% \n  \n  \n    Functions \n    Advanced \n    44.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    37% \n  \n  \n    Function documentation \n    Advanced \n    18.5% \n  \n  \n    Unit testing \n    Advanced \n    11.1% \n  \n  \n    Continuous integration \n    Advanced \n    3.7% \n  \n  \n    Dependency management \n    Advanced \n    3.7% \n  \n  \n    Code packages \n    Advanced \n    0% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    25.9% \n  \n  \n    1 \n    33.3% \n  \n  \n    2 \n    18.5% \n  \n  \n    3 \n    18.5% \n  \n  \n    4 \n    3.7% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    25.9% \n  \n  \n    1 \n    44.4% \n  \n  \n    2 \n    18.5% \n  \n  \n    3 \n    7.4% \n  \n  \n    4 \n    3.7% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 27"
  },
  {
    "objectID": "departments/nhs.html#how-to-use-this-research",
    "href": "departments/nhs.html#how-to-use-this-research",
    "title": "Department summary: NHS",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/nhs.html#coding-frequency-and-tools",
    "href": "departments/nhs.html#coding-frequency-and-tools",
    "title": "Department summary: NHS",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    7.4% \n  \n  \n    Rarely \n    0% \n  \n  \n    Sometimes \n    9.3% \n  \n  \n    Regularly \n    27.8% \n  \n  \n    All the time \n    55.6% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    90.4% \n    9.6% \n  \n  \n    Data cleaning \n    88.2% \n    11.8% \n  \n  \n    Data linking \n    93.2% \n    6.8% \n  \n  \n    Data transfer / migration \n    80.6% \n    19.4% \n  \n  \n    Data visualisation \n    73.5% \n    26.5% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    100% \n    0% \n  \n  \n    Quality assurance \n    77.3% \n    22.7% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.6% \n    40.7% \n    53.7% \n  \n  \n    Java / Scala \n    9.3% \n    37% \n    53.7% \n  \n  \n    Javascript / Typescript \n    20.4% \n    31.5% \n    48.1% \n  \n  \n    Matlab \n    1.9% \n    37% \n    61.1% \n  \n  \n    Python \n    63% \n    18.5% \n    18.5% \n  \n  \n    R \n    98.1% \n    0% \n    1.9% \n  \n  \n    SAS \n    20.4% \n    27.8% \n    51.9% \n  \n  \n    SPSS \n    42.6% \n    14.8% \n    42.6% \n  \n  \n    SQL \n    77.8% \n    13% \n    9.3% \n  \n  \n    Stata \n    13% \n    37% \n    50% \n  \n  \n    VBA \n    51.9% \n    24.1% \n    24.1% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.7% \n    1.9% \n    94.4% \n  \n  \n    Java / Scala \n    5.6% \n    1.9% \n    92.6% \n  \n  \n    Javascript / Typescript \n    7.4% \n    3.7% \n    88.9% \n  \n  \n    Matlab \n    5.6% \n    3.7% \n    90.7% \n  \n  \n    Python \n    37% \n    1.9% \n    61.1% \n  \n  \n    R \n    81.5% \n    0% \n    18.5% \n  \n  \n    SAS \n    18.5% \n    1.9% \n    79.6% \n  \n  \n    SPSS \n    46.3% \n    1.9% \n    51.9% \n  \n  \n    SQL \n    68.5% \n    1.9% \n    29.6% \n  \n  \n    Stata \n    9.3% \n    1.9% \n    88.9% \n  \n  \n    VBA \n    31.5% \n    1.9% \n    66.7% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    88.9% \n  \n  \n    No \n    9.3% \n  \n  \n    I don't know \n    1.9% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    70.4% \n  \n  \n    No \n    24.1% \n  \n  \n    I don't know \n    5.6% \n  \n\n\n\n Sample size = 54"
  },
  {
    "objectID": "departments/nhs.html#coding-capability",
    "href": "departments/nhs.html#coding-capability",
    "title": "Department summary: NHS",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    7.5% \n  \n  \n    No change \n    5% \n  \n  \n    Slightly better \n    32.5% \n  \n  \n    Significantly better \n    55% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    25.5% \n  \n  \n    In education \n    37.3% \n  \n  \n    In private sector employment \n    2% \n  \n  \n    In public sector employment \n    11.8% \n  \n  \n    Self-taught \n    21.6% \n  \n  \n    Other \n    2% \n  \n\n\n\n Sample size = 51"
  },
  {
    "objectID": "departments/nhs.html#coding-practices",
    "href": "departments/nhs.html#coding-practices",
    "title": "Department summary: NHS",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    66% \n    12% \n    2% \n    12% \n    6% \n    2% \n  \n  \n    Automated data quality assurance \n    4% \n    18% \n    28% \n    32% \n    10% \n    8% \n  \n  \n    Code review \n    0% \n    2% \n    14% \n    34% \n    26% \n    24% \n  \n  \n    Coding guidelines / Style guides \n    2% \n    6% \n    6% \n    30% \n    42% \n    14% \n  \n  \n    Functions \n    2% \n    2% \n    8% \n    24% \n    28% \n    36% \n  \n  \n    Open source own code \n    12% \n    24% \n    20% \n    26% \n    10% \n    8% \n  \n  \n    Packaging code \n    10% \n    48% \n    8% \n    14% \n    18% \n    2% \n  \n  \n    Standard directory structure \n    22% \n    8% \n    4% \n    22% \n    30% \n    14% \n  \n  \n    Unit testing \n    14% \n    18% \n    22% \n    22% \n    24% \n    0% \n  \n  \n    Use open source software \n    10% \n    4% \n    2% \n    12% \n    20% \n    52% \n  \n  \n    Version control \n    4% \n    22% \n    8% \n    20% \n    16% \n    30% \n  \n\n\n\n Sample size = 50\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    36% \n    28% \n    12% \n    14% \n    10% \n    0% \n  \n  \n    Code comments \n    2% \n    4% \n    0% \n    12% \n    26% \n    56% \n  \n  \n    Data or assumptions registers \n    40% \n    36% \n    12% \n    6% \n    6% \n    0% \n  \n  \n    Desk notes \n    40% \n    18% \n    4% \n    16% \n    20% \n    2% \n  \n  \n    Documentation for each function or class \n    12% \n    22% \n    6% \n    28% \n    14% \n    18% \n  \n  \n    Flow charts \n    8% \n    36% \n    12% \n    34% \n    10% \n    0% \n  \n  \n    README files \n    6% \n    20% \n    18% \n    20% \n    22% \n    14% \n  \n\n\n\n Sample size = 50\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    30% \n  \n  \n    No \n    38% \n  \n  \n    I don't know what dependency management is \n    32% \n  \n\n\n\n Sample size = 50\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    20% \n  \n  \n    No \n    48% \n  \n  \n    I don't know what continuous integration is \n    32% \n  \n\n\n\n Sample size = 50\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    4% \n  \n  \n    No \n    62% \n  \n  \n    I don't know what reproducible workflows are \n    34% \n  \n\n\n\n Sample size = 50"
  },
  {
    "objectID": "departments/nhs.html#rap-knowledge-and-opinions",
    "href": "departments/nhs.html#rap-knowledge-and-opinions",
    "title": "Department summary: NHS",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    27.1% \n  \n  \n    I don't know what a RAP champion is \n    14.6% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    25% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    6.2% \n  \n  \n    I know who the RAP champion in my department is \n    27.1% \n  \n\n\n\n Sample size = 48\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    22.5% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    37.5% \n  \n  \n    I have read the RAP strategy \n    40% \n  \n\n\n\n Sample size = 41\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    9.8% \n    31.7% \n    9.8% \n    17.1% \n    31.7% \n  \n  \n    I feel confident implementing RAP in my work \n    9.8% \n    12.2% \n    12.2% \n    46.3% \n    19.5% \n  \n  \n    I feel supported to implement RAP in my work \n    12.2% \n    12.2% \n    9.8% \n    41.5% \n    24.4% \n  \n  \n    I know where to find resources to help me implement RAP \n    7.3% \n    14.6% \n    12.2% \n    39% \n    26.8% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.3% \n    7.3% \n    22% \n    24.4% \n    39% \n  \n  \n    I think it is important to implement RAP in my work \n    4.9% \n    4.9% \n    7.3% \n    29.3% \n    53.7% \n  \n  \n    I understand what the key components of the RAP methodology are \n    4.9% \n    9.8% \n    12.2% \n    43.9% \n    29.3% \n  \n\n\n\n Sample size = 41"
  },
  {
    "objectID": "departments/nhs.html#rap-scores",
    "href": "departments/nhs.html#rap-scores",
    "title": "Department summary: NHS",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    72% \n  \n  \n    Peer review \n    Basic \n    50% \n  \n  \n    Version control \n    Basic \n    46% \n  \n  \n    Documentation \n    Basic \n    34% \n  \n  \n    Team open source code \n    Basic \n    18% \n  \n  \n    AQUA book guidance \n    Basic \n    8% \n  \n  \n    Functions \n    Advanced \n    64% \n  \n  \n    Follow code style guidelines \n    Advanced \n    56% \n  \n  \n    Function documentation \n    Advanced \n    32% \n  \n  \n    Dependency management \n    Advanced \n    30% \n  \n  \n    Unit testing \n    Advanced \n    24% \n  \n  \n    Code packages \n    Advanced \n    20% \n  \n  \n    Continuous integration \n    Advanced \n    20% \n  \n\n\n\n Sample size = 50\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14% \n  \n  \n    1 \n    24% \n  \n  \n    2 \n    22% \n  \n  \n    3 \n    14% \n  \n  \n    4 \n    16% \n  \n  \n    5 \n    6% \n  \n  \n    6 \n    4% \n  \n\n\n\n Sample size = 50\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14% \n  \n  \n    1 \n    18% \n  \n  \n    2 \n    22% \n  \n  \n    3 \n    24% \n  \n  \n    4 \n    8% \n  \n  \n    5 \n    4% \n  \n  \n    6 \n    10% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 50"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#how-to-use-this-research",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#how-to-use-this-research",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#coding-frequency-and-tools",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#coding-frequency-and-tools",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    11.1% \n  \n  \n    Rarely \n    14.8% \n  \n  \n    Sometimes \n    18.5% \n  \n  \n    Regularly \n    18.5% \n  \n  \n    All the time \n    37% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    70.4% \n    29.6% \n  \n  \n    Data cleaning \n    75% \n    25% \n  \n  \n    Data linking \n    77.8% \n    22.2% \n  \n  \n    Data transfer / migration \n    58.3% \n    41.7% \n  \n  \n    Data visualisation \n    66.7% \n    33.3% \n  \n  \n    Machine learning \n    0% \n    0% \n  \n  \n    Modelling \n    81.8% \n    18.2% \n  \n  \n    Quality assurance \n    60.9% \n    39.1% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.7% \n    48.1% \n    48.1% \n  \n  \n    Java / Scala \n    7.4% \n    40.7% \n    51.9% \n  \n  \n    Javascript / Typescript \n    18.5% \n    40.7% \n    40.7% \n  \n  \n    Matlab \n    3.7% \n    44.4% \n    51.9% \n  \n  \n    Python \n    37% \n    40.7% \n    22.2% \n  \n  \n    R \n    96.3% \n    0% \n    3.7% \n  \n  \n    SAS \n    48.1% \n    25.9% \n    25.9% \n  \n  \n    SPSS \n    88.9% \n    0% \n    11.1% \n  \n  \n    SQL \n    88.9% \n    11.1% \n    0% \n  \n  \n    Stata \n    18.5% \n    40.7% \n    40.7% \n  \n  \n    VBA \n    22.2% \n    51.9% \n    25.9% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.7% \n    0% \n    96.3% \n  \n  \n    Java / Scala \n    0% \n    0% \n    100% \n  \n  \n    Javascript / Typescript \n    11.1% \n    0% \n    88.9% \n  \n  \n    Matlab \n    0% \n    0% \n    100% \n  \n  \n    Python \n    7.4% \n    0% \n    92.6% \n  \n  \n    R \n    77.8% \n    3.7% \n    18.5% \n  \n  \n    SAS \n    29.6% \n    0% \n    70.4% \n  \n  \n    SPSS \n    77.8% \n    0% \n    22.2% \n  \n  \n    SQL \n    55.6% \n    0% \n    44.4% \n  \n  \n    Stata \n    3.7% \n    0% \n    96.3% \n  \n  \n    VBA \n    14.8% \n    0% \n    85.2% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    37% \n  \n  \n    No \n    22.2% \n  \n  \n    I don't know \n    40.7% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    29.6% \n  \n  \n    No \n    66.7% \n  \n  \n    I don't know \n    3.7% \n  \n\n\n\n Sample size = 27"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#coding-capability",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#coding-capability",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    7.7% \n  \n  \n    No change \n    23.1% \n  \n  \n    Slightly better \n    46.2% \n  \n  \n    Significantly better \n    23.1% \n  \n\n\n\n Sample size = 13\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    52% \n  \n  \n    In education \n    24% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    8% \n  \n  \n    Self-taught \n    16% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 25"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#coding-practices",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#coding-practices",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    70.8% \n    16.7% \n    4.2% \n    0% \n    8.3% \n    0% \n  \n  \n    Automated data quality assurance \n    0% \n    25% \n    16.7% \n    37.5% \n    12.5% \n    8.3% \n  \n  \n    Code review \n    0% \n    8.3% \n    20.8% \n    20.8% \n    33.3% \n    16.7% \n  \n  \n    Coding guidelines / Style guides \n    4.2% \n    20.8% \n    8.3% \n    33.3% \n    29.2% \n    4.2% \n  \n  \n    Functions \n    0% \n    16.7% \n    12.5% \n    33.3% \n    29.2% \n    8.3% \n  \n  \n    Open source own code \n    8.3% \n    70.8% \n    8.3% \n    4.2% \n    4.2% \n    4.2% \n  \n  \n    Packaging code \n    4.2% \n    50% \n    20.8% \n    25% \n    0% \n    0% \n  \n  \n    Standard directory structure \n    16.7% \n    25% \n    16.7% \n    12.5% \n    16.7% \n    12.5% \n  \n  \n    Unit testing \n    37.5% \n    16.7% \n    4.2% \n    16.7% \n    25% \n    0% \n  \n  \n    Use open source software \n    0% \n    12.5% \n    16.7% \n    12.5% \n    29.2% \n    29.2% \n  \n  \n    Version control \n    8.3% \n    58.3% \n    8.3% \n    16.7% \n    8.3% \n    0% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    29.2% \n    37.5% \n    20.8% \n    12.5% \n    0% \n    0% \n  \n  \n    Code comments \n    0% \n    8.3% \n    0% \n    12.5% \n    41.7% \n    37.5% \n  \n  \n    Data or assumptions registers \n    25% \n    50% \n    12.5% \n    8.3% \n    4.2% \n    0% \n  \n  \n    Desk notes \n    20.8% \n    50% \n    12.5% \n    12.5% \n    4.2% \n    0% \n  \n  \n    Documentation for each function or class \n    12.5% \n    20.8% \n    4.2% \n    29.2% \n    25% \n    8.3% \n  \n  \n    Flow charts \n    8.3% \n    29.2% \n    12.5% \n    16.7% \n    29.2% \n    4.2% \n  \n  \n    README files \n    8.3% \n    54.2% \n    12.5% \n    20.8% \n    4.2% \n    0% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    4.2% \n  \n  \n    No \n    41.7% \n  \n  \n    I don't know what dependency management is \n    54.2% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    37.5% \n  \n  \n    I don't know what continuous integration is \n    62.5% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    41.7% \n  \n  \n    I don't know what reproducible workflows are \n    58.3% \n  \n\n\n\n Sample size = 24"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#rap-knowledge-and-opinions",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#rap-knowledge-and-opinions",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    20% \n  \n  \n    I don't know what a RAP champion is \n    12% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    8% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    60% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    18.2% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    59.1% \n  \n  \n    I have read the RAP strategy \n    22.7% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    13.6% \n    9.1% \n    13.6% \n    27.3% \n    36.4% \n  \n  \n    I feel confident implementing RAP in my work \n    4.5% \n    18.2% \n    9.1% \n    54.5% \n    13.6% \n  \n  \n    I feel supported to implement RAP in my work \n    4.5% \n    9.1% \n    9.1% \n    59.1% \n    18.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    0% \n    13.6% \n    22.7% \n    45.5% \n    18.2% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    0% \n    9.1% \n    13.6% \n    22.7% \n    54.5% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    0% \n    22.7% \n    31.8% \n    45.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    0% \n    22.7% \n    18.2% \n    50% \n    9.1% \n  \n\n\n\n Sample size = 22"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#rap-scores",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#rap-scores",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    58.3% \n  \n  \n    Peer review \n    Basic \n    50% \n  \n  \n    Team open source code \n    Basic \n    8.3% \n  \n  \n    Version control \n    Basic \n    8.3% \n  \n  \n    AQUA book guidance \n    Basic \n    8.3% \n  \n  \n    Documentation \n    Basic \n    4.2% \n  \n  \n    Functions \n    Advanced \n    37.5% \n  \n  \n    Function documentation \n    Advanced \n    33.3% \n  \n  \n    Follow code style guidelines \n    Advanced \n    33.3% \n  \n  \n    Unit testing \n    Advanced \n    25% \n  \n  \n    Dependency management \n    Advanced \n    4.2% \n  \n  \n    Code packages \n    Advanced \n    0% \n  \n  \n    Continuous integration \n    Advanced \n    0% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    16.7% \n  \n  \n    1 \n    45.8% \n  \n  \n    2 \n    20.8% \n  \n  \n    3 \n    16.7% \n  \n  \n    4 \n    0% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    41.7% \n  \n  \n    1 \n    12.5% \n  \n  \n    2 \n    25% \n  \n  \n    3 \n    12.5% \n  \n  \n    4 \n    8.3% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 24"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#how-to-use-this-research",
    "href": "departments/office-for-national-statistics.html#how-to-use-this-research",
    "title": "Department summary: Office for National Statistics",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/office-for-national-statistics.html#coding-frequency-and-tools",
    "href": "departments/office-for-national-statistics.html#coding-frequency-and-tools",
    "title": "Department summary: Office for National Statistics",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    11.6% \n  \n  \n    Rarely \n    8.9% \n  \n  \n    Sometimes \n    17.3% \n  \n  \n    Regularly \n    31.1% \n  \n  \n    All the time \n    31.1% \n  \n\n\n\n Sample size = 225\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    84.8% \n    15.2% \n  \n  \n    Data cleaning \n    92.4% \n    7.6% \n  \n  \n    Data linking \n    92.9% \n    7.1% \n  \n  \n    Data transfer / migration \n    74.2% \n    25.8% \n  \n  \n    Data visualisation \n    69.8% \n    30.2% \n  \n  \n    Machine learning \n    93.2% \n    6.8% \n  \n  \n    Modelling \n    84.6% \n    15.4% \n  \n  \n    Quality assurance \n    76.8% \n    23.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.2% \n    67.1% \n    30.7% \n  \n  \n    Java / Scala \n    10.2% \n    64% \n    25.8% \n  \n  \n    Javascript / Typescript \n    6.2% \n    66.7% \n    27.1% \n  \n  \n    Matlab \n    5.8% \n    61.8% \n    32.4% \n  \n  \n    Python \n    93.3% \n    3.6% \n    3.1% \n  \n  \n    R \n    91.1% \n    5.3% \n    3.6% \n  \n  \n    SAS \n    45.8% \n    36% \n    18.2% \n  \n  \n    SPSS \n    40.4% \n    35.1% \n    24.4% \n  \n  \n    SQL \n    62.2% \n    28.4% \n    9.3% \n  \n  \n    Stata \n    25.3% \n    50.2% \n    24.4% \n  \n  \n    VBA \n    28.9% \n    53.8% \n    17.3% \n  \n\n\n\n Sample size = 225\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.6% \n    5.8% \n    86.7% \n  \n  \n    Java / Scala \n    6.2% \n    6.2% \n    87.6% \n  \n  \n    Javascript / Typescript \n    6.2% \n    5.8% \n    88% \n  \n  \n    Matlab \n    14.2% \n    7.1% \n    78.7% \n  \n  \n    Python \n    61.8% \n    0.9% \n    37.3% \n  \n  \n    R \n    62.2% \n    3.1% \n    34.7% \n  \n  \n    SAS \n    27.1% \n    6.7% \n    66.2% \n  \n  \n    SPSS \n    43.6% \n    4.4% \n    52% \n  \n  \n    SQL \n    48.4% \n    4.4% \n    47.1% \n  \n  \n    Stata \n    20% \n    4.9% \n    75.1% \n  \n  \n    VBA \n    17.3% \n    6.7% \n    76% \n  \n\n\n\n Sample size = 225\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    82.2% \n  \n  \n    No \n    2.7% \n  \n  \n    I don't know \n    15.1% \n  \n\n\n\n Sample size = 225\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    62.2% \n  \n  \n    No \n    35.1% \n  \n  \n    I don't know \n    2.7% \n  \n\n\n\n Sample size = 225"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#coding-capability",
    "href": "departments/office-for-national-statistics.html#coding-capability",
    "title": "Department summary: Office for National Statistics",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7% \n  \n  \n    Slightly worse \n    11% \n  \n  \n    No change \n    13.4% \n  \n  \n    Slightly better \n    27.9% \n  \n  \n    Significantly better \n    40.7% \n  \n\n\n\n Sample size = 172\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    21.6% \n  \n  \n    In education \n    50.2% \n  \n  \n    In private sector employment \n    1.4% \n  \n  \n    In public sector employment \n    13.1% \n  \n  \n    Self-taught \n    11.3% \n  \n  \n    Other \n    2.3% \n  \n\n\n\n Sample size = 213"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#coding-practices",
    "href": "departments/office-for-national-statistics.html#coding-practices",
    "title": "Department summary: Office for National Statistics",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    43.7% \n    13.6% \n    9% \n    14.1% \n    15.6% \n    4% \n  \n  \n    Automated data quality assurance \n    5.5% \n    19.6% \n    15.1% \n    28.1% \n    23.1% \n    8.5% \n  \n  \n    Code review \n    1.5% \n    9% \n    5% \n    27.6% \n    33.2% \n    23.6% \n  \n  \n    Coding guidelines / Style guides \n    7% \n    12.1% \n    8.5% \n    19.6% \n    35.7% \n    17.1% \n  \n  \n    Functions \n    3% \n    8.5% \n    9% \n    22.6% \n    30.7% \n    26.1% \n  \n  \n    Open source own code \n    18.1% \n    46.2% \n    16.1% \n    7.5% \n    8% \n    4% \n  \n  \n    Packaging code \n    14.6% \n    40.7% \n    16.1% \n    16.1% \n    6.5% \n    6% \n  \n  \n    Standard directory structure \n    33.7% \n    14.6% \n    9% \n    12.6% \n    20.1% \n    10.1% \n  \n  \n    Unit testing \n    26.6% \n    17.6% \n    14.1% \n    18.1% \n    13.6% \n    10.1% \n  \n  \n    Use open source software \n    12.1% \n    7.5% \n    6% \n    11.1% \n    27.6% \n    35.7% \n  \n  \n    Version control \n    7.5% \n    24.6% \n    8.5% \n    13.1% \n    19.6% \n    26.6% \n  \n\n\n\n Sample size = 199\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    31.7% \n    36.7% \n    8.5% \n    12.6% \n    7% \n    3.5% \n  \n  \n    Code comments \n    3% \n    3.5% \n    1% \n    7.5% \n    28.1% \n    56.8% \n  \n  \n    Data or assumptions registers \n    29.6% \n    45.2% \n    6.5% \n    8% \n    6.5% \n    4% \n  \n  \n    Desk notes \n    12.1% \n    16.1% \n    11.1% \n    23.6% \n    23.1% \n    14.1% \n  \n  \n    Documentation for each function or class \n    13.6% \n    25.1% \n    11.1% \n    15.1% \n    19.1% \n    16.1% \n  \n  \n    Flow charts \n    7.5% \n    41.7% \n    16.1% \n    18.1% \n    13.6% \n    3% \n  \n  \n    README files \n    8.5% \n    27.1% \n    14.1% \n    21.6% \n    15.1% \n    13.6% \n  \n\n\n\n Sample size = 199\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    29.1% \n  \n  \n    No \n    30.7% \n  \n  \n    I don't know what dependency management is \n    40.2% \n  \n\n\n\n Sample size = 199\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    16.1% \n  \n  \n    No \n    40.7% \n  \n  \n    I don't know what continuous integration is \n    43.2% \n  \n\n\n\n Sample size = 199\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    4.5% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what reproducible workflows are \n    41.7% \n  \n\n\n\n Sample size = 199"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#rap-knowledge-and-opinions",
    "href": "departments/office-for-national-statistics.html#rap-knowledge-and-opinions",
    "title": "Department summary: Office for National Statistics",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    8.1% \n  \n  \n    I don't know what a RAP champion is \n    23.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    47.5% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    1.4% \n  \n  \n    I know who the RAP champion in my department is \n    19.5% \n  \n\n\n\n Sample size = 221\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    23.2% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    53.6% \n  \n  \n    I have read the RAP strategy \n    23.2% \n  \n\n\n\n Sample size = 207\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    16.9% \n    20.3% \n    24.6% \n    21.7% \n    16.4% \n  \n  \n    I feel confident implementing RAP in my work \n    13% \n    25.1% \n    23.7% \n    24.2% \n    14% \n  \n  \n    I feel supported to implement RAP in my work \n    8.7% \n    10.1% \n    28.5% \n    34.3% \n    18.4% \n  \n  \n    I know where to find resources to help me implement RAP \n    8.7% \n    18.4% \n    21.3% \n    30.4% \n    21.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    8.7% \n    11.1% \n    29% \n    28% \n    23.2% \n  \n  \n    I think it is important to implement RAP in my work \n    4.3% \n    2.9% \n    21.3% \n    36.7% \n    34.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    10.6% \n    18.4% \n    19.3% \n    34.8% \n    16.9% \n  \n\n\n\n Sample size = 207"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#rap-scores",
    "href": "departments/office-for-national-statistics.html#rap-scores",
    "title": "Department summary: Office for National Statistics",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    63.3% \n  \n  \n    Peer review \n    Basic \n    56.8% \n  \n  \n    Version control \n    Basic \n    46.2% \n  \n  \n    Documentation \n    Basic \n    26.6% \n  \n  \n    AQUA book guidance \n    Basic \n    19.6% \n  \n  \n    Team open source code \n    Basic \n    12.1% \n  \n  \n    Functions \n    Advanced \n    56.8% \n  \n  \n    Follow code style guidelines \n    Advanced \n    52.8% \n  \n  \n    Function documentation \n    Advanced \n    35.2% \n  \n  \n    Dependency management \n    Advanced \n    29.1% \n  \n  \n    Unit testing \n    Advanced \n    23.6% \n  \n  \n    Continuous integration \n    Advanced \n    16.1% \n  \n  \n    Code packages \n    Advanced \n    12.6% \n  \n\n\n\n Sample size = 199\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    15.6% \n  \n  \n    1 \n    23.6% \n  \n  \n    2 \n    18.1% \n  \n  \n    3 \n    18.1% \n  \n  \n    4 \n    15.1% \n  \n  \n    5 \n    7% \n  \n  \n    6 \n    2.5% \n  \n\n\n\n Sample size = 199\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.1% \n  \n  \n    1 \n    23.6% \n  \n  \n    2 \n    13.1% \n  \n  \n    3 \n    16.1% \n  \n  \n    4 \n    8.5% \n  \n  \n    5 \n    8.5% \n  \n  \n    6 \n    5% \n  \n  \n    7 \n    3% \n  \n\n\n\n Sample size = 199"
  },
  {
    "objectID": "departments/public-health-scotland.html#how-to-use-this-research",
    "href": "departments/public-health-scotland.html#how-to-use-this-research",
    "title": "Department summary: Public Health Scotland",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/public-health-scotland.html#coding-frequency-and-tools",
    "href": "departments/public-health-scotland.html#coding-frequency-and-tools",
    "title": "Department summary: Public Health Scotland",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0% \n  \n  \n    Rarely \n    0% \n  \n  \n    Sometimes \n    7.9% \n  \n  \n    Regularly \n    28.9% \n  \n  \n    All the time \n    63.2% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    94.7% \n    5.3% \n  \n  \n    Data cleaning \n    94.7% \n    5.3% \n  \n  \n    Data linking \n    93.9% \n    6.1% \n  \n  \n    Data transfer / migration \n    66.7% \n    33.3% \n  \n  \n    Data visualisation \n    91.4% \n    8.6% \n  \n  \n    Machine learning \n    100% \n    0% \n  \n  \n    Modelling \n    92.9% \n    7.1% \n  \n  \n    Quality assurance \n    88.9% \n    11.1% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.3% \n    44.7% \n    50% \n  \n  \n    Java / Scala \n    2.6% \n    50% \n    47.4% \n  \n  \n    Javascript / Typescript \n    18.4% \n    50% \n    31.6% \n  \n  \n    Matlab \n    0% \n    39.5% \n    60.5% \n  \n  \n    Python \n    52.6% \n    23.7% \n    23.7% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SAS \n    10.5% \n    39.5% \n    50% \n  \n  \n    SPSS \n    97.4% \n    0% \n    2.6% \n  \n  \n    SQL \n    89.5% \n    2.6% \n    7.9% \n  \n  \n    Stata \n    13.2% \n    31.6% \n    55.3% \n  \n  \n    VBA \n    55.3% \n    28.9% \n    15.8% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5.3% \n    5.3% \n    89.5% \n  \n  \n    Java / Scala \n    5.3% \n    2.6% \n    92.1% \n  \n  \n    Javascript / Typescript \n    13.2% \n    2.6% \n    84.2% \n  \n  \n    Matlab \n    23.7% \n    0% \n    76.3% \n  \n  \n    Python \n    31.6% \n    0% \n    68.4% \n  \n  \n    R \n    97.4% \n    0% \n    2.6% \n  \n  \n    SAS \n    15.8% \n    0% \n    84.2% \n  \n  \n    SPSS \n    52.6% \n    0% \n    47.4% \n  \n  \n    SQL \n    68.4% \n    0% \n    31.6% \n  \n  \n    Stata \n    13.2% \n    2.6% \n    84.2% \n  \n  \n    VBA \n    26.3% \n    0% \n    73.7% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    97.4% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    2.6% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    78.9% \n  \n  \n    No \n    18.4% \n  \n  \n    I don't know \n    2.6% \n  \n\n\n\n Sample size = 38"
  },
  {
    "objectID": "departments/public-health-scotland.html#coding-capability",
    "href": "departments/public-health-scotland.html#coding-capability",
    "title": "Department summary: Public Health Scotland",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.1% \n  \n  \n    Slightly worse \n    6.2% \n  \n  \n    No change \n    18.8% \n  \n  \n    Slightly better \n    18.8% \n  \n  \n    Significantly better \n    53.1% \n  \n\n\n\n Sample size = 32\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    15.8% \n  \n  \n    In education \n    68.4% \n  \n  \n    In private sector employment \n    7.9% \n  \n  \n    In public sector employment \n    0% \n  \n  \n    Self-taught \n    5.3% \n  \n  \n    Other \n    2.6% \n  \n\n\n\n Sample size = 38"
  },
  {
    "objectID": "departments/public-health-scotland.html#coding-practices",
    "href": "departments/public-health-scotland.html#coding-practices",
    "title": "Department summary: Public Health Scotland",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    89.5% \n    10.5% \n    0% \n    0% \n    0% \n    0% \n  \n  \n    Automated data quality assurance \n    0% \n    7.9% \n    23.7% \n    31.6% \n    36.8% \n    0% \n  \n  \n    Code review \n    0% \n    2.6% \n    2.6% \n    23.7% \n    36.8% \n    34.2% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    2.6% \n    5.3% \n    26.3% \n    55.3% \n    10.5% \n  \n  \n    Functions \n    2.6% \n    2.6% \n    7.9% \n    23.7% \n    28.9% \n    34.2% \n  \n  \n    Open source own code \n    7.9% \n    28.9% \n    18.4% \n    23.7% \n    13.2% \n    7.9% \n  \n  \n    Packaging code \n    10.5% \n    50% \n    13.2% \n    18.4% \n    2.6% \n    5.3% \n  \n  \n    Standard directory structure \n    13.2% \n    15.8% \n    0% \n    34.2% \n    26.3% \n    10.5% \n  \n  \n    Unit testing \n    26.3% \n    15.8% \n    15.8% \n    18.4% \n    18.4% \n    5.3% \n  \n  \n    Use open source software \n    2.6% \n    2.6% \n    0% \n    5.3% \n    18.4% \n    71.1% \n  \n  \n    Version control \n    2.6% \n    10.5% \n    13.2% \n    18.4% \n    21.1% \n    34.2% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    28.9% \n    44.7% \n    7.9% \n    5.3% \n    7.9% \n    5.3% \n  \n  \n    Code comments \n    0% \n    0% \n    0% \n    0% \n    26.3% \n    73.7% \n  \n  \n    Data or assumptions registers \n    42.1% \n    47.4% \n    7.9% \n    2.6% \n    0% \n    0% \n  \n  \n    Desk notes \n    44.7% \n    26.3% \n    5.3% \n    13.2% \n    10.5% \n    0% \n  \n  \n    Documentation for each function or class \n    5.3% \n    23.7% \n    13.2% \n    28.9% \n    13.2% \n    15.8% \n  \n  \n    Flow charts \n    5.3% \n    55.3% \n    15.8% \n    21.1% \n    2.6% \n    0% \n  \n  \n    README files \n    0% \n    5.3% \n    34.2% \n    34.2% \n    13.2% \n    13.2% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    21.1% \n  \n  \n    No \n    42.1% \n  \n  \n    I don't know what dependency management is \n    36.8% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    15.8% \n  \n  \n    No \n    23.7% \n  \n  \n    I don't know what continuous integration is \n    60.5% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    71.1% \n  \n  \n    I don't know what reproducible workflows are \n    28.9% \n  \n\n\n\n Sample size = 38"
  },
  {
    "objectID": "departments/public-health-scotland.html#rap-knowledge-and-opinions",
    "href": "departments/public-health-scotland.html#rap-knowledge-and-opinions",
    "title": "Department summary: Public Health Scotland",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    13.5% \n  \n  \n    I don't know what a RAP champion is \n    27% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    40.5% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    8.1% \n  \n  \n    I know who the RAP champion in my department is \n    10.8% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    27.3% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    45.5% \n  \n  \n    I have read the RAP strategy \n    27.3% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    15.2% \n    18.2% \n    36.4% \n    9.1% \n    21.2% \n  \n  \n    I feel confident implementing RAP in my work \n    6.1% \n    18.2% \n    21.2% \n    33.3% \n    21.2% \n  \n  \n    I feel supported to implement RAP in my work \n    6.1% \n    12.1% \n    51.5% \n    24.2% \n    6.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    6.1% \n    24.2% \n    33.3% \n    24.2% \n    12.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    12.1% \n    15.2% \n    21.2% \n    27.3% \n    24.2% \n  \n  \n    I think it is important to implement RAP in my work \n    3% \n    6.1% \n    15.2% \n    39.4% \n    36.4% \n  \n  \n    I understand what the key components of the RAP methodology are \n    6.1% \n    12.1% \n    15.2% \n    54.5% \n    12.1% \n  \n\n\n\n Sample size = 33"
  },
  {
    "objectID": "departments/public-health-scotland.html#rap-scores",
    "href": "departments/public-health-scotland.html#rap-scores",
    "title": "Department summary: Public Health Scotland",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    89.5% \n  \n  \n    Peer review \n    Basic \n    71.1% \n  \n  \n    Version control \n    Basic \n    55.3% \n  \n  \n    Documentation \n    Basic \n    26.3% \n  \n  \n    Team open source code \n    Basic \n    21.1% \n  \n  \n    AQUA book guidance \n    Basic \n    0% \n  \n  \n    Follow code style guidelines \n    Advanced \n    65.8% \n  \n  \n    Functions \n    Advanced \n    63.2% \n  \n  \n    Function documentation \n    Advanced \n    28.9% \n  \n  \n    Unit testing \n    Advanced \n    23.7% \n  \n  \n    Dependency management \n    Advanced \n    21.1% \n  \n  \n    Continuous integration \n    Advanced \n    15.8% \n  \n  \n    Code packages \n    Advanced \n    7.9% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    2.6% \n  \n  \n    1 \n    21.1% \n  \n  \n    2 \n    23.7% \n  \n  \n    3 \n    23.7% \n  \n  \n    4 \n    21.1% \n  \n  \n    5 \n    7.9% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    10.5% \n  \n  \n    1 \n    28.9% \n  \n  \n    2 \n    23.7% \n  \n  \n    3 \n    18.4% \n  \n  \n    4 \n    7.9% \n  \n  \n    5 \n    2.6% \n  \n  \n    6 \n    5.3% \n  \n  \n    7 \n    2.6% \n  \n\n\n\n Sample size = 38"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/scottish-government-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/scottish-government-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    12.5% \n  \n  \n    Rarely \n    5% \n  \n  \n    Sometimes \n    15% \n  \n  \n    Regularly \n    37.5% \n  \n  \n    All the time \n    30% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    87.5% \n    12.5% \n  \n  \n    Data cleaning \n    94.1% \n    5.9% \n  \n  \n    Data linking \n    100% \n    0% \n  \n  \n    Data transfer / migration \n    66.7% \n    33.3% \n  \n  \n    Data visualisation \n    71.1% \n    28.9% \n  \n  \n    Machine learning \n    66.7% \n    33.3% \n  \n  \n    Modelling \n    100% \n    0% \n  \n  \n    Quality assurance \n    83.8% \n    16.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.5% \n    70% \n    27.5% \n  \n  \n    Java / Scala \n    0% \n    75% \n    25% \n  \n  \n    Javascript / Typescript \n    5% \n    72.5% \n    22.5% \n  \n  \n    Matlab \n    10% \n    60% \n    30% \n  \n  \n    Python \n    47.5% \n    40% \n    12.5% \n  \n  \n    R \n    95% \n    5% \n    0% \n  \n  \n    SAS \n    70% \n    25% \n    5% \n  \n  \n    SPSS \n    35% \n    50% \n    15% \n  \n  \n    SQL \n    45% \n    52.5% \n    2.5% \n  \n  \n    Stata \n    7.5% \n    70% \n    22.5% \n  \n  \n    VBA \n    40% \n    55% \n    5% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    10% \n    7.5% \n    82.5% \n  \n  \n    Java / Scala \n    5% \n    5% \n    90% \n  \n  \n    Javascript / Typescript \n    10% \n    7.5% \n    82.5% \n  \n  \n    Matlab \n    25% \n    0% \n    75% \n  \n  \n    Python \n    35% \n    0% \n    65% \n  \n  \n    R \n    75% \n    0% \n    25% \n  \n  \n    SAS \n    57.5% \n    0% \n    42.5% \n  \n  \n    SPSS \n    30% \n    2.5% \n    67.5% \n  \n  \n    SQL \n    37.5% \n    5% \n    57.5% \n  \n  \n    Stata \n    10% \n    2.5% \n    87.5% \n  \n  \n    VBA \n    22.5% \n    7.5% \n    70% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    75% \n  \n  \n    No \n    5% \n  \n  \n    I don't know \n    20% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    45% \n  \n  \n    No \n    50% \n  \n  \n    I don't know \n    5% \n  \n\n\n\n Sample size = 40"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#coding-capability",
    "href": "departments/scottish-government-excl-agencies-.html#coding-capability",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.2% \n  \n  \n    Slightly worse \n    9.7% \n  \n  \n    No change \n    16.1% \n  \n  \n    Slightly better \n    38.7% \n  \n  \n    Significantly better \n    32.3% \n  \n\n\n\n Sample size = 31\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    18.9% \n  \n  \n    In education \n    40.5% \n  \n  \n    In private sector employment \n    2.7% \n  \n  \n    In public sector employment \n    16.2% \n  \n  \n    Self-taught \n    18.9% \n  \n  \n    Other \n    2.7% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#coding-practices",
    "href": "departments/scottish-government-excl-agencies-.html#coding-practices",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    48.6% \n    20% \n    8.6% \n    5.7% \n    14.3% \n    2.9% \n  \n  \n    Automated data quality assurance \n    0% \n    14.3% \n    22.9% \n    31.4% \n    28.6% \n    2.9% \n  \n  \n    Code review \n    0% \n    5.7% \n    40% \n    20% \n    31.4% \n    2.9% \n  \n  \n    Coding guidelines / Style guides \n    11.4% \n    2.9% \n    0% \n    25.7% \n    42.9% \n    17.1% \n  \n  \n    Functions \n    5.7% \n    8.6% \n    8.6% \n    17.1% \n    34.3% \n    25.7% \n  \n  \n    Open source own code \n    2.9% \n    40% \n    20% \n    20% \n    14.3% \n    2.9% \n  \n  \n    Packaging code \n    11.4% \n    40% \n    20% \n    8.6% \n    20% \n    0% \n  \n  \n    Standard directory structure \n    25.7% \n    5.7% \n    0% \n    8.6% \n    45.7% \n    14.3% \n  \n  \n    Unit testing \n    25.7% \n    17.1% \n    22.9% \n    14.3% \n    20% \n    0% \n  \n  \n    Use open source software \n    5.7% \n    5.7% \n    11.4% \n    11.4% \n    31.4% \n    34.3% \n  \n  \n    Version control \n    2.9% \n    48.6% \n    8.6% \n    17.1% \n    17.1% \n    5.7% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    28.6% \n    31.4% \n    8.6% \n    14.3% \n    17.1% \n    0% \n  \n  \n    Code comments \n    0% \n    2.9% \n    2.9% \n    2.9% \n    31.4% \n    60% \n  \n  \n    Data or assumptions registers \n    25.7% \n    45.7% \n    8.6% \n    8.6% \n    8.6% \n    2.9% \n  \n  \n    Desk notes \n    11.4% \n    0% \n    11.4% \n    37.1% \n    28.6% \n    11.4% \n  \n  \n    Documentation for each function or class \n    17.1% \n    14.3% \n    14.3% \n    20% \n    28.6% \n    5.7% \n  \n  \n    Flow charts \n    5.7% \n    31.4% \n    20% \n    25.7% \n    14.3% \n    2.9% \n  \n  \n    README files \n    2.9% \n    20% \n    20% \n    17.1% \n    37.1% \n    2.9% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    22.9% \n  \n  \n    No \n    40% \n  \n  \n    I don't know what dependency management is \n    37.1% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    8.6% \n  \n  \n    No \n    48.6% \n  \n  \n    I don't know what continuous integration is \n    42.9% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    65.7% \n  \n  \n    I don't know what reproducible workflows are \n    34.3% \n  \n\n\n\n Sample size = 35"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#rap-knowledge-and-opinions",
    "href": "departments/scottish-government-excl-agencies-.html#rap-knowledge-and-opinions",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    10.3% \n  \n  \n    I don't know what a RAP champion is \n    17.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    33.3% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.1% \n  \n  \n    I know who the RAP champion in my department is \n    33.3% \n  \n\n\n\n Sample size = 39\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    11.1% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    44.4% \n  \n  \n    I have read the RAP strategy \n    44.4% \n  \n\n\n\n Sample size = 36\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    16.7% \n    22.2% \n    22.2% \n    27.8% \n    11.1% \n  \n  \n    I feel confident implementing RAP in my work \n    5.6% \n    36.1% \n    13.9% \n    33.3% \n    11.1% \n  \n  \n    I feel supported to implement RAP in my work \n    8.3% \n    11.1% \n    33.3% \n    41.7% \n    5.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    0% \n    19.4% \n    11.1% \n    50% \n    19.4% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    2.8% \n    11.1% \n    38.9% \n    30.6% \n    16.7% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    2.8% \n    22.2% \n    52.8% \n    22.2% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.6% \n    16.7% \n    19.4% \n    38.9% \n    19.4% \n  \n\n\n\n Sample size = 36"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#rap-scores",
    "href": "departments/scottish-government-excl-agencies-.html#rap-scores",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    65.7% \n  \n  \n    Documentation \n    Basic \n    40% \n  \n  \n    Peer review \n    Basic \n    34.3% \n  \n  \n    Version control \n    Basic \n    22.9% \n  \n  \n    Team open source code \n    Basic \n    17.1% \n  \n  \n    AQUA book guidance \n    Basic \n    17.1% \n  \n  \n    Functions \n    Advanced \n    60% \n  \n  \n    Follow code style guidelines \n    Advanced \n    60% \n  \n  \n    Function documentation \n    Advanced \n    34.3% \n  \n  \n    Dependency management \n    Advanced \n    22.9% \n  \n  \n    Unit testing \n    Advanced \n    20% \n  \n  \n    Code packages \n    Advanced \n    20% \n  \n  \n    Continuous integration \n    Advanced \n    8.6% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14.3% \n  \n  \n    1 \n    31.4% \n  \n  \n    2 \n    25.7% \n  \n  \n    3 \n    2.9% \n  \n  \n    4 \n    22.9% \n  \n  \n    5 \n    2.9% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    17.1% \n  \n  \n    1 \n    20% \n  \n  \n    2 \n    25.7% \n  \n  \n    3 \n    11.4% \n  \n  \n    4 \n    14.3% \n  \n  \n    5 \n    8.6% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    2.9% \n  \n\n\n\n Sample size = 35"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#how-to-use-this-research",
    "href": "departments/uk-health-security-agency.html#how-to-use-this-research",
    "title": "Department summary: UK Health Security Agency",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/uk-health-security-agency.html#coding-frequency-and-tools",
    "href": "departments/uk-health-security-agency.html#coding-frequency-and-tools",
    "title": "Department summary: UK Health Security Agency",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0% \n  \n  \n    Rarely \n    12% \n  \n  \n    Sometimes \n    16% \n  \n  \n    Regularly \n    24% \n  \n  \n    All the time \n    48% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    88% \n    12% \n  \n  \n    Data cleaning \n    81.8% \n    18.2% \n  \n  \n    Data linking \n    84.2% \n    15.8% \n  \n  \n    Data transfer / migration \n    86.7% \n    13.3% \n  \n  \n    Data visualisation \n    87.5% \n    12.5% \n  \n  \n    Machine learning \n    87.5% \n    12.5% \n  \n  \n    Modelling \n    83.3% \n    16.7% \n  \n  \n    Quality assurance \n    81.8% \n    18.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    44% \n    36% \n    20% \n  \n  \n    Java / Scala \n    20% \n    64% \n    16% \n  \n  \n    Javascript / Typescript \n    32% \n    52% \n    16% \n  \n  \n    Matlab \n    8% \n    60% \n    32% \n  \n  \n    Python \n    96% \n    0% \n    4% \n  \n  \n    R \n    96% \n    0% \n    4% \n  \n  \n    SAS \n    12% \n    64% \n    24% \n  \n  \n    SPSS \n    20% \n    56% \n    24% \n  \n  \n    SQL \n    88% \n    8% \n    4% \n  \n  \n    Stata \n    52% \n    40% \n    8% \n  \n  \n    VBA \n    52% \n    36% \n    12% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    12% \n    4% \n    84% \n  \n  \n    Java / Scala \n    8% \n    4% \n    88% \n  \n  \n    Javascript / Typescript \n    16% \n    8% \n    76% \n  \n  \n    Matlab \n    16% \n    4% \n    80% \n  \n  \n    Python \n    80% \n    0% \n    20% \n  \n  \n    R \n    84% \n    0% \n    16% \n  \n  \n    SAS \n    12% \n    4% \n    84% \n  \n  \n    SPSS \n    20% \n    4% \n    76% \n  \n  \n    SQL \n    80% \n    0% \n    20% \n  \n  \n    Stata \n    24% \n    4% \n    72% \n  \n  \n    VBA \n    20% \n    4% \n    76% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    92% \n  \n  \n    No \n    4% \n  \n  \n    I don't know \n    4% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    80% \n  \n  \n    No \n    20% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 25"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#coding-capability",
    "href": "departments/uk-health-security-agency.html#coding-capability",
    "title": "Department summary: UK Health Security Agency",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    18.2% \n  \n  \n    No change \n    4.5% \n  \n  \n    Slightly better \n    45.5% \n  \n  \n    Significantly better \n    31.8% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    12% \n  \n  \n    In education \n    44% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    16% \n  \n  \n    Self-taught \n    24% \n  \n  \n    Other \n    4% \n  \n\n\n\n Sample size = 25"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#coding-practices",
    "href": "departments/uk-health-security-agency.html#coding-practices",
    "title": "Department summary: UK Health Security Agency",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    32% \n    20% \n    12% \n    16% \n    12% \n    8% \n  \n  \n    Automated data quality assurance \n    4% \n    24% \n    20% \n    28% \n    4% \n    20% \n  \n  \n    Code review \n    0% \n    0% \n    12% \n    40% \n    32% \n    16% \n  \n  \n    Coding guidelines / Style guides \n    4% \n    4% \n    4% \n    24% \n    52% \n    12% \n  \n  \n    Functions \n    4% \n    0% \n    4% \n    32% \n    28% \n    32% \n  \n  \n    Open source own code \n    4% \n    32% \n    24% \n    24% \n    16% \n    0% \n  \n  \n    Packaging code \n    4% \n    24% \n    28% \n    24% \n    16% \n    4% \n  \n  \n    Standard directory structure \n    8% \n    12% \n    0% \n    36% \n    24% \n    20% \n  \n  \n    Unit testing \n    8% \n    4% \n    36% \n    32% \n    16% \n    4% \n  \n  \n    Use open source software \n    0% \n    0% \n    4% \n    12% \n    20% \n    64% \n  \n  \n    Version control \n    0% \n    16% \n    8% \n    0% \n    16% \n    60% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    24% \n    28% \n    20% \n    16% \n    8% \n    4% \n  \n  \n    Code comments \n    8% \n    0% \n    0% \n    8% \n    32% \n    52% \n  \n  \n    Data or assumptions registers \n    44% \n    28% \n    12% \n    12% \n    0% \n    4% \n  \n  \n    Desk notes \n    36% \n    12% \n    16% \n    16% \n    12% \n    8% \n  \n  \n    Documentation for each function or class \n    12% \n    20% \n    0% \n    28% \n    24% \n    16% \n  \n  \n    Flow charts \n    12% \n    24% \n    24% \n    32% \n    4% \n    4% \n  \n  \n    README files \n    8% \n    4% \n    12% \n    20% \n    32% \n    24% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    52% \n  \n  \n    No \n    36% \n  \n  \n    I don't know what dependency management is \n    12% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    32% \n  \n  \n    No \n    48% \n  \n  \n    I don't know what continuous integration is \n    20% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    8% \n  \n  \n    No \n    80% \n  \n  \n    I don't know what reproducible workflows are \n    12% \n  \n\n\n\n Sample size = 25"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#rap-knowledge-and-opinions",
    "href": "departments/uk-health-security-agency.html#rap-knowledge-and-opinions",
    "title": "Department summary: UK Health Security Agency",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    28% \n  \n  \n    I don't know what a RAP champion is \n    20% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    24% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    12% \n  \n  \n    I know who the RAP champion in my department is \n    16% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    11.1% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    55.6% \n  \n  \n    I have read the RAP strategy \n    33.3% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    5.6% \n    27.8% \n    33.3% \n    16.7% \n    16.7% \n  \n  \n    I feel confident implementing RAP in my work \n    5.6% \n    22.2% \n    27.8% \n    27.8% \n    16.7% \n  \n  \n    I feel supported to implement RAP in my work \n    11.1% \n    22.2% \n    22.2% \n    33.3% \n    11.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.6% \n    22.2% \n    11.1% \n    44.4% \n    16.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.6% \n    16.7% \n    22.2% \n    33.3% \n    22.2% \n  \n  \n    I think it is important to implement RAP in my work \n    5.6% \n    5.6% \n    0% \n    55.6% \n    33.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.6% \n    27.8% \n    16.7% \n    38.9% \n    11.1% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#rap-scores",
    "href": "departments/uk-health-security-agency.html#rap-scores",
    "title": "Department summary: UK Health Security Agency",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    84% \n  \n  \n    Version control \n    Basic \n    76% \n  \n  \n    Documentation \n    Basic \n    56% \n  \n  \n    Peer review \n    Basic \n    48% \n  \n  \n    AQUA book guidance \n    Basic \n    20% \n  \n  \n    Team open source code \n    Basic \n    16% \n  \n  \n    Follow code style guidelines \n    Advanced \n    64% \n  \n  \n    Functions \n    Advanced \n    60% \n  \n  \n    Dependency management \n    Advanced \n    52% \n  \n  \n    Function documentation \n    Advanced \n    40% \n  \n  \n    Continuous integration \n    Advanced \n    32% \n  \n  \n    Unit testing \n    Advanced \n    20% \n  \n  \n    Code packages \n    Advanced \n    20% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    4% \n  \n  \n    1 \n    20% \n  \n  \n    2 \n    12% \n  \n  \n    3 \n    16% \n  \n  \n    4 \n    32% \n  \n  \n    5 \n    16% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    12% \n  \n  \n    1 \n    12% \n  \n  \n    2 \n    12% \n  \n  \n    3 \n    36% \n  \n  \n    4 \n    12% \n  \n  \n    5 \n    4% \n  \n  \n    6 \n    8% \n  \n  \n    7 \n    4% \n  \n\n\n\n Sample size = 25"
  },
  {
    "objectID": "departments/welsh-government.html#how-to-use-this-research",
    "href": "departments/welsh-government.html#how-to-use-this-research",
    "title": "Department summary: Welsh Government",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/welsh-government.html#coding-frequency-and-tools",
    "href": "departments/welsh-government.html#coding-frequency-and-tools",
    "title": "Department summary: Welsh Government",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    17.4% \n  \n  \n    Rarely \n    13% \n  \n  \n    Sometimes \n    21.7% \n  \n  \n    Regularly \n    30.4% \n  \n  \n    All the time \n    17.4% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    90% \n    10% \n  \n  \n    Data cleaning \n    92.3% \n    7.7% \n  \n  \n    Data linking \n    92.3% \n    7.7% \n  \n  \n    Data transfer / migration \n    83.3% \n    16.7% \n  \n  \n    Data visualisation \n    64.7% \n    35.3% \n  \n  \n    Machine learning \n    0% \n    0% \n  \n  \n    Modelling \n    100% \n    0% \n  \n  \n    Quality assurance \n    63.2% \n    36.8% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0% \n    60.9% \n    39.1% \n  \n  \n    Java / Scala \n    0% \n    60.9% \n    39.1% \n  \n  \n    Javascript / Typescript \n    0% \n    60.9% \n    39.1% \n  \n  \n    Matlab \n    0% \n    65.2% \n    34.8% \n  \n  \n    Python \n    82.6% \n    8.7% \n    8.7% \n  \n  \n    R \n    82.6% \n    8.7% \n    8.7% \n  \n  \n    SAS \n    69.6% \n    21.7% \n    8.7% \n  \n  \n    SPSS \n    56.5% \n    26.1% \n    17.4% \n  \n  \n    SQL \n    91.3% \n    8.7% \n    0% \n  \n  \n    Stata \n    26.1% \n    56.5% \n    17.4% \n  \n  \n    VBA \n    47.8% \n    34.8% \n    17.4% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4.3% \n    17.4% \n    78.3% \n  \n  \n    Java / Scala \n    21.7% \n    13% \n    65.2% \n  \n  \n    Javascript / Typescript \n    8.7% \n    13% \n    78.3% \n  \n  \n    Matlab \n    13% \n    13% \n    73.9% \n  \n  \n    Python \n    34.8% \n    4.3% \n    60.9% \n  \n  \n    R \n    52.2% \n    4.3% \n    43.5% \n  \n  \n    SAS \n    47.8% \n    4.3% \n    47.8% \n  \n  \n    SPSS \n    47.8% \n    8.7% \n    43.5% \n  \n  \n    SQL \n    69.6% \n    17.4% \n    13% \n  \n  \n    Stata \n    17.4% \n    8.7% \n    73.9% \n  \n  \n    VBA \n    34.8% \n    0% \n    65.2% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    17.4% \n  \n  \n    No \n    39.1% \n  \n  \n    I don't know \n    43.5% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    30.4% \n  \n  \n    No \n    69.6% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 23"
  },
  {
    "objectID": "departments/welsh-government.html#coding-capability",
    "href": "departments/welsh-government.html#coding-capability",
    "title": "Department summary: Welsh Government",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    26.3% \n  \n  \n    Slightly worse \n    10.5% \n  \n  \n    No change \n    5.3% \n  \n  \n    Slightly better \n    31.6% \n  \n  \n    Significantly better \n    26.3% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    9.5% \n  \n  \n    In education \n    81% \n  \n  \n    In private sector employment \n    0% \n  \n  \n    In public sector employment \n    4.8% \n  \n  \n    Self-taught \n    4.8% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "departments/welsh-government.html#coding-practices",
    "href": "departments/welsh-government.html#coding-practices",
    "title": "Department summary: Welsh Government",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    36.8% \n    26.3% \n    10.5% \n    15.8% \n    5.3% \n    5.3% \n  \n  \n    Automated data quality assurance \n    5.3% \n    21.1% \n    31.6% \n    15.8% \n    21.1% \n    5.3% \n  \n  \n    Code review \n    0% \n    15.8% \n    15.8% \n    21.1% \n    36.8% \n    10.5% \n  \n  \n    Coding guidelines / Style guides \n    5.3% \n    10.5% \n    15.8% \n    26.3% \n    31.6% \n    10.5% \n  \n  \n    Functions \n    0% \n    31.6% \n    5.3% \n    36.8% \n    15.8% \n    10.5% \n  \n  \n    Open source own code \n    21.1% \n    63.2% \n    0% \n    15.8% \n    0% \n    0% \n  \n  \n    Packaging code \n    15.8% \n    52.6% \n    21.1% \n    5.3% \n    5.3% \n    0% \n  \n  \n    Standard directory structure \n    26.3% \n    15.8% \n    5.3% \n    15.8% \n    26.3% \n    10.5% \n  \n  \n    Unit testing \n    36.8% \n    31.6% \n    5.3% \n    21.1% \n    0% \n    5.3% \n  \n  \n    Use open source software \n    0% \n    26.3% \n    10.5% \n    15.8% \n    21.1% \n    26.3% \n  \n  \n    Version control \n    5.3% \n    68.4% \n    5.3% \n    10.5% \n    10.5% \n    0% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    26.3% \n    42.1% \n    21.1% \n    0% \n    0% \n    10.5% \n  \n  \n    Code comments \n    5.3% \n    5.3% \n    0% \n    10.5% \n    31.6% \n    47.4% \n  \n  \n    Data or assumptions registers \n    42.1% \n    36.8% \n    15.8% \n    0% \n    0% \n    5.3% \n  \n  \n    Desk notes \n    5.3% \n    5.3% \n    0% \n    26.3% \n    42.1% \n    21.1% \n  \n  \n    Documentation for each function or class \n    15.8% \n    36.8% \n    15.8% \n    15.8% \n    10.5% \n    5.3% \n  \n  \n    Flow charts \n    15.8% \n    52.6% \n    10.5% \n    15.8% \n    5.3% \n    0% \n  \n  \n    README files \n    10.5% \n    47.4% \n    10.5% \n    10.5% \n    15.8% \n    5.3% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    10.5% \n  \n  \n    No \n    31.6% \n  \n  \n    I don't know what dependency management is \n    57.9% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    5.3% \n  \n  \n    No \n    47.4% \n  \n  \n    I don't know what continuous integration is \n    47.4% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    47.4% \n  \n  \n    I don't know what reproducible workflows are \n    52.6% \n  \n\n\n\n Sample size = 19"
  },
  {
    "objectID": "departments/welsh-government.html#rap-knowledge-and-opinions",
    "href": "departments/welsh-government.html#rap-knowledge-and-opinions",
    "title": "Department summary: Welsh Government",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    8.7% \n  \n  \n    I don't know what a RAP champion is \n    8.7% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    60.9% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0% \n  \n  \n    I know who the RAP champion in my department is \n    21.7% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    23.8% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    57.1% \n  \n  \n    I have read the RAP strategy \n    19% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    19% \n    19% \n    19% \n    19% \n    23.8% \n  \n  \n    I feel confident implementing RAP in my work \n    4.8% \n    19% \n    23.8% \n    33.3% \n    19% \n  \n  \n    I feel supported to implement RAP in my work \n    0% \n    14.3% \n    14.3% \n    42.9% \n    28.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    4.8% \n    14.3% \n    14.3% \n    47.6% \n    19% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    14.3% \n    9.5% \n    14.3% \n    38.1% \n    23.8% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    4.8% \n    19% \n    38.1% \n    38.1% \n  \n  \n    I understand what the key components of the RAP methodology are \n    4.8% \n    23.8% \n    23.8% \n    38.1% \n    9.5% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "departments/welsh-government.html#rap-scores",
    "href": "departments/welsh-government.html#rap-scores",
    "title": "Department summary: Welsh Government",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    47.4% \n  \n  \n    Peer review \n    Basic \n    47.4% \n  \n  \n    Documentation \n    Basic \n    21.1% \n  \n  \n    Version control \n    Basic \n    10.5% \n  \n  \n    AQUA book guidance \n    Basic \n    10.5% \n  \n  \n    Team open source code \n    Basic \n    0% \n  \n  \n    Follow code style guidelines \n    Advanced \n    42.1% \n  \n  \n    Functions \n    Advanced \n    26.3% \n  \n  \n    Function documentation \n    Advanced \n    15.8% \n  \n  \n    Dependency management \n    Advanced \n    10.5% \n  \n  \n    Unit testing \n    Advanced \n    5.3% \n  \n  \n    Code packages \n    Advanced \n    5.3% \n  \n  \n    Continuous integration \n    Advanced \n    5.3% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    26.3% \n  \n  \n    1 \n    42.1% \n  \n  \n    2 \n    15.8% \n  \n  \n    3 \n    0% \n  \n  \n    4 \n    15.8% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    47.4% \n  \n  \n    1 \n    26.3% \n  \n  \n    2 \n    10.5% \n  \n  \n    3 \n    5.3% \n  \n  \n    4 \n    5.3% \n  \n  \n    5 \n    5.3% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 19"
  },
  {
    "objectID": "departments.html",
    "href": "departments.html",
    "title": "Department summaries",
    "section": "",
    "text": "Below are links to profession-specific reports These contain summary statistics, filtered by department. Only departments with 20 or more respondents are included.\n\nCentre for Environment, Fisheries and Aquaculture Science\nDepartment for Business, Energy and Industrial Strategy (excl. agencies)\nDepartment for Digital, Culture, Media and Sport\nDepartment for Education\nDepartment for Environment, Food and Rural Affairs (excl. agencies)\nDepartment for Environment, Food and Rural Affairs (including agencies)\nDepartment for International Trade\nDepartment for Levelling Up, Housing and Communities\nDepartment for Transport (excl. agencies)\nDepartment for Work and Pensions\nDepartment of Health and Social Care (excl. agencies)\nForestry Commission\nGovernment Actuary’s Department\nHM Revenue and Customs\nMinistry of Defence\nMinistry of Justice (excl. agencies)\nNational Records of Scotland\nNHS\nNorthern Ireland Statistics and Research Agency\nOffice for National Statistics\nPublic Health Scotland\nScottish Government (excl. agencies)\nUK Health Security Agency\nWelsh Government"
  },
  {
    "objectID": "index.html#how-do-analysts-use-programming-and-software-engineering-in-the-uk-public-sector",
    "href": "index.html#how-do-analysts-use-programming-and-software-engineering-in-the-uk-public-sector",
    "title": "Home",
    "section": "How do analysts use programming and software engineering in the UK Public Sector?",
    "text": "How do analysts use programming and software engineering in the UK Public Sector?\nThe Coding in Analysis and Research Survey (CARS) was developed to understand better how government analysts use programming. Most questions focused on whether and how analysts use coding in their work. The survey is also concerned with Reproducible Analytical Pipelines (RAP).\nThe survey was distributed to government analysts and researchers in the autumn of 2022. The results presented summarise the key findings from 1322 respondents from over 50 public sector organisations. You can find the 2021 results in last year’s publication."
  },
  {
    "objectID": "index.html#who-is-this-research-for",
    "href": "index.html#who-is-this-research-for",
    "title": "Home",
    "section": "Who is this research for?",
    "text": "Who is this research for?\nThis research was made with senior analysts and leaders in mind. It is intended to be be useful for the development of strategies for public sector analysis and research. These findings should also be of interest to analysts and researchers in the public sector who are interested in understanding more about how their professions use programming in their work. Lastly, it will be useful to people outside the public sector who are interested in understanding the tools that are used in the public sector for analysis and research."
  },
  {
    "objectID": "index.html#how-to-use-this-research",
    "href": "index.html#how-to-use-this-research",
    "title": "Home",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present only reflect the views of the analysts who participated.\nWe cannot draw wider conclusions about the general population of government analysts from these results because the survey is not based on a random sample.\nDo:\n\nExplore the data to gain insights about current coding practices in government analysis and research\nRe-use the outputs if you wish\n\nAvoid:\n\nAttempting to estimate absolute frequencies - we did not use random sampling\nInferring differences between groups - these outputs are only intended to be descriptive and inferential tests were not carried out unless stated otherwise\n\nFor more detail, see the data collection page."
  },
  {
    "objectID": "index.html#rap",
    "href": "index.html#rap",
    "title": "Home",
    "section": "More information on reproducible analytical pipelines",
    "text": "More information on reproducible analytical pipelines\nReproducible Analytical Pipelines (RAP) MVP\nQuality assurance for coding in analysis and research\nThe Reproducible Analytical Pipelines Minimum Viable Product sets out the minimum expectations for what analysts must do for work to qualify as a RAP.\nRAP champions network page"
  },
  {
    "objectID": "index.html#accessibility-statement",
    "href": "index.html#accessibility-statement",
    "title": "Home",
    "section": "Accessibility statement",
    "text": "Accessibility statement\nThis accessibility statement applies to the Coding in Analysis and Research Survey report. Please note that this does not include third-party content that is referenced from this site.\nThe website is managed by the Methodology and Quality division of the Office for National Statistics. We would like this guidance to be accessible for as many people as possible. This means that you should be able to:\n\nchange colours, contrast levels and fonts\nzoom in up to 300% without the text spilling off the screen\nnavigate most of the website using just a keyboard\nnavigate most of the website using speech recognition software\nlisten to most of the website using a screen reader (including the most recent versions of JAWS, NVDA and VoiceOver)\n\n\nFeedback and reporting accessibility problems\nWe’re always looking to improve the accessibility of our guidance. If you find any problems not listed on this page or think that we’re not meeting accessibility requirements, please contact us by email at gsshelp@statistics.gov.uk. Please also get in touch if you are unable to access any part of this guidance, or require the content in a different format.\nWe will consider your request and aim to get back to you within 5 working days.\n\n\nEnforcement procedure\nThe Equality and Human Rights Commission (EHRC) is responsible for enforcing the Public Sector Bodies (Websites and Mobile Applications) (No. 2) Accessibility Regulations 2018 (the ‘accessibility regulations’). If you’re not happy with how we respond to your complaint, you should contact the Equality Advisory and Support Service (EASS)."
  },
  {
    "objectID": "index.html#contact-details",
    "href": "index.html#contact-details",
    "title": "Home",
    "section": "Contact details",
    "text": "Contact details\nWe would like to know what you think of the survey and the outputs. Please contact us if you have feedback on any of the following:\n\nOutputs/analyses you would like to see added to this research\nInformation you would like to see collected in the next iteration of CARS\nAny other comments\n\nIf you are interested in this survey or any of the questions asked, or want to give feedback, please contact ASAP@ONS.gov.uk."
  },
  {
    "objectID": "professions/data-scientists.html#how-to-use-this-research",
    "href": "professions/data-scientists.html#how-to-use-this-research",
    "title": "Profession summary: government data scientists",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/data-scientists.html#coding-frequency-and-tools",
    "href": "professions/data-scientists.html#coding-frequency-and-tools",
    "title": "Profession summary: government data scientists",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    1.6% \n  \n  \n    Rarely \n    6% \n  \n  \n    Sometimes \n    13% \n  \n  \n    Regularly \n    28.3% \n  \n  \n    All the time \n    51.1% \n  \n\n\n\n Sample size = 184\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    92.2% \n    7.8% \n  \n  \n    Data cleaning \n    90.9% \n    9.1% \n  \n  \n    Data linking \n    88.6% \n    11.4% \n  \n  \n    Data transfer / migration \n    79% \n    21% \n  \n  \n    Data visualisation \n    87.1% \n    12.9% \n  \n  \n    Machine learning \n    91.9% \n    8.1% \n  \n  \n    Modelling \n    86.7% \n    13.3% \n  \n  \n    Quality assurance \n    76.8% \n    23.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    11.4% \n    51.6% \n    37% \n  \n  \n    Java / Scala \n    13.6% \n    50% \n    36.4% \n  \n  \n    Javascript / Typescript \n    23.4% \n    45.1% \n    31.5% \n  \n  \n    Matlab \n    7.1% \n    43.5% \n    49.5% \n  \n  \n    Python \n    78.8% \n    14.1% \n    7.1% \n  \n  \n    R \n    94.6% \n    2.2% \n    3.3% \n  \n  \n    SAS \n    24.5% \n    46.2% \n    29.3% \n  \n  \n    SPSS \n    29.9% \n    42.9% \n    27.2% \n  \n  \n    SQL \n    80.4% \n    13.6% \n    6% \n  \n  \n    Stata \n    17.4% \n    50.5% \n    32.1% \n  \n  \n    VBA \n    46.7% \n    40.8% \n    12.5% \n  \n\n\n\n Sample size = 184\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.6% \n    4.9% \n    87.5% \n  \n  \n    Java / Scala \n    8.2% \n    6.5% \n    85.3% \n  \n  \n    Javascript / Typescript \n    15.2% \n    3.3% \n    81.5% \n  \n  \n    Matlab \n    24.5% \n    3.3% \n    72.3% \n  \n  \n    Python \n    69% \n    1.6% \n    29.3% \n  \n  \n    R \n    84.8% \n    1.1% \n    14.1% \n  \n  \n    SAS \n    16.8% \n    4.9% \n    78.3% \n  \n  \n    SPSS \n    26.1% \n    4.3% \n    69.6% \n  \n  \n    SQL \n    77.2% \n    1.6% \n    21.2% \n  \n  \n    Stata \n    5.4% \n    6.5% \n    88% \n  \n  \n    VBA \n    23.9% \n    7.1% \n    69% \n  \n\n\n\n Sample size = 184\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    84.8% \n  \n  \n    No \n    7.6% \n  \n  \n    I don't know \n    7.6% \n  \n\n\n\n Sample size = 184\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    82.6% \n  \n  \n    No \n    15.8% \n  \n  \n    I don't know \n    1.6% \n  \n\n\n\n Sample size = 184"
  },
  {
    "objectID": "professions/data-scientists.html#coding-capability",
    "href": "professions/data-scientists.html#coding-capability",
    "title": "Profession summary: government data scientists",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    5.5% \n  \n  \n    Slightly worse \n    8.5% \n  \n  \n    No change \n    10.4% \n  \n  \n    Slightly better \n    35.4% \n  \n  \n    Significantly better \n    40.2% \n  \n\n\n\n Sample size = 164\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    10.4% \n  \n  \n    In education \n    58.5% \n  \n  \n    In private sector employment \n    2.7% \n  \n  \n    In public sector employment \n    7.7% \n  \n  \n    Self-taught \n    19.1% \n  \n  \n    Other \n    1.6% \n  \n\n\n\n Sample size = 183"
  },
  {
    "objectID": "professions/data-scientists.html#coding-practices",
    "href": "professions/data-scientists.html#coding-practices",
    "title": "Profession summary: government data scientists",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    33.7% \n    13.8% \n    9.4% \n    14.9% \n    18.8% \n    9.4% \n  \n  \n    Automated data quality assurance \n    3.9% \n    13.3% \n    20.4% \n    24.9% \n    22.1% \n    15.5% \n  \n  \n    Code review \n    0% \n    5.5% \n    9.4% \n    22.1% \n    33.1% \n    29.8% \n  \n  \n    Coding guidelines / Style guides \n    1.7% \n    5.5% \n    6.6% \n    18.8% \n    37% \n    30.4% \n  \n  \n    Functions \n    0.6% \n    5% \n    5% \n    17.1% \n    24.3% \n    48.1% \n  \n  \n    Open source own code \n    6.1% \n    30.9% \n    18.2% \n    25.4% \n    12.7% \n    6.6% \n  \n  \n    Packaging code \n    3.9% \n    29.3% \n    21% \n    26% \n    13.3% \n    6.6% \n  \n  \n    Standard directory structure \n    9.4% \n    10.5% \n    8.8% \n    22.7% \n    26.5% \n    22.1% \n  \n  \n    Unit testing \n    11.6% \n    13.3% \n    12.7% \n    29.3% \n    21% \n    12.2% \n  \n  \n    Use open source software \n    1.1% \n    5% \n    2.8% \n    5% \n    22.7% \n    63.5% \n  \n  \n    Version control \n    2.8% \n    12.2% \n    6.6% \n    13.3% \n    23.2% \n    42% \n  \n\n\n\n Sample size = 181\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    19.3% \n    27.1% \n    15.5% \n    18.8% \n    14.9% \n    4.4% \n  \n  \n    Code comments \n    0.6% \n    2.2% \n    1.7% \n    6.6% \n    25.4% \n    63.5% \n  \n  \n    Data or assumptions registers \n    20.4% \n    35.4% \n    15.5% \n    12.2% \n    11.6% \n    5% \n  \n  \n    Desk notes \n    22.1% \n    16% \n    16% \n    23.2% \n    16% \n    6.6% \n  \n  \n    Documentation for each function or class \n    2.8% \n    12.7% \n    12.7% \n    19.9% \n    28.7% \n    23.2% \n  \n  \n    Flow charts \n    2.2% \n    28.7% \n    24.9% \n    27.6% \n    12.7% \n    3.9% \n  \n  \n    README files \n    1.7% \n    8.8% \n    10.5% \n    24.9% \n    27.1% \n    27.1% \n  \n\n\n\n Sample size = 181\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    54.7% \n  \n  \n    No \n    28.2% \n  \n  \n    I don't know what dependency management is \n    17.1% \n  \n\n\n\n Sample size = 181\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    29.8% \n  \n  \n    No \n    43.1% \n  \n  \n    I don't know what continuous integration is \n    27.1% \n  \n\n\n\n Sample size = 181\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    8.3% \n  \n  \n    No \n    69.6% \n  \n  \n    I don't know what reproducible workflows are \n    22.1% \n  \n\n\n\n Sample size = 181"
  },
  {
    "objectID": "professions/data-scientists.html#rap-knowledge-and-opinions",
    "href": "professions/data-scientists.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government data scientists",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    15.4% \n  \n  \n    I don't know what a RAP champion is \n    18.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    35.4% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.1% \n  \n  \n    I know who the RAP champion in my department is \n    25.1% \n  \n\n\n\n Sample size = 175\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    24.2% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    42% \n  \n  \n    I have read the RAP strategy \n    33.8% \n  \n\n\n\n Sample size = 157\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    11.5% \n    15.9% \n    22.3% \n    24.2% \n    26.1% \n  \n  \n    I feel confident implementing RAP in my work \n    6.4% \n    10.8% \n    21% \n    32.5% \n    29.3% \n  \n  \n    I feel supported to implement RAP in my work \n    8.3% \n    10.2% \n    25.5% \n    32.5% \n    23.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    6.4% \n    18.5% \n    17.2% \n    31.8% \n    26.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.6% \n    6.4% \n    27.4% \n    27.4% \n    31.2% \n  \n  \n    I think it is important to implement RAP in my work \n    2.5% \n    1.9% \n    13.4% \n    41.4% \n    40.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    6.4% \n    8.9% \n    21.7% \n    36.3% \n    26.8% \n  \n\n\n\n Sample size = 157"
  },
  {
    "objectID": "professions/data-scientists.html#rap-scores",
    "href": "professions/data-scientists.html#rap-scores",
    "title": "Profession summary: government data scientists",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    86.2% \n  \n  \n    Version control \n    Basic \n    65.2% \n  \n  \n    Peer review \n    Basic \n    63% \n  \n  \n    Documentation \n    Basic \n    51.4% \n  \n  \n    AQUA book guidance \n    Basic \n    28.2% \n  \n  \n    Team open source code \n    Basic \n    19.3% \n  \n  \n    Functions \n    Advanced \n    72.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    67.4% \n  \n  \n    Dependency management \n    Advanced \n    54.7% \n  \n  \n    Function documentation \n    Advanced \n    51.9% \n  \n  \n    Unit testing \n    Advanced \n    33.1% \n  \n  \n    Continuous integration \n    Advanced \n    29.8% \n  \n  \n    Code packages \n    Advanced \n    19.9% \n  \n\n\n\n Sample size = 181\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    5% \n  \n  \n    1 \n    15.5% \n  \n  \n    2 \n    14.9% \n  \n  \n    3 \n    19.9% \n  \n  \n    4 \n    21% \n  \n  \n    5 \n    18.2% \n  \n  \n    6 \n    5.5% \n  \n\n\n\n Sample size = 181\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    11.6% \n  \n  \n    1 \n    11.6% \n  \n  \n    2 \n    13.3% \n  \n  \n    3 \n    14.4% \n  \n  \n    4 \n    16% \n  \n  \n    5 \n    17.7% \n  \n  \n    6 \n    12.7% \n  \n  \n    7 \n    2.8% \n  \n\n\n\n Sample size = 181"
  },
  {
    "objectID": "professions/digital-and-data.html#how-to-use-this-research",
    "href": "professions/digital-and-data.html#how-to-use-this-research",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/digital-and-data.html#coding-frequency-and-tools",
    "href": "professions/digital-and-data.html#coding-frequency-and-tools",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    2.2% \n  \n  \n    Rarely \n    9.8% \n  \n  \n    Sometimes \n    19.6% \n  \n  \n    Regularly \n    31.5% \n  \n  \n    All the time \n    37% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    89.8% \n    10.2% \n  \n  \n    Data cleaning \n    86.4% \n    13.6% \n  \n  \n    Data linking \n    85% \n    15% \n  \n  \n    Data transfer / migration \n    76.6% \n    23.4% \n  \n  \n    Data visualisation \n    77.6% \n    22.4% \n  \n  \n    Machine learning \n    91.7% \n    8.3% \n  \n  \n    Modelling \n    86.8% \n    13.2% \n  \n  \n    Quality assurance \n    79.8% \n    20.2% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    15.2% \n    48.9% \n    35.9% \n  \n  \n    Java / Scala \n    19.6% \n    50% \n    30.4% \n  \n  \n    Javascript / Typescript \n    30.4% \n    46.7% \n    22.8% \n  \n  \n    Matlab \n    5.4% \n    47.8% \n    46.7% \n  \n  \n    Python \n    84.8% \n    7.6% \n    7.6% \n  \n  \n    R \n    92.4% \n    3.3% \n    4.3% \n  \n  \n    SAS \n    27.2% \n    47.8% \n    25% \n  \n  \n    SPSS \n    34.8% \n    42.4% \n    22.8% \n  \n  \n    SQL \n    80.4% \n    13% \n    6.5% \n  \n  \n    Stata \n    17.4% \n    54.3% \n    28.3% \n  \n  \n    VBA \n    51.1% \n    37% \n    12% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    16.3% \n    1.1% \n    82.6% \n  \n  \n    Java / Scala \n    5.4% \n    3.3% \n    91.3% \n  \n  \n    Javascript / Typescript \n    21.7% \n    3.3% \n    75% \n  \n  \n    Matlab \n    19.6% \n    2.2% \n    78.3% \n  \n  \n    Python \n    70.7% \n    0% \n    29.3% \n  \n  \n    R \n    69.6% \n    0% \n    30.4% \n  \n  \n    SAS \n    19.6% \n    5.4% \n    75% \n  \n  \n    SPSS \n    17.4% \n    2.2% \n    80.4% \n  \n  \n    SQL \n    78.3% \n    1.1% \n    20.7% \n  \n  \n    Stata \n    9.8% \n    3.3% \n    87% \n  \n  \n    VBA \n    33.7% \n    5.4% \n    60.9% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    89.1% \n  \n  \n    No \n    6.5% \n  \n  \n    I don't know \n    4.3% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    77.2% \n  \n  \n    No \n    16.3% \n  \n  \n    I don't know \n    6.5% \n  \n\n\n\n Sample size = 92"
  },
  {
    "objectID": "professions/digital-and-data.html#coding-capability",
    "href": "professions/digital-and-data.html#coding-capability",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    6.2% \n  \n  \n    Slightly worse \n    9.9% \n  \n  \n    No change \n    11.1% \n  \n  \n    Slightly better \n    37% \n  \n  \n    Significantly better \n    35.8% \n  \n\n\n\n Sample size = 81\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    13.2% \n  \n  \n    In education \n    62.6% \n  \n  \n    In private sector employment \n    4.4% \n  \n  \n    In public sector employment \n    3.3% \n  \n  \n    Self-taught \n    14.3% \n  \n  \n    Other \n    2.2% \n  \n\n\n\n Sample size = 91"
  },
  {
    "objectID": "professions/digital-and-data.html#coding-practices",
    "href": "professions/digital-and-data.html#coding-practices",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    33.3% \n    16.7% \n    14.4% \n    16.7% \n    15.6% \n    3.3% \n  \n  \n    Automated data quality assurance \n    2.2% \n    26.7% \n    13.3% \n    23.3% \n    27.8% \n    6.7% \n  \n  \n    Code review \n    0% \n    8.9% \n    12.2% \n    18.9% \n    31.1% \n    28.9% \n  \n  \n    Coding guidelines / Style guides \n    2.2% \n    5.6% \n    13.3% \n    16.7% \n    37.8% \n    24.4% \n  \n  \n    Functions \n    1.1% \n    6.7% \n    8.9% \n    17.8% \n    25.6% \n    40% \n  \n  \n    Open source own code \n    4.4% \n    34.4% \n    24.4% \n    18.9% \n    14.4% \n    3.3% \n  \n  \n    Packaging code \n    4.4% \n    28.9% \n    21.1% \n    27.8% \n    15.6% \n    2.2% \n  \n  \n    Standard directory structure \n    11.1% \n    13.3% \n    12.2% \n    16.7% \n    30% \n    16.7% \n  \n  \n    Unit testing \n    12.2% \n    13.3% \n    21.1% \n    31.1% \n    13.3% \n    8.9% \n  \n  \n    Use open source software \n    3.3% \n    8.9% \n    7.8% \n    4.4% \n    25.6% \n    50% \n  \n  \n    Version control \n    0% \n    15.6% \n    13.3% \n    4.4% \n    27.8% \n    38.9% \n  \n\n\n\n Sample size = 90\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    24.4% \n    26.7% \n    15.6% \n    23.3% \n    8.9% \n    1.1% \n  \n  \n    Code comments \n    1.1% \n    3.3% \n    5.6% \n    5.6% \n    36.7% \n    47.8% \n  \n  \n    Data or assumptions registers \n    24.4% \n    32.2% \n    20% \n    11.1% \n    10% \n    2.2% \n  \n  \n    Desk notes \n    23.3% \n    14.4% \n    12.2% \n    22.2% \n    18.9% \n    8.9% \n  \n  \n    Documentation for each function or class \n    6.7% \n    16.7% \n    14.4% \n    16.7% \n    28.9% \n    16.7% \n  \n  \n    Flow charts \n    3.3% \n    25.6% \n    26.7% \n    28.9% \n    11.1% \n    4.4% \n  \n  \n    README files \n    2.2% \n    10% \n    11.1% \n    23.3% \n    28.9% \n    24.4% \n  \n\n\n\n Sample size = 90\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    54.4% \n  \n  \n    No \n    28.9% \n  \n  \n    I don't know what dependency management is \n    16.7% \n  \n\n\n\n Sample size = 90\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    32.2% \n  \n  \n    No \n    46.7% \n  \n  \n    I don't know what continuous integration is \n    21.1% \n  \n\n\n\n Sample size = 90\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    13.3% \n  \n  \n    No \n    73.3% \n  \n  \n    I don't know what reproducible workflows are \n    13.3% \n  \n\n\n\n Sample size = 90"
  },
  {
    "objectID": "professions/digital-and-data.html#rap-knowledge-and-opinions",
    "href": "professions/digital-and-data.html#rap-knowledge-and-opinions",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    19.1% \n  \n  \n    I don't know what a RAP champion is \n    22.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    33.7% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    3.4% \n  \n  \n    I know who the RAP champion in my department is \n    21.3% \n  \n\n\n\n Sample size = 89\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    21.3% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    53.3% \n  \n  \n    I have read the RAP strategy \n    25.3% \n  \n\n\n\n Sample size = 75\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    12% \n    17.3% \n    28% \n    24% \n    18.7% \n  \n  \n    I feel confident implementing RAP in my work \n    8% \n    14.7% \n    25.3% \n    32% \n    20% \n  \n  \n    I feel supported to implement RAP in my work \n    9.3% \n    16% \n    26.7% \n    33.3% \n    14.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    8% \n    17.3% \n    12% \n    42.7% \n    20% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    10.7% \n    8% \n    32% \n    32% \n    17.3% \n  \n  \n    I think it is important to implement RAP in my work \n    2.7% \n    5.3% \n    16% \n    48% \n    28% \n  \n  \n    I understand what the key components of the RAP methodology are \n    6.7% \n    10.7% \n    17.3% \n    45.3% \n    20% \n  \n\n\n\n Sample size = 75"
  },
  {
    "objectID": "professions/digital-and-data.html#rap-scores",
    "href": "professions/digital-and-data.html#rap-scores",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    75.6% \n  \n  \n    Version control \n    Basic \n    66.7% \n  \n  \n    Peer review \n    Basic \n    60% \n  \n  \n    Documentation \n    Basic \n    48.9% \n  \n  \n    AQUA book guidance \n    Basic \n    18.9% \n  \n  \n    Team open source code \n    Basic \n    17.8% \n  \n  \n    Functions \n    Advanced \n    65.6% \n  \n  \n    Follow code style guidelines \n    Advanced \n    62.2% \n  \n  \n    Dependency management \n    Advanced \n    54.4% \n  \n  \n    Function documentation \n    Advanced \n    45.6% \n  \n  \n    Continuous integration \n    Advanced \n    32.2% \n  \n  \n    Unit testing \n    Advanced \n    22.2% \n  \n  \n    Code packages \n    Advanced \n    17.8% \n  \n\n\n\n Sample size = 90\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    12.2% \n  \n  \n    1 \n    13.3% \n  \n  \n    2 \n    12.2% \n  \n  \n    3 \n    24.4% \n  \n  \n    4 \n    17.8% \n  \n  \n    5 \n    14.4% \n  \n  \n    6 \n    5.6% \n  \n\n\n\n Sample size = 90\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    15.6% \n  \n  \n    1 \n    11.1% \n  \n  \n    2 \n    16.7% \n  \n  \n    3 \n    13.3% \n  \n  \n    4 \n    16.7% \n  \n  \n    5 \n    16.7% \n  \n  \n    6 \n    4.4% \n  \n  \n    7 \n    5.6% \n  \n\n\n\n Sample size = 90"
  },
  {
    "objectID": "professions/government-actuarys-department.html#how-to-use-this-research",
    "href": "professions/government-actuarys-department.html#how-to-use-this-research",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-actuarys-department.html#coding-frequency-and-tools",
    "href": "professions/government-actuarys-department.html#coding-frequency-and-tools",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    29.7% \n  \n  \n    Rarely \n    16.2% \n  \n  \n    Sometimes \n    10.8% \n  \n  \n    Regularly \n    27% \n  \n  \n    All the time \n    16.2% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    62.5% \n    37.5% \n  \n  \n    Data cleaning \n    61.5% \n    38.5% \n  \n  \n    Data linking \n    66.7% \n    33.3% \n  \n  \n    Data transfer / migration \n    62.5% \n    37.5% \n  \n  \n    Data visualisation \n    50% \n    50% \n  \n  \n    Machine learning \n    87.5% \n    12.5% \n  \n  \n    Modelling \n    60% \n    40% \n  \n  \n    Quality assurance \n    35.7% \n    64.3% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.7% \n    54.1% \n    43.2% \n  \n  \n    Java / Scala \n    0% \n    56.8% \n    43.2% \n  \n  \n    Javascript / Typescript \n    16.2% \n    54.1% \n    29.7% \n  \n  \n    Matlab \n    2.7% \n    43.2% \n    54.1% \n  \n  \n    Python \n    89.2% \n    8.1% \n    2.7% \n  \n  \n    R \n    91.9% \n    2.7% \n    5.4% \n  \n  \n    SAS \n    86.5% \n    8.1% \n    5.4% \n  \n  \n    SPSS \n    2.7% \n    48.6% \n    48.6% \n  \n  \n    SQL \n    45.9% \n    37.8% \n    16.2% \n  \n  \n    Stata \n    0% \n    54.1% \n    45.9% \n  \n  \n    VBA \n    89.2% \n    8.1% \n    2.7% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    13.5% \n    2.7% \n    83.8% \n  \n  \n    Java / Scala \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    Javascript / Typescript \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    Matlab \n    21.6% \n    5.4% \n    73% \n  \n  \n    Python \n    32.4% \n    0% \n    67.6% \n  \n  \n    R \n    62.2% \n    5.4% \n    32.4% \n  \n  \n    SAS \n    29.7% \n    5.4% \n    64.9% \n  \n  \n    SPSS \n    8.1% \n    2.7% \n    89.2% \n  \n  \n    SQL \n    29.7% \n    2.7% \n    67.6% \n  \n  \n    Stata \n    10.8% \n    2.7% \n    86.5% \n  \n  \n    VBA \n    56.8% \n    2.7% \n    40.5% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    37.8% \n  \n  \n    No \n    5.4% \n  \n  \n    I don't know \n    56.8% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    24.3% \n  \n  \n    No \n    67.6% \n  \n  \n    I don't know \n    8.1% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "professions/government-actuarys-department.html#coding-capability",
    "href": "professions/government-actuarys-department.html#coding-capability",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    12.5% \n  \n  \n    Slightly worse \n    16.7% \n  \n  \n    No change \n    12.5% \n  \n  \n    Slightly better \n    37.5% \n  \n  \n    Significantly better \n    20.8% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    34.4% \n  \n  \n    In education \n    43.8% \n  \n  \n    In private sector employment \n    3.1% \n  \n  \n    In public sector employment \n    3.1% \n  \n  \n    Self-taught \n    15.6% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 32"
  },
  {
    "objectID": "professions/government-actuarys-department.html#coding-practices",
    "href": "professions/government-actuarys-department.html#coding-practices",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    46.2% \n    19.2% \n    7.7% \n    11.5% \n    11.5% \n    3.8% \n  \n  \n    Automated data quality assurance \n    15.4% \n    19.2% \n    26.9% \n    26.9% \n    7.7% \n    3.8% \n  \n  \n    Code review \n    0% \n    7.7% \n    15.4% \n    19.2% \n    38.5% \n    19.2% \n  \n  \n    Coding guidelines / Style guides \n    11.5% \n    19.2% \n    0% \n    26.9% \n    34.6% \n    7.7% \n  \n  \n    Functions \n    15.4% \n    3.8% \n    11.5% \n    15.4% \n    26.9% \n    26.9% \n  \n  \n    Open source own code \n    15.4% \n    65.4% \n    7.7% \n    3.8% \n    7.7% \n    0% \n  \n  \n    Packaging code \n    23.1% \n    30.8% \n    15.4% \n    19.2% \n    11.5% \n    0% \n  \n  \n    Standard directory structure \n    15.4% \n    23.1% \n    11.5% \n    15.4% \n    30.8% \n    3.8% \n  \n  \n    Unit testing \n    23.1% \n    15.4% \n    11.5% \n    30.8% \n    11.5% \n    7.7% \n  \n  \n    Use open source software \n    15.4% \n    11.5% \n    7.7% \n    26.9% \n    19.2% \n    19.2% \n  \n  \n    Version control \n    26.9% \n    30.8% \n    19.2% \n    7.7% \n    11.5% \n    3.8% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    23.1% \n    15.4% \n    3.8% \n    34.6% \n    15.4% \n    7.7% \n  \n  \n    Code comments \n    0% \n    3.8% \n    11.5% \n    7.7% \n    38.5% \n    38.5% \n  \n  \n    Data or assumptions registers \n    42.3% \n    34.6% \n    11.5% \n    3.8% \n    7.7% \n    0% \n  \n  \n    Desk notes \n    23.1% \n    23.1% \n    7.7% \n    34.6% \n    11.5% \n    0% \n  \n  \n    Documentation for each function or class \n    19.2% \n    15.4% \n    7.7% \n    30.8% \n    23.1% \n    3.8% \n  \n  \n    Flow charts \n    15.4% \n    26.9% \n    19.2% \n    23.1% \n    15.4% \n    0% \n  \n  \n    README files \n    23.1% \n    15.4% \n    15.4% \n    23.1% \n    19.2% \n    3.8% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    15.4% \n  \n  \n    No \n    34.6% \n  \n  \n    I don't know what dependency management is \n    50% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    7.7% \n  \n  \n    No \n    46.2% \n  \n  \n    I don't know what continuous integration is \n    46.2% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    53.8% \n  \n  \n    I don't know what reproducible workflows are \n    46.2% \n  \n\n\n\n Sample size = 26"
  },
  {
    "objectID": "professions/government-actuarys-department.html#rap-knowledge-and-opinions",
    "href": "professions/government-actuarys-department.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    56.8% \n  \n  \n    I don't know what a RAP champion is \n    18.9% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    8.1% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    5.4% \n  \n  \n    I know who the RAP champion in my department is \n    10.8% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    25% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    56.2% \n  \n  \n    I have read the RAP strategy \n    18.8% \n  \n\n\n\n Sample size = 16\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    31.2% \n    6.2% \n    43.8% \n    12.5% \n    6.2% \n  \n  \n    I feel confident implementing RAP in my work \n    25% \n    18.8% \n    50% \n    0% \n    6.2% \n  \n  \n    I feel supported to implement RAP in my work \n    18.8% \n    12.5% \n    43.8% \n    18.8% \n    6.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    25% \n    18.8% \n    37.5% \n    6.2% \n    12.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    25% \n    6.2% \n    37.5% \n    25% \n    6.2% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    6.2% \n    56.2% \n    25% \n    12.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    18.8% \n    6.2% \n    43.8% \n    25% \n    6.2% \n  \n\n\n\n Sample size = 16"
  },
  {
    "objectID": "professions/government-actuarys-department.html#rap-scores",
    "href": "professions/government-actuarys-department.html#rap-scores",
    "title": "Profession summary: government actuary’s department (GAD)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Peer review \n    Basic \n    57.7% \n  \n  \n    Use open source software \n    Basic \n    38.5% \n  \n  \n    Documentation \n    Basic \n    19.2% \n  \n  \n    Version control \n    Basic \n    15.4% \n  \n  \n    AQUA book guidance \n    Basic \n    15.4% \n  \n  \n    Team open source code \n    Basic \n    7.7% \n  \n  \n    Functions \n    Advanced \n    53.8% \n  \n  \n    Follow code style guidelines \n    Advanced \n    42.3% \n  \n  \n    Function documentation \n    Advanced \n    26.9% \n  \n  \n    Unit testing \n    Advanced \n    19.2% \n  \n  \n    Dependency management \n    Advanced \n    15.4% \n  \n  \n    Code packages \n    Advanced \n    11.5% \n  \n  \n    Continuous integration \n    Advanced \n    7.7% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    19.2% \n  \n  \n    1 \n    38.5% \n  \n  \n    2 \n    23.1% \n  \n  \n    3 \n    11.5% \n  \n  \n    4 \n    3.8% \n  \n  \n    5 \n    3.8% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 26\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.1% \n  \n  \n    1 \n    26.9% \n  \n  \n    2 \n    26.9% \n  \n  \n    3 \n    7.7% \n  \n  \n    4 \n    7.7% \n  \n  \n    5 \n    3.8% \n  \n  \n    6 \n    3.8% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 26"
  },
  {
    "objectID": "professions/government-economic-service.html#how-to-use-this-research",
    "href": "professions/government-economic-service.html#how-to-use-this-research",
    "title": "Profession summary: government economic service (GES)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-economic-service.html#coding-frequency-and-tools",
    "href": "professions/government-economic-service.html#coding-frequency-and-tools",
    "title": "Profession summary: government economic service (GES)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    33.9% \n  \n  \n    Rarely \n    17.4% \n  \n  \n    Sometimes \n    22.9% \n  \n  \n    Regularly \n    16.5% \n  \n  \n    All the time \n    9.2% \n  \n\n\n\n Sample size = 109\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    57.4% \n    42.6% \n  \n  \n    Data cleaning \n    68.8% \n    31.2% \n  \n  \n    Data linking \n    73.9% \n    26.1% \n  \n  \n    Data transfer / migration \n    40.6% \n    59.4% \n  \n  \n    Data visualisation \n    52.1% \n    47.9% \n  \n  \n    Machine learning \n    92.9% \n    7.1% \n  \n  \n    Modelling \n    56.5% \n    43.5% \n  \n  \n    Quality assurance \n    34.4% \n    65.6% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    2.8% \n    78.9% \n    18.3% \n  \n  \n    Java / Scala \n    4.6% \n    76.1% \n    19.3% \n  \n  \n    Javascript / Typescript \n    5.5% \n    75.2% \n    19.3% \n  \n  \n    Matlab \n    3.7% \n    72.5% \n    23.9% \n  \n  \n    Python \n    50.5% \n    38.5% \n    11% \n  \n  \n    R \n    87.2% \n    7.3% \n    5.5% \n  \n  \n    SAS \n    24.8% \n    56% \n    19.3% \n  \n  \n    SPSS \n    21.1% \n    63.3% \n    15.6% \n  \n  \n    SQL \n    35.8% \n    48.6% \n    15.6% \n  \n  \n    Stata \n    40.4% \n    43.1% \n    16.5% \n  \n  \n    VBA \n    31.2% \n    57.8% \n    11% \n  \n\n\n\n Sample size = 109\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    1.8% \n    5.5% \n    92.7% \n  \n  \n    Java / Scala \n    0.9% \n    6.4% \n    92.7% \n  \n  \n    Javascript / Typescript \n    2.8% \n    7.3% \n    89.9% \n  \n  \n    Matlab \n    9.2% \n    5.5% \n    85.3% \n  \n  \n    Python \n    24.8% \n    4.6% \n    70.6% \n  \n  \n    R \n    62.4% \n    1.8% \n    35.8% \n  \n  \n    SAS \n    12.8% \n    3.7% \n    83.5% \n  \n  \n    SPSS \n    11.9% \n    3.7% \n    84.4% \n  \n  \n    SQL \n    21.1% \n    4.6% \n    74.3% \n  \n  \n    Stata \n    51.4% \n    2.8% \n    45.9% \n  \n  \n    VBA \n    11.9% \n    3.7% \n    84.4% \n  \n\n\n\n Sample size = 109\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    41.3% \n  \n  \n    No \n    5.5% \n  \n  \n    I don't know \n    53.2% \n  \n\n\n\n Sample size = 109\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    25.7% \n  \n  \n    No \n    67.9% \n  \n  \n    I don't know \n    6.4% \n  \n\n\n\n Sample size = 109"
  },
  {
    "objectID": "professions/government-economic-service.html#coding-capability",
    "href": "professions/government-economic-service.html#coding-capability",
    "title": "Profession summary: government economic service (GES)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    8.5% \n  \n  \n    Slightly worse \n    15.5% \n  \n  \n    No change \n    21.1% \n  \n  \n    Slightly better \n    31% \n  \n  \n    Significantly better \n    23.9% \n  \n\n\n\n Sample size = 71\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    27% \n  \n  \n    In education \n    44.9% \n  \n  \n    In private sector employment \n    3.4% \n  \n  \n    In public sector employment \n    12.4% \n  \n  \n    Self-taught \n    11.2% \n  \n  \n    Other \n    1.1% \n  \n\n\n\n Sample size = 89"
  },
  {
    "objectID": "professions/government-economic-service.html#coding-practices",
    "href": "professions/government-economic-service.html#coding-practices",
    "title": "Profession summary: government economic service (GES)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    25% \n    25% \n    13.9% \n    22.2% \n    9.7% \n    4.2% \n  \n  \n    Automated data quality assurance \n    8.3% \n    43.1% \n    18.1% \n    18.1% \n    6.9% \n    5.6% \n  \n  \n    Code review \n    1.4% \n    8.3% \n    6.9% \n    31.9% \n    33.3% \n    18.1% \n  \n  \n    Coding guidelines / Style guides \n    8.3% \n    15.3% \n    12.5% \n    25% \n    26.4% \n    12.5% \n  \n  \n    Functions \n    8.3% \n    13.9% \n    11.1% \n    22.2% \n    23.6% \n    20.8% \n  \n  \n    Open source own code \n    34.7% \n    44.4% \n    5.6% \n    9.7% \n    4.2% \n    1.4% \n  \n  \n    Packaging code \n    29.2% \n    44.4% \n    13.9% \n    8.3% \n    2.8% \n    1.4% \n  \n  \n    Standard directory structure \n    29.2% \n    22.2% \n    11.1% \n    11.1% \n    19.4% \n    6.9% \n  \n  \n    Unit testing \n    44.4% \n    22.2% \n    18.1% \n    9.7% \n    5.6% \n    0% \n  \n  \n    Use open source software \n    20.8% \n    11.1% \n    8.3% \n    19.4% \n    19.4% \n    20.8% \n  \n  \n    Version control \n    18.1% \n    41.7% \n    16.7% \n    8.3% \n    11.1% \n    4.2% \n  \n\n\n\n Sample size = 72\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    22.2% \n    26.4% \n    8.3% \n    19.4% \n    18.1% \n    5.6% \n  \n  \n    Code comments \n    6.9% \n    8.3% \n    2.8% \n    9.7% \n    25% \n    47.2% \n  \n  \n    Data or assumptions registers \n    15.3% \n    25% \n    9.7% \n    12.5% \n    25% \n    12.5% \n  \n  \n    Desk notes \n    34.7% \n    25% \n    8.3% \n    13.9% \n    11.1% \n    6.9% \n  \n  \n    Documentation for each function or class \n    22.2% \n    34.7% \n    18.1% \n    12.5% \n    8.3% \n    4.2% \n  \n  \n    Flow charts \n    13.9% \n    40.3% \n    12.5% \n    23.6% \n    9.7% \n    0% \n  \n  \n    README files \n    16.7% \n    31.9% \n    19.4% \n    15.3% \n    11.1% \n    5.6% \n  \n\n\n\n Sample size = 72\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    6.9% \n  \n  \n    No \n    36.1% \n  \n  \n    I don't know what dependency management is \n    56.9% \n  \n\n\n\n Sample size = 72\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    8.3% \n  \n  \n    No \n    50% \n  \n  \n    I don't know what continuous integration is \n    41.7% \n  \n\n\n\n Sample size = 72\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    1.4% \n  \n  \n    No \n    37.5% \n  \n  \n    I don't know what reproducible workflows are \n    61.1% \n  \n\n\n\n Sample size = 72"
  },
  {
    "objectID": "professions/government-economic-service.html#rap-knowledge-and-opinions",
    "href": "professions/government-economic-service.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government economic service (GES)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    33% \n  \n  \n    I don't know what a RAP champion is \n    22% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    26.6% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    1.8% \n  \n  \n    I know who the RAP champion in my department is \n    16.5% \n  \n\n\n\n Sample size = 109\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    32.9% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    49.3% \n  \n  \n    I have read the RAP strategy \n    17.8% \n  \n\n\n\n Sample size = 73\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    23.3% \n    32.9% \n    24.7% \n    15.1% \n    4.1% \n  \n  \n    I feel confident implementing RAP in my work \n    12.3% \n    30.1% \n    24.7% \n    28.8% \n    4.1% \n  \n  \n    I feel supported to implement RAP in my work \n    9.6% \n    20.5% \n    45.2% \n    19.2% \n    5.5% \n  \n  \n    I know where to find resources to help me implement RAP \n    9.6% \n    26% \n    24.7% \n    28.8% \n    11% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    6.8% \n    19.2% \n    37% \n    31.5% \n    5.5% \n  \n  \n    I think it is important to implement RAP in my work \n    1.4% \n    11% \n    30.1% \n    31.5% \n    26% \n  \n  \n    I understand what the key components of the RAP methodology are \n    11% \n    26% \n    24.7% \n    31.5% \n    6.8% \n  \n\n\n\n Sample size = 73"
  },
  {
    "objectID": "professions/government-economic-service.html#rap-scores",
    "href": "professions/government-economic-service.html#rap-scores",
    "title": "Profession summary: government economic service (GES)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Peer review \n    Basic \n    51.4% \n  \n  \n    Use open source software \n    Basic \n    40.3% \n  \n  \n    Documentation \n    Basic \n    16.7% \n  \n  \n    Version control \n    Basic \n    15.3% \n  \n  \n    AQUA book guidance \n    Basic \n    13.9% \n  \n  \n    Team open source code \n    Basic \n    5.6% \n  \n  \n    Functions \n    Advanced \n    44.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    38.9% \n  \n  \n    Function documentation \n    Advanced \n    12.5% \n  \n  \n    Continuous integration \n    Advanced \n    8.3% \n  \n  \n    Dependency management \n    Advanced \n    6.9% \n  \n  \n    Unit testing \n    Advanced \n    5.6% \n  \n  \n    Code packages \n    Advanced \n    4.2% \n  \n\n\n\n Sample size = 72\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.2% \n  \n  \n    1 \n    38.9% \n  \n  \n    2 \n    20.8% \n  \n  \n    3 \n    11.1% \n  \n  \n    4 \n    5.6% \n  \n  \n    5 \n    1.4% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 72\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    36.1% \n  \n  \n    1 \n    33.3% \n  \n  \n    2 \n    15.3% \n  \n  \n    3 \n    8.3% \n  \n  \n    4 \n    5.6% \n  \n  \n    5 \n    0% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    1.4% \n  \n\n\n\n Sample size = 72"
  },
  {
    "objectID": "professions/government-geography.html#how-to-use-this-research",
    "href": "professions/government-geography.html#how-to-use-this-research",
    "title": "Profession summary: government geography profession",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-geography.html#coding-frequency-and-tools",
    "href": "professions/government-geography.html#coding-frequency-and-tools",
    "title": "Profession summary: government geography profession",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    4.5% \n  \n  \n    Rarely \n    9.1% \n  \n  \n    Sometimes \n    22.7% \n  \n  \n    Regularly \n    31.8% \n  \n  \n    All the time \n    31.8% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    81.8% \n    18.2% \n  \n  \n    Data cleaning \n    90.5% \n    9.5% \n  \n  \n    Data linking \n    88.2% \n    11.8% \n  \n  \n    Data transfer / migration \n    80% \n    20% \n  \n  \n    Data visualisation \n    80% \n    20% \n  \n  \n    Machine learning \n    87.5% \n    12.5% \n  \n  \n    Modelling \n    77.8% \n    22.2% \n  \n  \n    Quality assurance \n    66.7% \n    33.3% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    18.2% \n    68.2% \n    13.6% \n  \n  \n    Java / Scala \n    18.2% \n    68.2% \n    13.6% \n  \n  \n    Javascript / Typescript \n    45.5% \n    50% \n    4.5% \n  \n  \n    Matlab \n    4.5% \n    63.6% \n    31.8% \n  \n  \n    Python \n    86.4% \n    9.1% \n    4.5% \n  \n  \n    R \n    90.9% \n    4.5% \n    4.5% \n  \n  \n    SAS \n    13.6% \n    77.3% \n    9.1% \n  \n  \n    SPSS \n    27.3% \n    63.6% \n    9.1% \n  \n  \n    SQL \n    72.7% \n    18.2% \n    9.1% \n  \n  \n    Stata \n    22.7% \n    68.2% \n    9.1% \n  \n  \n    VBA \n    45.5% \n    54.5% \n    0% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    18.2% \n    0% \n    81.8% \n  \n  \n    Java / Scala \n    0% \n    4.5% \n    95.5% \n  \n  \n    Javascript / Typescript \n    27.3% \n    0% \n    72.7% \n  \n  \n    Matlab \n    18.2% \n    13.6% \n    68.2% \n  \n  \n    Python \n    72.7% \n    4.5% \n    22.7% \n  \n  \n    R \n    63.6% \n    4.5% \n    31.8% \n  \n  \n    SAS \n    13.6% \n    4.5% \n    81.8% \n  \n  \n    SPSS \n    18.2% \n    9.1% \n    72.7% \n  \n  \n    SQL \n    68.2% \n    4.5% \n    27.3% \n  \n  \n    Stata \n    0% \n    4.5% \n    95.5% \n  \n  \n    VBA \n    22.7% \n    9.1% \n    68.2% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    72.7% \n  \n  \n    No \n    18.2% \n  \n  \n    I don't know \n    9.1% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    81.8% \n  \n  \n    No \n    18.2% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 22"
  },
  {
    "objectID": "professions/government-geography.html#coding-capability",
    "href": "professions/government-geography.html#coding-capability",
    "title": "Profession summary: government geography profession",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    10% \n  \n  \n    Slightly worse \n    10% \n  \n  \n    No change \n    0% \n  \n  \n    Slightly better \n    50% \n  \n  \n    Significantly better \n    30% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    9.5% \n  \n  \n    In education \n    52.4% \n  \n  \n    In private sector employment \n    4.8% \n  \n  \n    In public sector employment \n    0% \n  \n  \n    Self-taught \n    28.6% \n  \n  \n    Other \n    4.8% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "professions/government-geography.html#coding-practices",
    "href": "professions/government-geography.html#coding-practices",
    "title": "Profession summary: government geography profession",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    38.1% \n    14.3% \n    9.5% \n    23.8% \n    9.5% \n    4.8% \n  \n  \n    Automated data quality assurance \n    4.8% \n    19% \n    9.5% \n    33.3% \n    19% \n    14.3% \n  \n  \n    Code review \n    0% \n    14.3% \n    4.8% \n    28.6% \n    42.9% \n    9.5% \n  \n  \n    Coding guidelines / Style guides \n    4.8% \n    19% \n    0% \n    38.1% \n    38.1% \n    0% \n  \n  \n    Functions \n    4.8% \n    9.5% \n    4.8% \n    19% \n    23.8% \n    38.1% \n  \n  \n    Open source own code \n    4.8% \n    33.3% \n    19% \n    19% \n    14.3% \n    9.5% \n  \n  \n    Packaging code \n    9.5% \n    28.6% \n    19% \n    28.6% \n    14.3% \n    0% \n  \n  \n    Standard directory structure \n    28.6% \n    19% \n    9.5% \n    28.6% \n    14.3% \n    0% \n  \n  \n    Unit testing \n    28.6% \n    14.3% \n    0% \n    33.3% \n    14.3% \n    9.5% \n  \n  \n    Use open source software \n    4.8% \n    9.5% \n    0% \n    14.3% \n    33.3% \n    38.1% \n  \n  \n    Version control \n    0% \n    14.3% \n    23.8% \n    23.8% \n    33.3% \n    4.8% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    28.6% \n    28.6% \n    14.3% \n    19% \n    0% \n    9.5% \n  \n  \n    Code comments \n    4.8% \n    0% \n    0% \n    4.8% \n    38.1% \n    52.4% \n  \n  \n    Data or assumptions registers \n    33.3% \n    19% \n    19% \n    14.3% \n    9.5% \n    4.8% \n  \n  \n    Desk notes \n    28.6% \n    4.8% \n    14.3% \n    9.5% \n    38.1% \n    4.8% \n  \n  \n    Documentation for each function or class \n    19% \n    9.5% \n    4.8% \n    28.6% \n    23.8% \n    14.3% \n  \n  \n    Flow charts \n    4.8% \n    33.3% \n    33.3% \n    14.3% \n    14.3% \n    0% \n  \n  \n    README files \n    4.8% \n    9.5% \n    0% \n    23.8% \n    42.9% \n    19% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    38.1% \n  \n  \n    No \n    19% \n  \n  \n    I don't know what dependency management is \n    42.9% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    33.3% \n  \n  \n    No \n    23.8% \n  \n  \n    I don't know what continuous integration is \n    42.9% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    4.8% \n  \n  \n    No \n    42.9% \n  \n  \n    I don't know what reproducible workflows are \n    52.4% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "professions/government-geography.html#rap-knowledge-and-opinions",
    "href": "professions/government-geography.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government geography profession",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    18.2% \n  \n  \n    I don't know what a RAP champion is \n    22.7% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    36.4% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    4.5% \n  \n  \n    I know who the RAP champion in my department is \n    18.2% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    22.2% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    50% \n  \n  \n    I have read the RAP strategy \n    27.8% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    11.1% \n    22.2% \n    33.3% \n    22.2% \n    11.1% \n  \n  \n    I feel confident implementing RAP in my work \n    5.6% \n    16.7% \n    27.8% \n    44.4% \n    5.6% \n  \n  \n    I feel supported to implement RAP in my work \n    11.1% \n    22.2% \n    27.8% \n    33.3% \n    5.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.6% \n    27.8% \n    16.7% \n    38.9% \n    11.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.6% \n    5.6% \n    44.4% \n    33.3% \n    11.1% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    5.6% \n    16.7% \n    44.4% \n    33.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.6% \n    27.8% \n    5.6% \n    55.6% \n    5.6% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "professions/government-geography.html#rap-scores",
    "href": "professions/government-geography.html#rap-scores",
    "title": "Profession summary: government geography profession",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    71.4% \n  \n  \n    Documentation \n    Basic \n    61.9% \n  \n  \n    Peer review \n    Basic \n    52.4% \n  \n  \n    Version control \n    Basic \n    38.1% \n  \n  \n    Team open source code \n    Basic \n    23.8% \n  \n  \n    AQUA book guidance \n    Basic \n    14.3% \n  \n  \n    Functions \n    Advanced \n    61.9% \n  \n  \n    Function documentation \n    Advanced \n    38.1% \n  \n  \n    Follow code style guidelines \n    Advanced \n    38.1% \n  \n  \n    Dependency management \n    Advanced \n    38.1% \n  \n  \n    Continuous integration \n    Advanced \n    33.3% \n  \n  \n    Unit testing \n    Advanced \n    23.8% \n  \n  \n    Code packages \n    Advanced \n    14.3% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    9.5% \n  \n  \n    1 \n    14.3% \n  \n  \n    2 \n    23.8% \n  \n  \n    3 \n    23.8% \n  \n  \n    4 \n    14.3% \n  \n  \n    5 \n    14.3% \n  \n  \n    6 \n    0% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    23.8% \n  \n  \n    1 \n    9.5% \n  \n  \n    2 \n    19% \n  \n  \n    3 \n    14.3% \n  \n  \n    4 \n    9.5% \n  \n  \n    5 \n    23.8% \n  \n  \n    6 \n    0% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "professions/government-operational-research.html#how-to-use-this-research",
    "href": "professions/government-operational-research.html#how-to-use-this-research",
    "title": "Profession summary: government operational research (GORS)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-operational-research.html#coding-frequency-and-tools",
    "href": "professions/government-operational-research.html#coding-frequency-and-tools",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    7.9% \n  \n  \n    Rarely \n    7.9% \n  \n  \n    Sometimes \n    20.7% \n  \n  \n    Regularly \n    31.4% \n  \n  \n    All the time \n    32.1% \n  \n\n\n\n Sample size = 140\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    84.3% \n    15.7% \n  \n  \n    Data cleaning \n    87.7% \n    12.3% \n  \n  \n    Data linking \n    87% \n    13% \n  \n  \n    Data transfer / migration \n    77.5% \n    22.5% \n  \n  \n    Data visualisation \n    78.6% \n    21.4% \n  \n  \n    Machine learning \n    88.9% \n    11.1% \n  \n  \n    Modelling \n    80% \n    20% \n  \n  \n    Quality assurance \n    71.3% \n    28.7% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    5% \n    49.3% \n    45.7% \n  \n  \n    Java / Scala \n    8.6% \n    50.7% \n    40.7% \n  \n  \n    Javascript / Typescript \n    16.4% \n    49.3% \n    34.3% \n  \n  \n    Matlab \n    5.7% \n    40.7% \n    53.6% \n  \n  \n    Python \n    70.7% \n    11.4% \n    17.9% \n  \n  \n    R \n    95.7% \n    2.1% \n    2.1% \n  \n  \n    SAS \n    34.3% \n    38.6% \n    27.1% \n  \n  \n    SPSS \n    26.4% \n    51.4% \n    22.1% \n  \n  \n    SQL \n    69.3% \n    22.1% \n    8.6% \n  \n  \n    Stata \n    22.1% \n    55% \n    22.9% \n  \n  \n    VBA \n    70.7% \n    22.9% \n    6.4% \n  \n\n\n\n Sample size = 140\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    17.1% \n    2.9% \n    80% \n  \n  \n    Java / Scala \n    5.7% \n    3.6% \n    90.7% \n  \n  \n    Javascript / Typescript \n    10% \n    2.1% \n    87.9% \n  \n  \n    Matlab \n    32.9% \n    3.6% \n    63.6% \n  \n  \n    Python \n    56.4% \n    2.1% \n    41.4% \n  \n  \n    R \n    85.7% \n    0.7% \n    13.6% \n  \n  \n    SAS \n    34.3% \n    2.9% \n    62.9% \n  \n  \n    SPSS \n    17.1% \n    5% \n    77.9% \n  \n  \n    SQL \n    73.6% \n    1.4% \n    25% \n  \n  \n    Stata \n    6.4% \n    3.6% \n    90% \n  \n  \n    VBA \n    45.7% \n    4.3% \n    50% \n  \n\n\n\n Sample size = 140\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    78.6% \n  \n  \n    No \n    9.3% \n  \n  \n    I don't know \n    12.1% \n  \n\n\n\n Sample size = 140\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    68.6% \n  \n  \n    No \n    28.6% \n  \n  \n    I don't know \n    2.9% \n  \n\n\n\n Sample size = 140"
  },
  {
    "objectID": "professions/government-operational-research.html#coding-capability",
    "href": "professions/government-operational-research.html#coding-capability",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7.3% \n  \n  \n    Slightly worse \n    11.3% \n  \n  \n    No change \n    16.1% \n  \n  \n    Slightly better \n    39.5% \n  \n  \n    Significantly better \n    25.8% \n  \n\n\n\n Sample size = 124\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    10.9% \n  \n  \n    In education \n    65.7% \n  \n  \n    In private sector employment \n    0.7% \n  \n  \n    In public sector employment \n    8.8% \n  \n  \n    Self-taught \n    13.1% \n  \n  \n    Other \n    0.7% \n  \n\n\n\n Sample size = 137"
  },
  {
    "objectID": "professions/government-operational-research.html#coding-practices",
    "href": "professions/government-operational-research.html#coding-practices",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    10.1% \n    7.8% \n    10.9% \n    29.5% \n    31% \n    10.9% \n  \n  \n    Automated data quality assurance \n    2.3% \n    17.8% \n    20.9% \n    29.5% \n    22.5% \n    7% \n  \n  \n    Code review \n    0% \n    6.2% \n    5.4% \n    15.5% \n    41.1% \n    31.8% \n  \n  \n    Coding guidelines / Style guides \n    6.2% \n    6.2% \n    10.9% \n    23.3% \n    35.7% \n    17.8% \n  \n  \n    Functions \n    0% \n    2.3% \n    9.3% \n    12.4% \n    32.6% \n    43.4% \n  \n  \n    Open source own code \n    8.5% \n    54.3% \n    20.2% \n    10.9% \n    6.2% \n    0% \n  \n  \n    Packaging code \n    6.2% \n    48.1% \n    17.8% \n    20.9% \n    4.7% \n    2.3% \n  \n  \n    Standard directory structure \n    19.4% \n    15.5% \n    14% \n    19.4% \n    20.2% \n    11.6% \n  \n  \n    Unit testing \n    17.8% \n    13.2% \n    18.6% \n    27.1% \n    14% \n    9.3% \n  \n  \n    Use open source software \n    4.7% \n    7% \n    4.7% \n    14% \n    27.1% \n    42.6% \n  \n  \n    Version control \n    3.1% \n    22.5% \n    10.9% \n    12.4% \n    20.9% \n    30.2% \n  \n\n\n\n Sample size = 129\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    6.2% \n    13.2% \n    15.5% \n    25.6% \n    27.1% \n    12.4% \n  \n  \n    Code comments \n    0.8% \n    3.1% \n    1.6% \n    8.5% \n    14.7% \n    71.3% \n  \n  \n    Data or assumptions registers \n    6.2% \n    15.5% \n    17.1% \n    20.2% \n    24% \n    17.1% \n  \n  \n    Desk notes \n    28.7% \n    14% \n    15.5% \n    15.5% \n    19.4% \n    7% \n  \n  \n    Documentation for each function or class \n    5.4% \n    16.3% \n    16.3% \n    21.7% \n    22.5% \n    17.8% \n  \n  \n    Flow charts \n    2.3% \n    22.5% \n    21.7% \n    34.9% \n    15.5% \n    3.1% \n  \n  \n    README files \n    2.3% \n    14.7% \n    11.6% \n    31% \n    19.4% \n    20.9% \n  \n\n\n\n Sample size = 129\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    35.7% \n  \n  \n    No \n    38% \n  \n  \n    I don't know what dependency management is \n    26.4% \n  \n\n\n\n Sample size = 129\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    17.8% \n  \n  \n    No \n    43.4% \n  \n  \n    I don't know what continuous integration is \n    38.8% \n  \n\n\n\n Sample size = 129\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    7% \n  \n  \n    No \n    59.7% \n  \n  \n    I don't know what reproducible workflows are \n    33.3% \n  \n\n\n\n Sample size = 129"
  },
  {
    "objectID": "professions/government-operational-research.html#rap-knowledge-and-opinions",
    "href": "professions/government-operational-research.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government operational research (GORS)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    11.6% \n  \n  \n    I don't know what a RAP champion is \n    18.8% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    37.7% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    0.7% \n  \n  \n    I know who the RAP champion in my department is \n    31.2% \n  \n\n\n\n Sample size = 138\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    29% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    53.2% \n  \n  \n    I have read the RAP strategy \n    17.7% \n  \n\n\n\n Sample size = 124\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    18.5% \n    16.9% \n    22.6% \n    27.4% \n    14.5% \n  \n  \n    I feel confident implementing RAP in my work \n    12.9% \n    17.7% \n    13.7% \n    37.9% \n    17.7% \n  \n  \n    I feel supported to implement RAP in my work \n    12.1% \n    10.5% \n    24.2% \n    37.9% \n    15.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    10.5% \n    16.9% \n    16.9% \n    37.1% \n    18.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    12.1% \n    8.1% \n    35.5% \n    29.8% \n    14.5% \n  \n  \n    I think it is important to implement RAP in my work \n    8.9% \n    1.6% \n    17.7% \n    39.5% \n    32.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.9% \n    11.3% \n    14.5% \n    44.4% \n    21% \n  \n\n\n\n Sample size = 124"
  },
  {
    "objectID": "professions/government-operational-research.html#rap-scores",
    "href": "professions/government-operational-research.html#rap-scores",
    "title": "Profession summary: government operational research (GORS)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Peer review \n    Basic \n    72.9% \n  \n  \n    Use open source software \n    Basic \n    69.8% \n  \n  \n    Version control \n    Basic \n    51.2% \n  \n  \n    AQUA book guidance \n    Basic \n    41.9% \n  \n  \n    Documentation \n    Basic \n    37.2% \n  \n  \n    Team open source code \n    Basic \n    6.2% \n  \n  \n    Functions \n    Advanced \n    76% \n  \n  \n    Follow code style guidelines \n    Advanced \n    53.5% \n  \n  \n    Function documentation \n    Advanced \n    40.3% \n  \n  \n    Dependency management \n    Advanced \n    35.7% \n  \n  \n    Unit testing \n    Advanced \n    23.3% \n  \n  \n    Continuous integration \n    Advanced \n    17.8% \n  \n  \n    Code packages \n    Advanced \n    7% \n  \n\n\n\n Sample size = 129\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    9.3% \n  \n  \n    1 \n    14% \n  \n  \n    2 \n    17.1% \n  \n  \n    3 \n    24% \n  \n  \n    4 \n    20.9% \n  \n  \n    5 \n    13.2% \n  \n  \n    6 \n    1.6% \n  \n\n\n\n Sample size = 129\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14% \n  \n  \n    1 \n    14% \n  \n  \n    2 \n    23.3% \n  \n  \n    3 \n    22.5% \n  \n  \n    4 \n    10.9% \n  \n  \n    5 \n    11.6% \n  \n  \n    6 \n    3.1% \n  \n  \n    7 \n    0.8% \n  \n\n\n\n Sample size = 129"
  },
  {
    "objectID": "professions/government-social-research.html#how-to-use-this-research",
    "href": "professions/government-social-research.html#how-to-use-this-research",
    "title": "Profession summary: government social research (GSR)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-social-research.html#coding-frequency-and-tools",
    "href": "professions/government-social-research.html#coding-frequency-and-tools",
    "title": "Profession summary: government social research (GSR)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    24.7% \n  \n  \n    Rarely \n    14.3% \n  \n  \n    Sometimes \n    20.1% \n  \n  \n    Regularly \n    21.4% \n  \n  \n    All the time \n    19.5% \n  \n\n\n\n Sample size = 154\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    74.2% \n    25.8% \n  \n  \n    Data cleaning \n    82.2% \n    17.8% \n  \n  \n    Data linking \n    84% \n    16% \n  \n  \n    Data transfer / migration \n    62.9% \n    37.1% \n  \n  \n    Data visualisation \n    55.7% \n    44.3% \n  \n  \n    Machine learning \n    85.7% \n    14.3% \n  \n  \n    Modelling \n    85.7% \n    14.3% \n  \n  \n    Quality assurance \n    62.4% \n    37.6% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    0.6% \n    73.4% \n    26% \n  \n  \n    Java / Scala \n    3.9% \n    74.7% \n    21.4% \n  \n  \n    Javascript / Typescript \n    3.2% \n    74.7% \n    22.1% \n  \n  \n    Matlab \n    5.2% \n    66.9% \n    27.9% \n  \n  \n    Python \n    64.9% \n    24.7% \n    10.4% \n  \n  \n    R \n    83.8% \n    9.1% \n    7.1% \n  \n  \n    SAS \n    32.5% \n    46.8% \n    20.8% \n  \n  \n    SPSS \n    48.1% \n    24.7% \n    27.3% \n  \n  \n    SQL \n    42.9% \n    46.8% \n    10.4% \n  \n  \n    Stata \n    23.4% \n    54.5% \n    22.1% \n  \n  \n    VBA \n    18.8% \n    63% \n    18.2% \n  \n\n\n\n Sample size = 154\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    3.2% \n    8.4% \n    88.3% \n  \n  \n    Java / Scala \n    2.6% \n    9.1% \n    88.3% \n  \n  \n    Javascript / Typescript \n    1.3% \n    9.7% \n    89% \n  \n  \n    Matlab \n    6.5% \n    9.7% \n    83.8% \n  \n  \n    Python \n    34.4% \n    3.9% \n    61.7% \n  \n  \n    R \n    51.9% \n    4.5% \n    43.5% \n  \n  \n    SAS \n    22.7% \n    7.1% \n    70.1% \n  \n  \n    SPSS \n    67.5% \n    6.5% \n    26% \n  \n  \n    SQL \n    29.9% \n    8.4% \n    61.7% \n  \n  \n    Stata \n    24% \n    5.8% \n    70.1% \n  \n  \n    VBA \n    10.4% \n    5.8% \n    83.8% \n  \n\n\n\n Sample size = 154\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    55.8% \n  \n  \n    No \n    7.1% \n  \n  \n    I don't know \n    37% \n  \n\n\n\n Sample size = 154\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    39% \n  \n  \n    No \n    57.8% \n  \n  \n    I don't know \n    3.2% \n  \n\n\n\n Sample size = 154"
  },
  {
    "objectID": "professions/government-social-research.html#coding-capability",
    "href": "professions/government-social-research.html#coding-capability",
    "title": "Profession summary: government social research (GSR)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    14.4% \n  \n  \n    Slightly worse \n    16.5% \n  \n  \n    No change \n    17.5% \n  \n  \n    Slightly better \n    22.7% \n  \n  \n    Significantly better \n    28.9% \n  \n\n\n\n Sample size = 97\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    28.9% \n  \n  \n    In education \n    43% \n  \n  \n    In private sector employment \n    3% \n  \n  \n    In public sector employment \n    17% \n  \n  \n    Self-taught \n    6.7% \n  \n  \n    Other \n    1.5% \n  \n\n\n\n Sample size = 135"
  },
  {
    "objectID": "professions/government-social-research.html#coding-practices",
    "href": "professions/government-social-research.html#coding-practices",
    "title": "Profession summary: government social research (GSR)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    50% \n    15.5% \n    6% \n    15.5% \n    9.5% \n    3.4% \n  \n  \n    Automated data quality assurance \n    8.6% \n    28.4% \n    11.2% \n    29.3% \n    15.5% \n    6.9% \n  \n  \n    Code review \n    1.7% \n    5.2% \n    5.2% \n    24.1% \n    37.1% \n    26.7% \n  \n  \n    Coding guidelines / Style guides \n    11.2% \n    16.4% \n    9.5% \n    19% \n    35.3% \n    8.6% \n  \n  \n    Functions \n    6.9% \n    14.7% \n    15.5% \n    27.6% \n    25.9% \n    9.5% \n  \n  \n    Open source own code \n    22.4% \n    58.6% \n    10.3% \n    4.3% \n    1.7% \n    2.6% \n  \n  \n    Packaging code \n    27.6% \n    46.6% \n    9.5% \n    9.5% \n    4.3% \n    2.6% \n  \n  \n    Standard directory structure \n    44.8% \n    17.2% \n    9.5% \n    8.6% \n    14.7% \n    5.2% \n  \n  \n    Unit testing \n    41.4% \n    19.8% \n    8.6% \n    15.5% \n    9.5% \n    5.2% \n  \n  \n    Use open source software \n    17.2% \n    20.7% \n    6.9% \n    14.7% \n    23.3% \n    17.2% \n  \n  \n    Version control \n    13.8% \n    40.5% \n    6% \n    14.7% \n    12.9% \n    12.1% \n  \n\n\n\n Sample size = 116\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    33.6% \n    40.5% \n    8.6% \n    8.6% \n    4.3% \n    4.3% \n  \n  \n    Code comments \n    3.4% \n    10.3% \n    1.7% \n    8.6% \n    27.6% \n    48.3% \n  \n  \n    Data or assumptions registers \n    29.3% \n    41.4% \n    2.6% \n    7.8% \n    8.6% \n    10.3% \n  \n  \n    Desk notes \n    14.7% \n    21.6% \n    11.2% \n    25% \n    15.5% \n    12.1% \n  \n  \n    Documentation for each function or class \n    23.3% \n    37.1% \n    11.2% \n    10.3% \n    12.9% \n    5.2% \n  \n  \n    Flow charts \n    14.7% \n    55.2% \n    11.2% \n    10.3% \n    7.8% \n    0.9% \n  \n  \n    README files \n    12.9% \n    37.9% \n    18.1% \n    20.7% \n    6.9% \n    3.4% \n  \n\n\n\n Sample size = 116\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    10.3% \n  \n  \n    No \n    31% \n  \n  \n    I don't know what dependency management is \n    58.6% \n  \n\n\n\n Sample size = 116\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    9.5% \n  \n  \n    No \n    37.9% \n  \n  \n    I don't know what continuous integration is \n    52.6% \n  \n\n\n\n Sample size = 116\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0.9% \n  \n  \n    No \n    44% \n  \n  \n    I don't know what reproducible workflows are \n    55.2% \n  \n\n\n\n Sample size = 116"
  },
  {
    "objectID": "professions/government-social-research.html#rap-knowledge-and-opinions",
    "href": "professions/government-social-research.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government social research (GSR)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    22.1% \n  \n  \n    I don't know what a RAP champion is \n    19.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    39% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    1.3% \n  \n  \n    I know who the RAP champion in my department is \n    18.2% \n  \n\n\n\n Sample size = 154\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    31.1% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    57.1% \n  \n  \n    I have read the RAP strategy \n    11.8% \n  \n\n\n\n Sample size = 120\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    28.3% \n    28.3% \n    20% \n    17.5% \n    5.8% \n  \n  \n    I feel confident implementing RAP in my work \n    17.5% \n    35.8% \n    20.8% \n    22.5% \n    3.3% \n  \n  \n    I feel supported to implement RAP in my work \n    10% \n    18.3% \n    28.3% \n    36.7% \n    6.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    10% \n    30.8% \n    19.2% \n    33.3% \n    6.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    14.2% \n    19.2% \n    31.7% \n    24.2% \n    10.8% \n  \n  \n    I think it is important to implement RAP in my work \n    5.8% \n    4.2% \n    34.2% \n    38.3% \n    17.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    10.8% \n    35% \n    19.2% \n    27.5% \n    7.5% \n  \n\n\n\n Sample size = 120"
  },
  {
    "objectID": "professions/government-social-research.html#rap-scores",
    "href": "professions/government-social-research.html#rap-scores",
    "title": "Profession summary: government social research (GSR)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Peer review \n    Basic \n    63.8% \n  \n  \n    Use open source software \n    Basic \n    40.5% \n  \n  \n    Version control \n    Basic \n    25% \n  \n  \n    AQUA book guidance \n    Basic \n    12.9% \n  \n  \n    Documentation \n    Basic \n    9.5% \n  \n  \n    Team open source code \n    Basic \n    4.3% \n  \n  \n    Follow code style guidelines \n    Advanced \n    44% \n  \n  \n    Functions \n    Advanced \n    35.3% \n  \n  \n    Function documentation \n    Advanced \n    18.1% \n  \n  \n    Unit testing \n    Advanced \n    14.7% \n  \n  \n    Dependency management \n    Advanced \n    10.3% \n  \n  \n    Continuous integration \n    Advanced \n    9.5% \n  \n  \n    Code packages \n    Advanced \n    6.9% \n  \n\n\n\n Sample size = 116\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    22.4% \n  \n  \n    1 \n    36.2% \n  \n  \n    2 \n    17.2% \n  \n  \n    3 \n    15.5% \n  \n  \n    4 \n    5.2% \n  \n  \n    5 \n    2.6% \n  \n  \n    6 \n    0.9% \n  \n\n\n\n Sample size = 116\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    37.1% \n  \n  \n    1 \n    24.1% \n  \n  \n    2 \n    14.7% \n  \n  \n    3 \n    14.7% \n  \n  \n    4 \n    6.9% \n  \n  \n    5 \n    1.7% \n  \n  \n    6 \n    0.9% \n  \n  \n    7 \n    0% \n  \n\n\n\n Sample size = 116"
  },
  {
    "objectID": "professions/government-statician-group.html#how-to-use-this-research",
    "href": "professions/government-statician-group.html#how-to-use-this-research",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-statician-group.html#coding-frequency-and-tools",
    "href": "professions/government-statician-group.html#coding-frequency-and-tools",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.3% \n  \n  \n    Rarely \n    10.3% \n  \n  \n    Sometimes \n    19.6% \n  \n  \n    Regularly \n    35% \n  \n  \n    All the time \n    26.9% \n  \n\n\n\n Sample size = 506\n\n\n\n\n\n\n\n\n\nWhat code is being used for\nWe asked respondents what data operations they carry out in their work, and whether they use code to do them. Please note, we did not ask how much of each data operation is done with code or how often.\nRespondents who don’t do the operation at all have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Operation \n    I do some or all of this by coding (%) \n    I do this without coding (%) \n  \n \n\n  \n    Data analysis \n    86.8% \n    13.2% \n  \n  \n    Data cleaning \n    90.8% \n    9.2% \n  \n  \n    Data linking \n    90.9% \n    9.1% \n  \n  \n    Data transfer / migration \n    75.1% \n    24.9% \n  \n  \n    Data visualisation \n    68.4% \n    31.6% \n  \n  \n    Machine learning \n    91.4% \n    8.6% \n  \n  \n    Modelling \n    81.9% \n    18.1% \n  \n  \n    Quality assurance \n    67.5% \n    32.5% \n  \n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nIs this tool available to use for your work?\n\nDo you know how to program with this tool to a level suitable for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    4.5% \n    56.1% \n    39.3% \n  \n  \n    Java / Scala \n    7.7% \n    56.7% \n    35.6% \n  \n  \n    Javascript / Typescript \n    7.5% \n    57.7% \n    34.8% \n  \n  \n    Matlab \n    3.6% \n    52% \n    44.5% \n  \n  \n    Python \n    70.9% \n    16.6% \n    12.5% \n  \n  \n    R \n    93.1% \n    1.8% \n    5.1% \n  \n  \n    SAS \n    45.7% \n    32.4% \n    21.9% \n  \n  \n    SPSS \n    35.6% \n    35.8% \n    28.7% \n  \n  \n    SQL \n    75.3% \n    15.8% \n    8.9% \n  \n  \n    Stata \n    22.3% \n    45.8% \n    31.8% \n  \n  \n    VBA \n    54% \n    32% \n    14% \n  \n\n\n\n Sample size = 506\n\n\n\n\n\n\n\n\n\nCoding tool knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.5% \n    5.7% \n    87.7% \n  \n  \n    Java / Scala \n    5.1% \n    5.9% \n    88.9% \n  \n  \n    Javascript / Typescript \n    4.7% \n    5.7% \n    89.5% \n  \n  \n    Matlab \n    18.6% \n    4.9% \n    76.5% \n  \n  \n    Python \n    39.1% \n    3.2% \n    57.7% \n  \n  \n    R \n    77.5% \n    1.8% \n    20.8% \n  \n  \n    SAS \n    39.9% \n    5.1% \n    54.9% \n  \n  \n    SPSS \n    41.5% \n    5.7% \n    52.8% \n  \n  \n    SQL \n    65.8% \n    3% \n    31.2% \n  \n  \n    Stata \n    12.6% \n    4.9% \n    82.4% \n  \n  \n    VBA \n    27.5% \n    6.5% \n    66% \n  \n\n\n\n Sample size = 506\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git access \n    Percent \n  \n \n\n  \n    Yes \n    74.5% \n  \n  \n    No \n    10.7% \n  \n  \n    I don't know \n    14.8% \n  \n\n\n\n Sample size = 506\n\n\n\n\n\n\n\n\n\nGit knowledge\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    git knowledge \n    Percent \n  \n \n\n  \n    Yes \n    58.9% \n  \n  \n    No \n    37.9% \n  \n  \n    I don't know \n    3.2% \n  \n\n\n\n Sample size = 506"
  },
  {
    "objectID": "professions/government-statician-group.html#coding-capability",
    "href": "professions/government-statician-group.html#coding-capability",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "Coding capability",
    "text": "Coding capability\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7.6% \n  \n  \n    Slightly worse \n    14.8% \n  \n  \n    No change \n    12.9% \n  \n  \n    Slightly better \n    34.6% \n  \n  \n    Significantly better \n    30.1% \n  \n\n\n\n Sample size = 419\n\n\n\n\n\n\n\n\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    18% \n  \n  \n    In education \n    50.4% \n  \n  \n    In private sector employment \n    1.4% \n  \n  \n    In public sector employment \n    17.4% \n  \n  \n    Self-taught \n    11.1% \n  \n  \n    Other \n    1.6% \n  \n\n\n\n Sample size = 494"
  },
  {
    "objectID": "professions/government-statician-group.html#coding-practices",
    "href": "professions/government-statician-group.html#coding-practices",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\n\nGood analysis coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    31.5% \n    13.4% \n    11.4% \n    19.6% \n    18.8% \n    5.4% \n  \n  \n    Automated data quality assurance \n    2.4% \n    16.6% \n    19.8% \n    27.2% \n    25% \n    9.1% \n  \n  \n    Code review \n    0.9% \n    6% \n    10.8% \n    30.2% \n    33.8% \n    18.3% \n  \n  \n    Coding guidelines / Style guides \n    5.2% \n    10.3% \n    9.7% \n    28% \n    31.5% \n    15.3% \n  \n  \n    Functions \n    3% \n    8.4% \n    8.8% \n    28.7% \n    28% \n    23.1% \n  \n  \n    Open source own code \n    13.4% \n    45.7% \n    15.5% \n    12.1% \n    8.6% \n    4.7% \n  \n  \n    Packaging code \n    10.8% \n    46.8% \n    16.4% \n    14.7% \n    7.3% \n    4.1% \n  \n  \n    Standard directory structure \n    26.1% \n    15.1% \n    8.6% \n    17.2% \n    20.7% \n    12.3% \n  \n  \n    Unit testing \n    27.8% \n    18.8% \n    13.6% \n    20.5% \n    12.1% \n    7.3% \n  \n  \n    Use open source software \n    5.6% \n    14.4% \n    7.1% \n    13.8% \n    22.4% \n    36.6% \n  \n  \n    Version control \n    3.7% \n    34.7% \n    9.9% \n    12.7% \n    19.4% \n    19.6% \n  \n\n\n\n Sample size = 464\n\n\n\n\n\n\n\n\n\nDocumentation\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    22.2% \n    28.9% \n    14.4% \n    19.2% \n    10.6% \n    4.7% \n  \n  \n    Code comments \n    1.9% \n    2.4% \n    0.6% \n    8% \n    29.3% \n    57.8% \n  \n  \n    Data or assumptions registers \n    17.7% \n    35.3% \n    14% \n    13.8% \n    13.4% \n    5.8% \n  \n  \n    Desk notes \n    11.2% \n    14% \n    11.6% \n    23.1% \n    27.6% \n    12.5% \n  \n  \n    Documentation for each function or class \n    11.4% \n    23.3% \n    13.8% \n    21.3% \n    17.9% \n    12.3% \n  \n  \n    Flow charts \n    6% \n    38.8% \n    22% \n    22.8% \n    7.5% \n    2.8% \n  \n  \n    README files \n    5.4% \n    25.6% \n    14% \n    22.8% \n    20.5% \n    11.6% \n  \n\n\n\n Sample size = 464\n\n\n\n\n\n\n\n\n\nDependency Management\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    22.4% \n  \n  \n    No \n    35.6% \n  \n  \n    I don't know what dependency management is \n    42% \n  \n\n\n\n Sample size = 464\n\n\n\n\n\n\n\n\n\nContinuous integration\nAs above, respondents were provided with examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    13.6% \n  \n  \n    No \n    41.2% \n  \n  \n    I don't know what continuous integration is \n    45.3% \n  \n\n\n\n Sample size = 464\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nRespondents were asked whether they use reproducible workflow packages. Respondents were provided with the following examples:\n\ndrake\n\nmake\n\npymake\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproduciable workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    2.6% \n  \n  \n    No \n    58.4% \n  \n  \n    I don't know what reproducible workflows are \n    39% \n  \n\n\n\n Sample size = 464"
  },
  {
    "objectID": "professions/government-statician-group.html#rap-knowledge-and-opinions",
    "href": "professions/government-statician-group.html#rap-knowledge-and-opinions",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "RAP knowledge and opinions",
    "text": "RAP knowledge and opinions\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management. The RAP champions are a network of analysts across government who promote and support RAP development in their departments.\n\nKnowledge of RAP\nWe asked respondents:\n\nHave you heard of RAP?\nDo you know what a RAP champion is?\n\nDo you know who the RAP champion in your department is?\n\nRespondents who have neither access nor knowledge have been removed.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    4.4% \n  \n  \n    I don't know what a RAP champion is \n    15% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    41.9% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    3.5% \n  \n  \n    I know who the RAP champion in my department is \n    35.2% \n  \n\n\n\n Sample size = 480\n\n\n\n\n\n\n\n\n\nKnowledge of RAP strategy\nWe asked the respondents “What is your familiarity with the Analysis Function reproducible analytical pipelines (RAP) strategy?”.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    19.4% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    49.5% \n  \n  \n    I have read the RAP strategy \n    31.1% \n  \n\n\n\n Sample size = 485\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    12.6% \n    19.4% \n    21.6% \n    27.8% \n    18.6% \n  \n  \n    I feel confident implementing RAP in my work \n    8.7% \n    18.8% \n    20% \n    34.6% \n    17.9% \n  \n  \n    I feel supported to implement RAP in my work \n    6.4% \n    13.2% \n    24.1% \n    37.7% \n    18.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    4.9% \n    19.4% \n    15.3% \n    39.8% \n    20.6% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.6% \n    8.7% \n    24.9% \n    34.2% \n    24.5% \n  \n  \n    I think it is important to implement RAP in my work \n    2.3% \n    3.7% \n    18.1% \n    39% \n    36.9% \n  \n  \n    I understand what the key components of the RAP methodology are \n    7% \n    15.9% \n    18.4% \n    40.4% \n    18.4% \n  \n\n\n\n Sample size = 485"
  },
  {
    "objectID": "professions/government-statician-group.html#rap-scores",
    "href": "professions/government-statician-group.html#rap-scores",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\nRAP scores are then calculated for each respondent as the total of their positive responses. A score of 3 suggests that a respondent is implementing 3 components of RAP at least regularly.\n“Basic components” are the components which make up the RAP MVP. “Advanced components” are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    59.1% \n  \n  \n    Peer review \n    Basic \n    52.2% \n  \n  \n    Version control \n    Basic \n    39% \n  \n  \n    Documentation \n    Basic \n    30.6% \n  \n  \n    AQUA book guidance \n    Basic \n    24.1% \n  \n  \n    Team open source code \n    Basic \n    13.4% \n  \n  \n    Functions \n    Advanced \n    51.1% \n  \n  \n    Follow code style guidelines \n    Advanced \n    46.8% \n  \n  \n    Function documentation \n    Advanced \n    30.2% \n  \n  \n    Dependency management \n    Advanced \n    22.4% \n  \n  \n    Unit testing \n    Advanced \n    19.4% \n  \n  \n    Continuous integration \n    Advanced \n    13.6% \n  \n  \n    Code packages \n    Advanced \n    11.4% \n  \n\n\n\n Sample size = 464\n\n\n\n\n\n\n\n\n\nBasic RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Basic RAP scores \n    Percent \n  \n \n\n  \n    0 \n    14% \n  \n  \n    1 \n    26.7% \n  \n  \n    2 \n    22% \n  \n  \n    3 \n    14.2% \n  \n  \n    4 \n    13.1% \n  \n  \n    5 \n    7.1% \n  \n  \n    6 \n    2.8% \n  \n\n\n\n Sample size = 464\n\n\n\n\n\n\n\n\n\nAdvanced RAP scores\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Advanced RAP scores \n    Percent \n  \n \n\n  \n    0 \n    26.9% \n  \n  \n    1 \n    22% \n  \n  \n    2 \n    17.9% \n  \n  \n    3 \n    13.4% \n  \n  \n    4 \n    7.8% \n  \n  \n    5 \n    7.8% \n  \n  \n    6 \n    3% \n  \n  \n    7 \n    1.3% \n  \n\n\n\n Sample size = 464"
  },
  {
    "objectID": "professions.html",
    "href": "professions.html",
    "title": "Profession summaries",
    "section": "",
    "text": "Below are links to profession-specific reports These contain summary statistics, filtered by profession. Only professions with 20 or more respondents are included.\n\nGovernment data scientists\nDigital and data profession (DDAT)\nGovernment actuary’s department (GAD)\nGovernment economic service (GES)\nGovernment geography profession\nGovernment operational research (GORS)\nGovernment social research (GSR)\nGovernment statistician group (GSG)"
  },
  {
    "objectID": "summary.html#how-to-use-this-research",
    "href": "summary.html#how-to-use-this-research",
    "title": "The state of UK public sector analysis code: 2022",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. We are unable to provide details about response rates by department or profession. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "summary.html#coding-frequency-and-tools",
    "href": "summary.html#coding-frequency-and-tools",
    "title": "The state of UK public sector analysis code: 2022",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nMost respondents regularly use code at work\nOver the past three years, most respondents reported coding regularly or all the time to complete work objectives. This may be in part due to respondent bias, where those with an interest in coding are more likely to respond to the survey. However, we can conclude that coding is now, and has been for at least a few years, a normal aspect of analysis work in the public sector for many analysts.\n\n2022 data\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    In your current role, how often do you write code to complete your work objectives? \n    Percent \n  \n \n\n  \n    Never \n    12.3% \n  \n  \n    Rarely \n    10.6% \n  \n  \n    Sometimes \n    18.2% \n  \n  \n    Regularly \n    29% \n  \n  \n    All the time \n    29.9% \n  \n\n\n\n Sample size = 1322\n\n\n\n\n\n\n\n\n\nCoding frequency over time\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    In your current role, how often do you write code to complete your work objectives? \n    2020 \n    2021 \n    2022 \n  \n \n\n  \n    Never \n    15.1% \n    12% \n    12.3% \n  \n  \n    Rarely \n    12.9% \n    13% \n    10.6% \n  \n  \n    Sometimes \n    20.4% \n    18.4% \n    18.2% \n  \n  \n    Regularly \n    29.7% \n    30.9% \n    29% \n  \n  \n    All the time \n    21.9% \n    25.7% \n    29.9% \n  \n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions;\n\nDo you know how to program with this tool to a level suitable for your work?\n\nIs this tool available to use for your work?\n\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested\n\nMost respondents have access to open source tools\nMore respondents reported having access to R and Python than any other programming language listed here. R, Python and SQL are the most accessible programming languages across government, ahead of well established licensed tools such as SPSS, SAS and Stata.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    6.5% \n    58.9% \n    34.6% \n  \n  \n    Java / Scala \n    8% \n    60.1% \n    31.9% \n  \n  \n    Javascript / Typescript \n    11% \n    59.3% \n    29.7% \n  \n  \n    Matlab \n    5.5% \n    53.4% \n    41.1% \n  \n  \n    Python \n    68.5% \n    19.4% \n    12.1% \n  \n  \n    R \n    91.2% \n    4.1% \n    4.7% \n  \n  \n    SAS \n    34.4% \n    42.1% \n    23.5% \n  \n  \n    SPSS \n    31.9% \n    41.9% \n    26.2% \n  \n  \n    SQL \n    65.8% \n    24.9% \n    9.3% \n  \n  \n    Stata \n    20.1% \n    51.1% \n    28.7% \n  \n  \n    VBA \n    47.4% \n    39.2% \n    13.4% \n  \n\n\n\n Sample size = 1322\n\n\n\n\n\n\n\n\n\nOpen source tools have overtaken proprietary tools in capability\nMore respondents reported having the knowledge to use R, Python and SQL at work than any other coding tools, with SPSS being the most popular proprietary software. This shift towards open source tooling is in line with the RAP strategy and cross-government RAP standards.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    Don't Know \n    No \n  \n \n\n  \n    C++ / C# \n    7.9% \n    5.2% \n    86.8% \n  \n  \n    Java / Scala \n    4.7% \n    5.6% \n    89.7% \n  \n  \n    Javascript / Typescript \n    7.9% \n    5.5% \n    86.5% \n  \n  \n    Matlab \n    17% \n    5.4% \n    77.5% \n  \n  \n    Python \n    41.5% \n    2.9% \n    55.6% \n  \n  \n    R \n    71.9% \n    1.9% \n    26.2% \n  \n  \n    SAS \n    27.8% \n    4.6% \n    67.5% \n  \n  \n    SPSS \n    34.3% \n    4.9% \n    60.8% \n  \n  \n    SQL \n    56.2% \n    3.3% \n    40.5% \n  \n  \n    Stata \n    14.7% \n    4.6% \n    80.7% \n  \n  \n    VBA \n    26.5% \n    5.4% \n    68.1% \n  \n\n\n\n Sample size = 1322\n\n\n\n\n\n\n\n\n\nOpen source capability is increasing over time\nThe proportion of respondents who report having the capability to use R and Python has been increasing over the past three waves of CARS. In contrast, the proportion who are able to use SAS, SPSS or Stata has been decreasing during this time. R and Python has risen dramatically in popularity in recent years due to their use in data science. Python in particular is now along the most used and most popular programming languages globally, while both R and Python are in the top three most popular programming languages for data science.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming language type \n    Year \n    Know how to programme with these tools (percent) \n    Lower confidence limit (percent) \n    Upper confidence limit (percent) \n  \n \n\n  \n    open source \n    2020 \n    69.2% \n    66.3% \n    71.9% \n  \n  \n    open source \n    2021 \n    77% \n    74.1% \n    79.6% \n  \n  \n    open source \n    2022 \n    80.3% \n    78% \n    82.3% \n  \n  \n    proprietary \n    2020 \n    60.5% \n    57.5% \n    63.4% \n  \n  \n    proprietary \n    2021 \n    60.1% \n    56.9% \n    63.2% \n  \n  \n    proprietary \n    2022 \n    56.3% \n    53.6% \n    58.9% \n  \n\n\n\n\n\n\n\n\nDifferent professions have capability in different tools\nDifferences in preferred languages may lead to silos between analytical professions. For digital and data professionals, operational researchers, data scientists and geographers capability is highest in R, SQL and python. R is among the two top languages for capability for every analytical profession.\nHowever, proprietary tools tend to be more profession-specific. For example, economists have much higher stata capability than any other profession, while social researchers have the highest SPSS capability. Open source tooling offers better cross-profession as well as cross-department collaboration due to easier access to tools.\n\n\n\n \n  \n    Profession \n    C++ / C# \n    Java / Scala \n    Javascript / Typescript \n    Matlab \n    Python \n    R \n    SAS \n    SPSS \n    SQL \n    Stata \n    VBA \n  \n \n\n  \n    Data scientists \n    7.6% \n    8.2% \n    15.2% \n    24.5% \n    69% \n    84.8% \n    16.8% \n    26.1% \n    77.2% \n    5.4% \n    23.9% \n  \n  \n    Digital and data (DDAT) \n    16.3% \n    5.4% \n    21.7% \n    19.6% \n    70.7% \n    69.6% \n    19.6% \n    17.4% \n    78.3% \n    9.8% \n    33.7% \n  \n  \n    Actuaries \n    13.5% \n    10.8% \n    10.8% \n    21.6% \n    32.4% \n    62.2% \n    29.7% \n    8.1% \n    29.7% \n    10.8% \n    56.8% \n  \n  \n    Economists (GES) \n    1.8% \n    0.9% \n    2.8% \n    9.2% \n    24.8% \n    62.4% \n    12.8% \n    11.9% \n    21.1% \n    51.4% \n    11.9% \n  \n  \n    Geographers \n    18.2% \n    0% \n    27.3% \n    18.2% \n    72.7% \n    63.6% \n    13.6% \n    18.2% \n    68.2% \n    0% \n    22.7% \n  \n  \n    Operational researchers (GORS) \n    17.1% \n    5.7% \n    10% \n    32.9% \n    56.4% \n    85.7% \n    34.3% \n    17.1% \n    73.6% \n    6.4% \n    45.7% \n  \n  \n    Social researchers (GSR) \n    3.2% \n    2.6% \n    1.3% \n    6.5% \n    34.4% \n    51.9% \n    22.7% \n    67.5% \n    29.9% \n    24% \n    10.4% \n  \n  \n    Statisticians (GSG) \n    6.5% \n    5.1% \n    4.7% \n    18.6% \n    39.1% \n    77.5% \n    39.9% \n    41.5% \n    65.8% \n    12.6% \n    27.5% \n  \n\n\n\n\n\n\n\n\nMost respondents have access to git and know how to use it\nAccess to git is generally high across government. However, many have access to git but do not have the capability to use it, meaning there is more work to do to ensure analysts are able to learn these skills. However, some departments have no access, or limited access to git (see department pages).\nPlease note these outputs include people who do not code at work.\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    69.7% \n  \n  \n    No \n    8.7% \n  \n  \n    I don't know \n    21.6% \n  \n\n\n\n Sample size = 1322"
  },
  {
    "objectID": "summary.html#capability",
    "href": "summary.html#capability",
    "title": "The state of UK public sector analysis code: 2022",
    "section": "Capability",
    "text": "Capability\n\nMost respondents first learned to code in education\nHalf of respondents learned to code for the first time in education. Nevertheless, nearly a third reported learning code for the first time in public sector employment, mostly in their current role. These data show analysts are actively up-skilling in their roles and the organisation is able to draw experienced programmers from other parts of government, as well as those who leave education with some coding abilities.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    In current role \n    19.4% \n  \n  \n    In education \n    50% \n  \n  \n    In private sector employment \n    2.4% \n  \n  \n    In public sector employment \n    12.4% \n  \n  \n    Self-taught \n    14.4% \n  \n  \n    Other \n    1.4% \n  \n\n\n\n Sample size = 1240\n\n\n\n\n\n\n\n\n\nMost analysts’ coding capabilities are actively improving\nMost respondents with prior coding experience reported that their coding capability has improved while in their current role. Again, this shows the Analysis Function is building capability in-house as well as recruiting analysts with existing capability. However, results also show a minority of respondents who feel they are losing their capability. As more analysts gain capability, it is important that existing skills are retained.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    6% \n  \n  \n    Slightly worse \n    13.1% \n  \n  \n    No change \n    15.2% \n  \n  \n    Slightly better \n    34% \n  \n  \n    Significantly better \n    31.8% \n  \n\n\n\n Sample size = 1033\n\n\n\n\n\n\n\n\n\nHow often people write code is a strong predictor of capability change\nManagement responsibility and civil service grade are both negatively correlated with improvements to coding capability. In other words, more senior analysts are more likely to report that their coding abilities are becoming worse.\nWe used cross-government data to create an ordinal regression model. How often people write code was a very strong predictor at all levels (p < 0.001) of whether respondents report improvement to their coding capability. Analysts who use code at work at least some of the time were 4.5 times more likely to report more improvement/less decline to their coding abilities than those who rarely or never wrote code at work. The effect was even greater for those who reported writing code regularly or all the time.\nCivil service grade had a smaller effect, with those at grade 7 or 6 reporting less improvement to their coding abilities (p < .001), but no significant difference between those at HEO and SEO grades (p > .05). Line management responsibility and civil service grade had no significant effect when the model includes coding frequency regardless of whether it involved managing others who code (p > .05).\nThese findings show that allowing analysts to continue coding is key to retaining and building on existing skills. While seniority is less predictive of capability change, it is correlated with how often people write code at work, meaning more senior analysts are more likely to lose their capability and less likely to build capability.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Significantly worse \n    Slightly worse \n    No change \n    Slightly better \n    Significantly better \n  \n \n\n  \n    Never \n    34.9% \n    38.4% \n    23.3% \n    2.3% \n    1.2% \n  \n  \n    Rarely \n    18.5% \n    32.4% \n    26.9% \n    18.5% \n    3.7% \n  \n  \n    Sometimes \n    5.6% \n    22.6% \n    23.2% \n    35% \n    13.6% \n  \n  \n    Regularly \n    0.6% \n    7.6% \n    12.3% \n    46.5% \n    32.9% \n  \n  \n    All the time \n    0% \n    0.9% \n    8.1% \n    34.7% \n    56.4%"
  },
  {
    "objectID": "summary.html#reproducible-analytical-pipelines-rap",
    "href": "summary.html#reproducible-analytical-pipelines-rap",
    "title": "The state of UK public sector analysis code: 2022",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nRAP refers to the use of good software engineering practices to make analysis pipelines more reproducible. This approach aims to use automation to improve the quality and efficiency of analytical processes.\nThe following links contain more resources on RAP:\n\nyou can find minimum RAP standards in the RAP MVP\nyou can find guidance on quality assuring code in the Duck Book\n\n\nAwareness of RAP across government has increased\n\n\n\nOver the past three years, awareness of RAP has increased year on year across the Analysis Function. In 2022, 80% of respondents had heard of RAP, a 28% increase.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Year \n    Heard of RAP (percent) \n    Lower confidence limit \n    Upper confidence limit \n  \n \n\n  \n    2020 \n    62.5% \n    59.6% \n    65.4% \n  \n  \n    2021 \n    71.4% \n    68.4% \n    74.2% \n  \n  \n    2022 \n    80.1% \n    77.9% \n    82.2% \n  \n\n\n\n\n\n\n\n\nMost respondents have heard of RAP champions\nRAP champions support and promote the use of RAP across government. Although most respondents who have heard of RAP had heard of the RAP champions’ network, most did not know who their RAP champions are. More work is needed to increase awareness of the support available across government, including who its RAP champions are.\nPlease contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Have not heard of RAP \n    20.5% \n  \n  \n    I don't know what a RAP champion is \n    18.5% \n  \n  \n    I know what a RAP champion is but don't know who the RAP champion in my department is \n    33.1% \n  \n  \n    I know what a RAP champion is and there is no RAP champion in my department \n    3.6% \n  \n  \n    I know who the RAP champion in my department is \n    24.3% \n  \n\n\n\n Sample size = 1281\n\n\n\n\n\n\n\n\n\nMost respondents have heard of the RAP strategy\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government. Although most respondents had not read the strategy, 77% of those who had heard of RAP were also aware of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Awareness of the RAP strategy \n    Percent \n  \n \n\n  \n    I have not heard of the RAP strategy \n    25.6% \n  \n  \n    I have heard of the RAP strategy, but I haven't read it \n    48.5% \n  \n  \n    I have read the RAP strategy \n    25.8% \n  \n\n\n\n Sample size = 1059\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\nRespondents see the benefits of RAP but most are not currently implementing it\nWe asked respondents who had heard of RAP a series of questions about their opinions on RAP. The majority agreed with the statement “I think it is important to implement RAP in my work” (71.4%), but only only 40% agreed they are currently implementing RAP.\nSimilarly , around half of the respondents agreed on various statements on understanding RAP and having the support and resources to implement it. While awareness and buy-in is high, this highlights the need to ensure analysts are aware of the resources currently available, and for additional resources to be made available where gaps currently exist.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    15.8% \n    21.2% \n    23% \n    23.8% \n    16.2% \n  \n  \n    I feel confident implementing RAP in my work \n    11% \n    21.2% \n    21.1% \n    31.7% \n    15.1% \n  \n  \n    I feel supported to implement RAP in my work \n    8.7% \n    14.7% \n    27.6% \n    34.3% \n    14.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    7.4% \n    21.3% \n    18.1% \n    36.1% \n    17.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    9.7% \n    10.7% \n    28.3% \n    30.5% \n    20.8% \n  \n  \n    I think it is important to implement RAP in my work \n    3.9% \n    4.4% \n    20.3% \n    38.1% \n    33.2% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.2% \n    17.8% \n    18.7% \n    39.4% \n    16% \n  \n\n\n\n Sample size = 1059"
  },
  {
    "objectID": "summary.html#good-coding-practices",
    "href": "summary.html#good-coding-practices",
    "title": "The state of UK public sector analysis code: 2022",
    "section": "Good coding practices",
    "text": "Good coding practices\nWe asked respondents who reported writing code at work about the good practices they apply when writing code at work. These questions cover many of the coding practices recommended in the quality assurance of code for analysis and research guidance, as well as the minimum RAP standards set by the cross-government RAP champions network.\n\nRespondents do not consistently apply RAP practices\nWhile many respondents make use of RAP practices, these are very inconsistently applied. The chart below present the frequency of respondents reporting that they apply these practices “regularly” or “all the time”. For documentation, writing readme files was considered a minimum requirement. For dependency management and continuous integration respondents were only asked whether they use these at all.\nWhile most respondents who write code use open source software and peer review code regularly, this is not the case for other practices. Basic RAP practices, defined by the RAP champions network as being part of the minimum RAP standards are presented in blue. Among these, open sourcing code is particularly uncommon, despite being part of the digital service standard.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    61.8% \n  \n  \n    Peer review \n    Basic \n    53.1% \n  \n  \n    Version control \n    Basic \n    38.8% \n  \n  \n    Documentation \n    Basic \n    30.2% \n  \n  \n    AQUA book guidance \n    Basic \n    19.6% \n  \n  \n    Team open source code \n    Basic \n    11.5% \n  \n  \n    Functions \n    Advanced \n    54.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    48.1% \n  \n  \n    Function documentation \n    Advanced \n    30% \n  \n  \n    Dependency management \n    Advanced \n    26% \n  \n  \n    Unit testing \n    Advanced \n    19.8% \n  \n  \n    Continuous integration \n    Advanced \n    14.7% \n  \n  \n    Code packages \n    Advanced \n    11.7% \n  \n\n\n\n Sample size = 1159\n\n\n\n\n\n\n\n\n\nMany have the capability to apply good practices, but do not always do so\nAs the detailed breakdowns below show, analysts often apply these good practices some of the time. However, in most cases fewer than half responded “regularly” or “all the time”, meaning they often do not use these despite having the capability to do so.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Apply AQUA book principles with analysis code \n    39.9% \n    14.8% \n    9.2% \n    16.6% \n    15% \n    4.6% \n  \n  \n    Automated data quality assurance \n    4.8% \n    20.5% \n    18.5% \n    27.7% \n    20.6% \n    7.9% \n  \n  \n    Code review \n    0.6% \n    7.4% \n    11.4% \n    27.5% \n    32.7% \n    20.4% \n  \n  \n    Coding guidelines / Style guides \n    5.7% \n    11.8% \n    9.1% \n    25.2% \n    33.5% \n    14.7% \n  \n  \n    Functions \n    3.6% \n    8.5% \n    9.5% \n    24% \n    27.9% \n    26.6% \n  \n  \n    Open source own code \n    13.1% \n    45.4% \n    15.1% \n    14.9% \n    7.3% \n    4.1% \n  \n  \n    Packaging code \n    12.6% \n    44.4% \n    16.4% \n    14.8% \n    8.1% \n    3.6% \n  \n  \n    Standard directory structure \n    23.8% \n    15.6% \n    9.4% \n    18.1% \n    21.5% \n    11.6% \n  \n  \n    Unit testing \n    26.9% \n    17.3% \n    14.7% \n    21.3% \n    13.2% \n    6.6% \n  \n  \n    Use open source software \n    7.2% \n    11.8% \n    6.1% \n    13% \n    22.7% \n    39.1% \n  \n  \n    Version control \n    6.1% \n    31.2% \n    10.4% \n    13.5% \n    17.8% \n    21.1% \n  \n\n\n\n Sample size = 1159\n\n\n\n\n\n\n\n\n\nAnalysts rely primarily on code comments for documentation\nMany analysts do not regularly document code in any form other than code comments. While code comments are useful, other forms of documentation are needed to ensure the code is easy to review and work with, and truly reproducible.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    23.6% \n    29.9% \n    12.3% \n    17.9% \n    11% \n    5.3% \n  \n  \n    Code comments \n    2.4% \n    4.4% \n    1.9% \n    8.5% \n    27.3% \n    55.6% \n  \n  \n    Data or assumptions registers \n    22.9% \n    35% \n    11.9% \n    11% \n    12.6% \n    6.6% \n  \n  \n    Desk notes \n    21.1% \n    18.5% \n    11.4% \n    21.1% \n    19.5% \n    8.5% \n  \n  \n    Documentation for each function or class \n    11.7% \n    25.1% \n    13.7% \n    19.4% \n    17.9% \n    12.2% \n  \n  \n    Flow charts \n    6.8% \n    38.5% \n    19.8% \n    23.4% \n    9.3% \n    2.2% \n  \n  \n    README files \n    6.6% \n    23.1% \n    14.6% \n    23.6% \n    19.5% \n    12.6% \n  \n\n\n\n Sample size = 1159"
  },
  {
    "objectID": "summary.html#summary",
    "href": "summary.html#summary",
    "title": "The state of UK public sector analysis code: 2022",
    "section": "Summary",
    "text": "Summary\nThe findings above show that the Analysis Function has made great strides towards RAP adoption. Using code for analysis is widespread. Open source coding tools such as R, Python, SQL and git are widely available and used (although this varies by organisation). RAP awareness has increased dramatically and many analysts feel supported to apply RAP in their work. Capability is generally increasing, but there is work to do to ensure analysts can retain these coding skills, especially as they move to more senior positions.\nHowever, there is still much work to be done before RAP becomes the default way of working. While many analysts write code, few consistently apply RAP principles while doing so. Although most respondents see the value of RAP in their work and are actively implementing it, the data on good practices suggest that teams across the Analysis Function still have a work to do before consistently meeting the minimum RAP standards."
  }
]