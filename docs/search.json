[
  {
    "objectID": "data_collection.html#where-our-data-comes-from",
    "href": "data_collection.html#where-our-data-comes-from",
    "title": "Data collection",
    "section": "Where our data comes from",
    "text": "Where our data comes from\nLink tracking allows us to see where responses are coming from. Links promoted by RAP champions were the most commonly used for the past three waves, and accounted for over half of responses in 2023.\n\n\n\n \n  \n    Tracking link \n    2020 \n    2021 \n    2022 \n    2023 \n  \n \n\n  \n    RAP champions \n    33.9% \n    47.6% \n    40.8% \n    50.9% \n  \n  \n    HoP/DDan mailing list \n    4.7% \n    12.8% \n    15.7% \n    20.2% \n  \n  \n    Other \n    12% \n    2.6% \n    6.8% \n    11.9% \n  \n  \n    Profession newsletters/mailing lists \n    7.5% \n    10.7% \n    15.6% \n    9.7% \n  \n  \n    Slack \n    12.2% \n    3.7% \n    11.8% \n    7.3% \n  \n  \n    Quality champions \n    0% \n    14.7% \n    5.2% \n    0% \n  \n  \n    Other champions \n    12.3% \n    0.8% \n    0% \n    0% \n  \n  \n    ONS RAS mailing list \n    17.5% \n    7% \n    4.2% \n    0%"
  },
  {
    "objectID": "data_collection.html#sample-size-by-year",
    "href": "data_collection.html#sample-size-by-year",
    "title": "Data collection",
    "section": "Sample size by year",
    "text": "Sample size by year\n\n\n\n \n  \n    Year \n    Sample \n  \n \n\n  \n    2020 \n    1060 \n  \n  \n    2021 \n    912 \n  \n  \n    2022 \n    1322 \n  \n  \n    2023 \n    1297"
  },
  {
    "objectID": "data_collection.html#coding-frequency",
    "href": "data_collection.html#coding-frequency",
    "title": "Data collection",
    "section": "Coding frequency",
    "text": "Coding frequency\nEvery year, we ask respondents how often they code to achieve work objectives. While our communication strategy has changed over time, particularly to encourage more non-coders to respond, the findings remain consistent, with a gradual increase in the number of coders over time. Although we seek responses from all analysts the data probably over-represents people with current or prior coding experience.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    In your current role, how often do you write code to complete your work objectives? \n    2020 \n    2021 \n    2022 \n    2023 \n  \n \n\n  \n    Never \n    15.1% \n    12% \n    12.3% \n    13.3% \n  \n  \n    Rarely \n    12.9% \n    13% \n    10.6% \n    11.7% \n  \n  \n    Sometimes \n    20.4% \n    18.4% \n    18.2% \n    19.7% \n  \n  \n    Regularly \n    29.7% \n    30.9% \n    29% \n    27.4% \n  \n  \n    All the time \n    21.9% \n    25.7% \n    29.9% \n    27.9%"
  },
  {
    "objectID": "data_collection.html#grade",
    "href": "data_collection.html#grade",
    "title": "Data collection",
    "section": "Grade",
    "text": "Grade\nAcross all years, over 80% of Civil Service respondents reported that they are at H, S or Grade 7 grades. While this will be representative of the grade distribution of analysts in some government organisations, it may not be the case for all organisations.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Grade \n    2020 \n    2021 \n    2022 \n    2023 \n  \n \n\n  \n    Administrative officer or Executive officer \n    8.1% \n    9% \n    8.1% \n    6.9% \n  \n  \n    Higher Executive Officer \n    28.2% \n    27.7% \n    27.1% \n    28.6% \n  \n  \n    Senior Executive Officer \n    32.9% \n    29.6% \n    32.1% \n    32.1% \n  \n  \n    Grade 7 \n    24.2% \n    26.8% \n    23.8% \n    27.5% \n  \n  \n    Grade 6 or above \n    6.7% \n    6.9% \n    8.9% \n    5%"
  },
  {
    "objectID": "data_collection.html#profession",
    "href": "data_collection.html#profession",
    "title": "Data collection",
    "section": "Profession",
    "text": "Profession\nBelow is a breakdown of the proportion of respondents in different Civil Service professions. These cover the Analysis Function professions and do not apply outside of the civil service. The exception to these are data scientists and data engineers who do not have an official government profession. They are included separately here to avoid skewing the data for other professions. Note that respondents can be members of more than one analytical profession. Profession data is difficult to compare across years as these questions have changed in line with changes to the Analysis Function.\nThe CARS sample has high representation from statisticians compared with other professions. This again may be representative of some organisations but not all.\n\n\n\n \n  \n    Profession \n    Percent \n  \n \n\n  \n    Statisticians \n    31.7% \n  \n  \n    Social researchers \n    17.9% \n  \n  \n    Civil servant - no profession membership \n    11.3% \n  \n  \n    Data scientists \n    11.1% \n  \n  \n    Operational researchers \n    10.9% \n  \n  \n    Economists \n    9.6% \n  \n  \n    Digital, data and technology profession \n    6.2% \n  \n  \n    Civil servant - other profession \n    3.7% \n  \n  \n    Data engineers \n    2.3% \n  \n  \n    Geographers \n    1.5% \n  \n  \n    Actuaries \n    0%"
  },
  {
    "objectID": "departments/department-for-business--trade.html#how-to-use-this-research",
    "href": "departments/department-for-business--trade.html#how-to-use-this-research",
    "title": "Department summary: Department for Business & Trade",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-business--trade.html#coding-frequency-and-tools",
    "href": "departments/department-for-business--trade.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Business & Trade",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    28.7% \n  \n  \n    Rarely \n    17.6% \n  \n  \n    Sometimes \n    20.4% \n  \n  \n    Regularly \n    18.5% \n  \n  \n    All the time \n    14.8% \n  \n\n\n\n Sample size = 108\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    69.4% \n    4.6% \n    25.9% \n  \n  \n    R \n    98.1% \n    0.9% \n    0.9% \n  \n  \n    SQL \n    60.2% \n    5.6% \n    34.3% \n  \n  \n    Matlab \n    4.6% \n    25.9% \n    69.4% \n  \n  \n    SAS \n    12% \n    23.1% \n    64.8% \n  \n  \n    SPSS \n    35.2% \n    19.4% \n    45.4% \n  \n  \n    Stata \n    36.1% \n    18.5% \n    45.4% \n  \n  \n    VBA \n    27.8% \n    15.7% \n    56.5% \n  \n\n\n\n Sample size = 108\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    21.3% \n    40.7% \n    38% \n  \n  \n    R \n    53.7% \n    33.3% \n    13% \n  \n  \n    SQL \n    33.3% \n    36.1% \n    30.6% \n  \n  \n    Matlab \n    3.7% \n    40.7% \n    55.6% \n  \n  \n    SAS \n    6.5% \n    42.6% \n    50.9% \n  \n  \n    SPSS \n    17.6% \n    40.7% \n    41.7% \n  \n  \n    Stata \n    13.9% \n    38.9% \n    47.2% \n  \n  \n    VBA \n    11.1% \n    43.5% \n    45.4% \n  \n\n\n\n Sample size = 108\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    63% \n  \n  \n    No \n    2.8% \n  \n  \n    I don't know \n    34.3% \n  \n\n\n\n Sample size = 108\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    45.4% \n  \n  \n    No \n    49.1% \n  \n  \n    I don't know \n    5.6% \n  \n\n\n\n Sample size = 108"
  },
  {
    "objectID": "departments/department-for-business--trade.html#coding-capability-and-change",
    "href": "departments/department-for-business--trade.html#coding-capability-and-change",
    "title": "Department summary: Department for Business & Trade",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    29.9% \n  \n  \n    Education \n    50.6% \n  \n  \n    Previous private sector employment \n    0% \n  \n  \n    Previous public sector employment \n    13% \n  \n  \n    Self-taught \n    6.5% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.7% \n  \n  \n    Slightly worse \n    9.3% \n  \n  \n    Stayed the same \n    22.2% \n  \n  \n    Slightly better \n    31.5% \n  \n  \n    Significantly better \n    33.3% \n  \n\n\n\n Sample size = 54"
  },
  {
    "objectID": "departments/department-for-business--trade.html#coding-practices",
    "href": "departments/department-for-business--trade.html#coding-practices",
    "title": "Department summary: Department for Business & Trade",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    9.1% \n    32.5% \n    15.6% \n    23.4% \n    11.7% \n    7.8% \n  \n  \n    Code review \n    5.2% \n    9.1% \n    7.8% \n    27.3% \n    32.5% \n    18.2% \n  \n  \n    Coding guidelines / Style guides \n    13% \n    16.9% \n    10.4% \n    23.4% \n    29.9% \n    6.5% \n  \n  \n    Functions \n    7.8% \n    10.4% \n    9.1% \n    22.1% \n    31.2% \n    19.5% \n  \n  \n    Open source own code \n    28.6% \n    32.5% \n    15.6% \n    13% \n    3.9% \n    6.5% \n  \n  \n    Packaging code \n    18.2% \n    57.1% \n    10.4% \n    11.7% \n    2.6% \n    0% \n  \n  \n    Proportionate quality assurance \n    10.4% \n    14.3% \n    0% \n    14.3% \n    33.8% \n    27.3% \n  \n  \n    Quality assurance throughout development \n    6.5% \n    11.7% \n    9.1% \n    23.4% \n    26% \n    23.4% \n  \n  \n    Standard directory structure \n    28.6% \n    22.1% \n    10.4% \n    16.9% \n    9.1% \n    13% \n  \n  \n    Unit testing \n    33.8% \n    24.7% \n    11.7% \n    14.3% \n    10.4% \n    5.2% \n  \n  \n    Use open source software \n    6.5% \n    11.7% \n    10.4% \n    19.5% \n    16.9% \n    35.1% \n  \n  \n    Version control \n    9.1% \n    32.5% \n    13% \n    14.3% \n    15.6% \n    15.6% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    13% \n    32.5% \n    18.2% \n    19.5% \n    9.1% \n    7.8% \n  \n  \n    Code comments \n    6.5% \n    13% \n    1.3% \n    3.9% \n    23.4% \n    51.9% \n  \n  \n    Data or assumptions registers \n    14.3% \n    28.6% \n    13% \n    23.4% \n    15.6% \n    5.2% \n  \n  \n    Desk notes \n    18.2% \n    27.3% \n    10.4% \n    15.6% \n    23.4% \n    5.2% \n  \n  \n    Documentation for each function or class \n    14.3% \n    33.8% \n    13% \n    19.5% \n    10.4% \n    9.1% \n  \n  \n    Flow charts \n    9.1% \n    35.1% \n    16.9% \n    19.5% \n    10.4% \n    9.1% \n  \n  \n    README files \n    6.5% \n    31.2% \n    14.3% \n    18.2% \n    19.5% \n    10.4% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    14.3% \n  \n  \n    No \n    45.5% \n  \n  \n    I don't know what dependency management is \n    40.3% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    10.4% \n  \n  \n    No \n    46.8% \n  \n  \n    I don't know what continuous integration is \n    42.9% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    3.9% \n  \n  \n    No \n    59.7% \n  \n  \n    I don't know what reproducible workflows are \n    36.4% \n  \n\n\n\n Sample size = 77"
  },
  {
    "objectID": "departments/department-for-business--trade.html#reproducible-analytical-pipelines-rap",
    "href": "departments/department-for-business--trade.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Department for Business & Trade",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    83.1% \n  \n  \n    No \n    16.9% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    12.5% \n  \n  \n    Yes, and I know who the RAP Champion is \n    34.4% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    14.1% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    39.1% \n  \n\n\n\n Sample size = 64\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    17.2% \n  \n  \n    Yes, but I haven't read it \n    51.6% \n  \n  \n    No \n    31.2% \n  \n\n\n\n Sample size = 64\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    25% \n    23.4% \n    20.3% \n    25% \n    6.2% \n  \n  \n    I feel confident implementing RAP in my work \n    4.7% \n    26.6% \n    31.2% \n    28.1% \n    9.4% \n  \n  \n    I feel supported to implement RAP in my work \n    6.2% \n    25% \n    34.4% \n    28.1% \n    6.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    4.7% \n    25% \n    23.4% \n    37.5% \n    9.4% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.8% \n    17.2% \n    25% \n    42.2% \n    7.8% \n  \n  \n    I think it is important to implement RAP in my work \n    6.2% \n    7.8% \n    28.1% \n    37.5% \n    20.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    6.2% \n    28.1% \n    23.4% \n    32.8% \n    9.4% \n  \n\n\n\n Sample size = 64"
  },
  {
    "objectID": "departments/department-for-business--trade.html#rap-scores",
    "href": "departments/department-for-business--trade.html#rap-scores",
    "title": "Department summary: Department for Business & Trade",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Proportionate QA \n    Basic \n    61% \n  \n  \n    Use open source software \n    Basic \n    51.9% \n  \n  \n    Peer review \n    Basic \n    50.6% \n  \n  \n    Version control \n    Basic \n    31.2% \n  \n  \n    Documentation \n    Basic \n    27.3% \n  \n  \n    Team open source code \n    Basic \n    10.4% \n  \n  \n    Functions \n    Advanced \n    50.6% \n  \n  \n    Follow code style guidelines \n    Advanced \n    36.4% \n  \n  \n    Function documentation \n    Advanced \n    19.5% \n  \n  \n    Unit testing \n    Advanced \n    15.6% \n  \n  \n    Dependency management \n    Advanced \n    14.3% \n  \n  \n    Continuous integration \n    Advanced \n    10.4% \n  \n  \n    Code packages \n    Advanced \n    2.6% \n  \n\n\n\n Sample size = 77"
  },
  {
    "objectID": "departments/department-for-education-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/department-for-education-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department for Education (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-education-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-education-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Education (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    11.9% \n  \n  \n    Rarely \n    9.5% \n  \n  \n    Sometimes \n    14.3% \n  \n  \n    Regularly \n    21.4% \n  \n  \n    All the time \n    42.9% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    69% \n    4.8% \n    26.2% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SQL \n    88.1% \n    2.4% \n    9.5% \n  \n  \n    Matlab \n    2.4% \n    38.1% \n    59.5% \n  \n  \n    SAS \n    2.4% \n    31% \n    66.7% \n  \n  \n    SPSS \n    31% \n    26.2% \n    42.9% \n  \n  \n    Stata \n    9.5% \n    16.7% \n    73.8% \n  \n  \n    VBA \n    52.4% \n    7.1% \n    40.5% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    21.4% \n    40.5% \n    38.1% \n  \n  \n    R \n    81% \n    14.3% \n    4.8% \n  \n  \n    SQL \n    59.5% \n    31% \n    9.5% \n  \n  \n    Matlab \n    14.3% \n    26.2% \n    59.5% \n  \n  \n    SAS \n    7.1% \n    33.3% \n    59.5% \n  \n  \n    SPSS \n    9.5% \n    21.4% \n    69% \n  \n  \n    Stata \n    0% \n    33.3% \n    66.7% \n  \n  \n    VBA \n    21.4% \n    38.1% \n    40.5% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    92.9% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    7.1% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    73.8% \n  \n  \n    No \n    26.2% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 42"
  },
  {
    "objectID": "departments/department-for-education-excl-agencies-.html#coding-capability-and-change",
    "href": "departments/department-for-education-excl-agencies-.html#coding-capability-and-change",
    "title": "Department summary: Department for Education (excl. agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    10.8% \n  \n  \n    Education \n    59.5% \n  \n  \n    Previous private sector employment \n    0% \n  \n  \n    Previous public sector employment \n    18.9% \n  \n  \n    Self-taught \n    10.8% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    3% \n  \n  \n    Stayed the same \n    21.2% \n  \n  \n    Slightly better \n    33.3% \n  \n  \n    Significantly better \n    42.4% \n  \n\n\n\n Sample size = 33"
  },
  {
    "objectID": "departments/department-for-education-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-education-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Education (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    5.4% \n    8.1% \n    29.7% \n    29.7% \n    18.9% \n    8.1% \n  \n  \n    Code review \n    2.7% \n    0% \n    2.7% \n    24.3% \n    35.1% \n    35.1% \n  \n  \n    Coding guidelines / Style guides \n    10.8% \n    0% \n    8.1% \n    21.6% \n    40.5% \n    18.9% \n  \n  \n    Functions \n    8.1% \n    5.4% \n    18.9% \n    10.8% \n    35.1% \n    21.6% \n  \n  \n    Open source own code \n    10.8% \n    51.4% \n    16.2% \n    8.1% \n    5.4% \n    8.1% \n  \n  \n    Packaging code \n    13.5% \n    56.8% \n    13.5% \n    10.8% \n    2.7% \n    2.7% \n  \n  \n    Proportionate quality assurance \n    5.4% \n    2.7% \n    0% \n    5.4% \n    48.6% \n    37.8% \n  \n  \n    Quality assurance throughout development \n    8.1% \n    5.4% \n    5.4% \n    13.5% \n    40.5% \n    27% \n  \n  \n    Standard directory structure \n    40.5% \n    2.7% \n    2.7% \n    16.2% \n    16.2% \n    21.6% \n  \n  \n    Unit testing \n    27% \n    18.9% \n    16.2% \n    18.9% \n    10.8% \n    8.1% \n  \n  \n    Use open source software \n    0% \n    0% \n    8.1% \n    8.1% \n    21.6% \n    62.2% \n  \n  \n    Version control \n    2.7% \n    13.5% \n    13.5% \n    18.9% \n    21.6% \n    29.7% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    10.8% \n    16.2% \n    5.4% \n    37.8% \n    18.9% \n    10.8% \n  \n  \n    Code comments \n    5.4% \n    0% \n    0% \n    5.4% \n    16.2% \n    73% \n  \n  \n    Data or assumptions registers \n    16.2% \n    5.4% \n    18.9% \n    13.5% \n    24.3% \n    21.6% \n  \n  \n    Desk notes \n    32.4% \n    13.5% \n    16.2% \n    24.3% \n    10.8% \n    2.7% \n  \n  \n    Documentation for each function or class \n    10.8% \n    24.3% \n    18.9% \n    8.1% \n    24.3% \n    13.5% \n  \n  \n    Flow charts \n    10.8% \n    24.3% \n    29.7% \n    21.6% \n    10.8% \n    2.7% \n  \n  \n    README files \n    8.1% \n    16.2% \n    13.5% \n    29.7% \n    18.9% \n    13.5% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    40.5% \n  \n  \n    No \n    27% \n  \n  \n    I don't know what dependency management is \n    32.4% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    18.9% \n  \n  \n    No \n    18.9% \n  \n  \n    I don't know what continuous integration is \n    62.2% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    2.7% \n  \n  \n    No \n    48.6% \n  \n  \n    I don't know what reproducible workflows are \n    48.6% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/department-for-education-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/department-for-education-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Department for Education (excl. agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    100% \n  \n  \n    No \n    0% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    13.5% \n  \n  \n    Yes, and I know who the RAP Champion is \n    62.2% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    13.5% \n  \n  \n    No \n    2.7% \n  \n  \n    I don't know \n    8.1% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    21.6% \n  \n  \n    Yes, but I haven't read it \n    56.8% \n  \n  \n    No \n    21.6% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    16.2% \n    16.2% \n    13.5% \n    32.4% \n    21.6% \n  \n  \n    I feel confident implementing RAP in my work \n    8.1% \n    10.8% \n    24.3% \n    32.4% \n    24.3% \n  \n  \n    I feel supported to implement RAP in my work \n    2.7% \n    10.8% \n    29.7% \n    24.3% \n    32.4% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.4% \n    2.7% \n    16.2% \n    37.8% \n    37.8% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    8.1% \n    8.1% \n    29.7% \n    18.9% \n    35.1% \n  \n  \n    I think it is important to implement RAP in my work \n    5.4% \n    0% \n    18.9% \n    32.4% \n    43.2% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.1% \n    8.1% \n    16.2% \n    35.1% \n    32.4% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/department-for-education-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-education-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Education (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Proportionate QA \n    Basic \n    86.5% \n  \n  \n    Use open source software \n    Basic \n    83.8% \n  \n  \n    Peer review \n    Basic \n    70.3% \n  \n  \n    Version control \n    Basic \n    51.4% \n  \n  \n    Documentation \n    Basic \n    32.4% \n  \n  \n    Team open source code \n    Basic \n    13.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    59.5% \n  \n  \n    Functions \n    Advanced \n    56.8% \n  \n  \n    Dependency management \n    Advanced \n    40.5% \n  \n  \n    Function documentation \n    Advanced \n    37.8% \n  \n  \n    Unit testing \n    Advanced \n    18.9% \n  \n  \n    Continuous integration \n    Advanced \n    18.9% \n  \n  \n    Code packages \n    Advanced \n    5.4% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/department-for-energy-security--net-zero.html#how-to-use-this-research",
    "href": "departments/department-for-energy-security--net-zero.html#how-to-use-this-research",
    "title": "Department summary: Department for Energy Security & Net Zero",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-energy-security--net-zero.html#coding-frequency-and-tools",
    "href": "departments/department-for-energy-security--net-zero.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Energy Security & Net Zero",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.3% \n  \n  \n    Rarely \n    8.3% \n  \n  \n    Sometimes \n    20.8% \n  \n  \n    Regularly \n    41.7% \n  \n  \n    All the time \n    20.8% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    91.7% \n    0% \n    8.3% \n  \n  \n    R \n    95.8% \n    0% \n    4.2% \n  \n  \n    SQL \n    83.3% \n    0% \n    16.7% \n  \n  \n    Matlab \n    16.7% \n    29.2% \n    54.2% \n  \n  \n    SAS \n    41.7% \n    8.3% \n    50% \n  \n  \n    SPSS \n    33.3% \n    8.3% \n    58.3% \n  \n  \n    Stata \n    20.8% \n    20.8% \n    58.3% \n  \n  \n    VBA \n    58.3% \n    12.5% \n    29.2% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    66.7% \n    12.5% \n    20.8% \n  \n  \n    R \n    66.7% \n    12.5% \n    20.8% \n  \n  \n    SQL \n    70.8% \n    12.5% \n    16.7% \n  \n  \n    Matlab \n    8.3% \n    16.7% \n    75% \n  \n  \n    SAS \n    12.5% \n    25% \n    62.5% \n  \n  \n    SPSS \n    12.5% \n    16.7% \n    70.8% \n  \n  \n    Stata \n    0% \n    25% \n    75% \n  \n  \n    VBA \n    16.7% \n    25% \n    58.3% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    83.3% \n  \n  \n    No \n    8.3% \n  \n  \n    I don't know \n    8.3% \n  \n\n\n\n Sample size = 24\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    70.8% \n  \n  \n    No \n    20.8% \n  \n  \n    I don't know \n    8.3% \n  \n\n\n\n Sample size = 24"
  },
  {
    "objectID": "departments/department-for-energy-security--net-zero.html#coding-capability-and-change",
    "href": "departments/department-for-energy-security--net-zero.html#coding-capability-and-change",
    "title": "Department summary: Department for Energy Security & Net Zero",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    18.2% \n  \n  \n    Education \n    50% \n  \n  \n    Previous private sector employment \n    0% \n  \n  \n    Previous public sector employment \n    22.7% \n  \n  \n    Self-taught \n    9.1% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    5.6% \n  \n  \n    Slightly worse \n    5.6% \n  \n  \n    Stayed the same \n    22.2% \n  \n  \n    Slightly better \n    33.3% \n  \n  \n    Significantly better \n    33.3% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "departments/department-for-energy-security--net-zero.html#coding-practices",
    "href": "departments/department-for-energy-security--net-zero.html#coding-practices",
    "title": "Department summary: Department for Energy Security & Net Zero",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    9.1% \n    9.1% \n    22.7% \n    22.7% \n    22.7% \n    13.6% \n  \n  \n    Code review \n    4.5% \n    0% \n    4.5% \n    22.7% \n    40.9% \n    27.3% \n  \n  \n    Coding guidelines / Style guides \n    13.6% \n    9.1% \n    9.1% \n    22.7% \n    13.6% \n    31.8% \n  \n  \n    Functions \n    9.1% \n    4.5% \n    4.5% \n    0% \n    40.9% \n    40.9% \n  \n  \n    Open source own code \n    22.7% \n    40.9% \n    27.3% \n    4.5% \n    0% \n    4.5% \n  \n  \n    Packaging code \n    13.6% \n    36.4% \n    27.3% \n    9.1% \n    4.5% \n    9.1% \n  \n  \n    Proportionate quality assurance \n    9.1% \n    0% \n    4.5% \n    22.7% \n    36.4% \n    27.3% \n  \n  \n    Quality assurance throughout development \n    9.1% \n    0% \n    0% \n    36.4% \n    31.8% \n    22.7% \n  \n  \n    Standard directory structure \n    18.2% \n    18.2% \n    18.2% \n    22.7% \n    9.1% \n    13.6% \n  \n  \n    Unit testing \n    22.7% \n    9.1% \n    13.6% \n    27.3% \n    9.1% \n    18.2% \n  \n  \n    Use open source software \n    0% \n    4.5% \n    4.5% \n    9.1% \n    27.3% \n    54.5% \n  \n  \n    Version control \n    9.1% \n    4.5% \n    4.5% \n    13.6% \n    31.8% \n    36.4% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    13.6% \n    4.5% \n    27.3% \n    31.8% \n    4.5% \n    18.2% \n  \n  \n    Code comments \n    9.1% \n    0% \n    4.5% \n    0% \n    40.9% \n    45.5% \n  \n  \n    Data or assumptions registers \n    18.2% \n    13.6% \n    22.7% \n    13.6% \n    9.1% \n    22.7% \n  \n  \n    Desk notes \n    36.4% \n    9.1% \n    0% \n    9.1% \n    31.8% \n    13.6% \n  \n  \n    Documentation for each function or class \n    9.1% \n    4.5% \n    13.6% \n    31.8% \n    22.7% \n    18.2% \n  \n  \n    Flow charts \n    9.1% \n    13.6% \n    18.2% \n    40.9% \n    13.6% \n    4.5% \n  \n  \n    README files \n    9.1% \n    27.3% \n    13.6% \n    13.6% \n    22.7% \n    13.6% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    63.6% \n  \n  \n    No \n    13.6% \n  \n  \n    I don't know what dependency management is \n    22.7% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    36.4% \n  \n  \n    No \n    18.2% \n  \n  \n    I don't know what continuous integration is \n    45.5% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    9.1% \n  \n  \n    No \n    50% \n  \n  \n    I don't know what reproducible workflows are \n    40.9% \n  \n\n\n\n Sample size = 22"
  },
  {
    "objectID": "departments/department-for-energy-security--net-zero.html#reproducible-analytical-pipelines-rap",
    "href": "departments/department-for-energy-security--net-zero.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Department for Energy Security & Net Zero",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    95.5% \n  \n  \n    No \n    4.5% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    4.8% \n  \n  \n    Yes, and I know who the RAP Champion is \n    47.6% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    28.6% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    19% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    33.3% \n  \n  \n    Yes, but I haven't read it \n    61.9% \n  \n  \n    No \n    4.8% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.3% \n    28.6% \n    14.3% \n    14.3% \n    28.6% \n  \n  \n    I feel confident implementing RAP in my work \n    0% \n    14.3% \n    9.5% \n    47.6% \n    28.6% \n  \n  \n    I feel supported to implement RAP in my work \n    0% \n    14.3% \n    14.3% \n    42.9% \n    28.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    0% \n    9.5% \n    4.8% \n    52.4% \n    33.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    14.3% \n    14.3% \n    14.3% \n    23.8% \n    33.3% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    4.8% \n    19% \n    23.8% \n    52.4% \n  \n  \n    I understand what the key components of the RAP methodology are \n    0% \n    9.5% \n    19% \n    47.6% \n    23.8% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "departments/department-for-energy-security--net-zero.html#rap-scores",
    "href": "departments/department-for-energy-security--net-zero.html#rap-scores",
    "title": "Department summary: Department for Energy Security & Net Zero",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    81.8% \n  \n  \n    Version control \n    Basic \n    68.2% \n  \n  \n    Peer review \n    Basic \n    68.2% \n  \n  \n    Proportionate QA \n    Basic \n    63.6% \n  \n  \n    Documentation \n    Basic \n    36.4% \n  \n  \n    Team open source code \n    Basic \n    4.5% \n  \n  \n    Functions \n    Advanced \n    81.8% \n  \n  \n    Dependency management \n    Advanced \n    63.6% \n  \n  \n    Follow code style guidelines \n    Advanced \n    45.5% \n  \n  \n    Function documentation \n    Advanced \n    40.9% \n  \n  \n    Continuous integration \n    Advanced \n    36.4% \n  \n  \n    Unit testing \n    Advanced \n    27.3% \n  \n  \n    Code packages \n    Advanced \n    13.6% \n  \n\n\n\n Sample size = 22"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    12.5% \n  \n  \n    Rarely \n    17.5% \n  \n  \n    Sometimes \n    17.5% \n  \n  \n    Regularly \n    25% \n  \n  \n    All the time \n    27.5% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    72.5% \n    2.5% \n    25% \n  \n  \n    R \n    95% \n    0% \n    5% \n  \n  \n    SQL \n    42.5% \n    12.5% \n    45% \n  \n  \n    Matlab \n    5% \n    17.5% \n    77.5% \n  \n  \n    SAS \n    0% \n    20% \n    80% \n  \n  \n    SPSS \n    17.5% \n    20% \n    62.5% \n  \n  \n    Stata \n    12.5% \n    12.5% \n    75% \n  \n  \n    VBA \n    20% \n    15% \n    65% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    42.5% \n    20% \n    37.5% \n  \n  \n    R \n    80% \n    12.5% \n    7.5% \n  \n  \n    SQL \n    27.5% \n    22.5% \n    50% \n  \n  \n    Matlab \n    10% \n    17.5% \n    72.5% \n  \n  \n    SAS \n    0% \n    22.5% \n    77.5% \n  \n  \n    SPSS \n    10% \n    15% \n    75% \n  \n  \n    Stata \n    7.5% \n    15% \n    77.5% \n  \n  \n    VBA \n    2.5% \n    27.5% \n    70% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    77.5% \n  \n  \n    No \n    2.5% \n  \n  \n    I don't know \n    20% \n  \n\n\n\n Sample size = 40\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    67.5% \n  \n  \n    No \n    32.5% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 40"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-capability-and-change",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-capability-and-change",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    17.1% \n  \n  \n    Education \n    54.3% \n  \n  \n    Previous private sector employment \n    8.6% \n  \n  \n    Previous public sector employment \n    11.4% \n  \n  \n    Self-taught \n    8.6% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    10.3% \n  \n  \n    Slightly worse \n    10.3% \n  \n  \n    Stayed the same \n    13.8% \n  \n  \n    Slightly better \n    27.6% \n  \n  \n    Significantly better \n    37.9% \n  \n\n\n\n Sample size = 29"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    8.6% \n    25.7% \n    17.1% \n    22.9% \n    17.1% \n    8.6% \n  \n  \n    Code review \n    0% \n    17.1% \n    5.7% \n    28.6% \n    28.6% \n    20% \n  \n  \n    Coding guidelines / Style guides \n    2.9% \n    14.3% \n    11.4% \n    17.1% \n    37.1% \n    17.1% \n  \n  \n    Functions \n    5.7% \n    8.6% \n    17.1% \n    8.6% \n    37.1% \n    22.9% \n  \n  \n    Open source own code \n    22.9% \n    34.3% \n    5.7% \n    22.9% \n    11.4% \n    2.9% \n  \n  \n    Packaging code \n    14.3% \n    51.4% \n    8.6% \n    5.7% \n    14.3% \n    5.7% \n  \n  \n    Proportionate quality assurance \n    8.6% \n    8.6% \n    5.7% \n    11.4% \n    37.1% \n    28.6% \n  \n  \n    Quality assurance throughout development \n    11.4% \n    8.6% \n    5.7% \n    20% \n    31.4% \n    22.9% \n  \n  \n    Standard directory structure \n    34.3% \n    8.6% \n    8.6% \n    11.4% \n    20% \n    17.1% \n  \n  \n    Unit testing \n    25.7% \n    20% \n    17.1% \n    17.1% \n    14.3% \n    5.7% \n  \n  \n    Use open source software \n    0% \n    0% \n    17.1% \n    2.9% \n    25.7% \n    54.3% \n  \n  \n    Version control \n    2.9% \n    17.1% \n    14.3% \n    20% \n    25.7% \n    20% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    22.9% \n    25.7% \n    11.4% \n    14.3% \n    20% \n    5.7% \n  \n  \n    Code comments \n    2.9% \n    2.9% \n    11.4% \n    0% \n    31.4% \n    51.4% \n  \n  \n    Data or assumptions registers \n    14.3% \n    31.4% \n    17.1% \n    2.9% \n    20% \n    14.3% \n  \n  \n    Desk notes \n    17.1% \n    11.4% \n    20% \n    17.1% \n    22.9% \n    11.4% \n  \n  \n    Documentation for each function or class \n    14.3% \n    20% \n    11.4% \n    22.9% \n    28.6% \n    2.9% \n  \n  \n    Flow charts \n    2.9% \n    34.3% \n    28.6% \n    17.1% \n    11.4% \n    5.7% \n  \n  \n    README files \n    2.9% \n    22.9% \n    14.3% \n    22.9% \n    28.6% \n    8.6% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    25.7% \n  \n  \n    No \n    40% \n  \n  \n    I don't know what dependency management is \n    34.3% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    14.3% \n  \n  \n    No \n    40% \n  \n  \n    I don't know what continuous integration is \n    45.7% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    62.9% \n  \n  \n    I don't know what reproducible workflows are \n    37.1% \n  \n\n\n\n Sample size = 35"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    77.1% \n  \n  \n    No \n    22.9% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    7.4% \n  \n  \n    Yes, and I know who the RAP Champion is \n    40.7% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    7.4% \n  \n  \n    No \n    7.4% \n  \n  \n    I don't know \n    37% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    33.3% \n  \n  \n    Yes, but I haven't read it \n    33.3% \n  \n  \n    No \n    33.3% \n  \n\n\n\n Sample size = 27\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    3.7% \n    11.1% \n    7.4% \n    59.3% \n    18.5% \n  \n  \n    I feel confident implementing RAP in my work \n    3.7% \n    0% \n    25.9% \n    55.6% \n    14.8% \n  \n  \n    I feel supported to implement RAP in my work \n    0% \n    18.5% \n    18.5% \n    48.1% \n    14.8% \n  \n  \n    I know where to find resources to help me implement RAP \n    3.7% \n    14.8% \n    25.9% \n    48.1% \n    7.4% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    0% \n    3.7% \n    22.2% \n    37% \n    37% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    3.7% \n    14.8% \n    44.4% \n    37% \n  \n  \n    I understand what the key components of the RAP methodology are \n    3.7% \n    0% \n    22.2% \n    59.3% \n    14.8% \n  \n\n\n\n Sample size = 27"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-environment-food-and-rural-affairs-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    80% \n  \n  \n    Proportionate QA \n    Basic \n    65.7% \n  \n  \n    Peer review \n    Basic \n    48.6% \n  \n  \n    Version control \n    Basic \n    45.7% \n  \n  \n    Documentation \n    Basic \n    34.3% \n  \n  \n    Team open source code \n    Basic \n    14.3% \n  \n  \n    Functions \n    Advanced \n    60% \n  \n  \n    Follow code style guidelines \n    Advanced \n    54.3% \n  \n  \n    Function documentation \n    Advanced \n    31.4% \n  \n  \n    Dependency management \n    Advanced \n    25.7% \n  \n  \n    Unit testing \n    Advanced \n    20% \n  \n  \n    Code packages \n    Advanced \n    20% \n  \n  \n    Continuous integration \n    Advanced \n    14.3% \n  \n\n\n\n Sample size = 35"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#how-to-use-this-research",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    11.5% \n  \n  \n    Rarely \n    13.1% \n  \n  \n    Sometimes \n    23% \n  \n  \n    Regularly \n    24.6% \n  \n  \n    All the time \n    27.9% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    67.2% \n    8.2% \n    24.6% \n  \n  \n    R \n    96.7% \n    0% \n    3.3% \n  \n  \n    SQL \n    42.6% \n    9.8% \n    47.5% \n  \n  \n    Matlab \n    4.9% \n    26.2% \n    68.9% \n  \n  \n    SAS \n    6.6% \n    24.6% \n    68.9% \n  \n  \n    SPSS \n    16.4% \n    26.2% \n    57.4% \n  \n  \n    Stata \n    8.2% \n    23% \n    68.9% \n  \n  \n    VBA \n    21.3% \n    16.4% \n    62.3% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    41% \n    27.9% \n    31.1% \n  \n  \n    R \n    78.7% \n    13.1% \n    8.2% \n  \n  \n    SQL \n    29.5% \n    26.2% \n    44.3% \n  \n  \n    Matlab \n    9.8% \n    21.3% \n    68.9% \n  \n  \n    SAS \n    1.6% \n    27.9% \n    70.5% \n  \n  \n    SPSS \n    9.8% \n    19.7% \n    70.5% \n  \n  \n    Stata \n    4.9% \n    21.3% \n    73.8% \n  \n  \n    VBA \n    8.2% \n    26.2% \n    65.6% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    67.2% \n  \n  \n    No \n    8.2% \n  \n  \n    I don't know \n    24.6% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    62.3% \n  \n  \n    No \n    37.7% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 61"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-capability-and-change",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-capability-and-change",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    13% \n  \n  \n    Education \n    63% \n  \n  \n    Previous private sector employment \n    7.4% \n  \n  \n    Previous public sector employment \n    7.4% \n  \n  \n    Self-taught \n    9.3% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    8.5% \n  \n  \n    Slightly worse \n    8.5% \n  \n  \n    Stayed the same \n    23.4% \n  \n  \n    Slightly better \n    31.9% \n  \n  \n    Significantly better \n    27.7% \n  \n\n\n\n Sample size = 47"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-practices",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#coding-practices",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    11.1% \n    25.9% \n    14.8% \n    20.4% \n    20.4% \n    7.4% \n  \n  \n    Code review \n    0% \n    22.2% \n    9.3% \n    31.5% \n    22.2% \n    14.8% \n  \n  \n    Coding guidelines / Style guides \n    3.7% \n    14.8% \n    14.8% \n    14.8% \n    33.3% \n    18.5% \n  \n  \n    Functions \n    3.7% \n    9.3% \n    13% \n    13% \n    35.2% \n    25.9% \n  \n  \n    Open source own code \n    18.5% \n    37% \n    3.7% \n    22.2% \n    13% \n    5.6% \n  \n  \n    Packaging code \n    11.1% \n    51.9% \n    9.3% \n    9.3% \n    14.8% \n    3.7% \n  \n  \n    Proportionate quality assurance \n    13% \n    13% \n    3.7% \n    11.1% \n    29.6% \n    29.6% \n  \n  \n    Quality assurance throughout development \n    13% \n    13% \n    3.7% \n    16.7% \n    33.3% \n    20.4% \n  \n  \n    Standard directory structure \n    27.8% \n    11.1% \n    5.6% \n    14.8% \n    24.1% \n    16.7% \n  \n  \n    Unit testing \n    22.2% \n    20.4% \n    18.5% \n    16.7% \n    14.8% \n    7.4% \n  \n  \n    Use open source software \n    0% \n    0% \n    13% \n    7.4% \n    25.9% \n    53.7% \n  \n  \n    Version control \n    1.9% \n    29.6% \n    9.3% \n    22.2% \n    20.4% \n    16.7% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    22.2% \n    29.6% \n    11.1% \n    13% \n    18.5% \n    5.6% \n  \n  \n    Code comments \n    1.9% \n    5.6% \n    7.4% \n    5.6% \n    29.6% \n    50% \n  \n  \n    Data or assumptions registers \n    18.5% \n    38.9% \n    14.8% \n    3.7% \n    13% \n    11.1% \n  \n  \n    Desk notes \n    16.7% \n    18.5% \n    16.7% \n    16.7% \n    18.5% \n    13% \n  \n  \n    Documentation for each function or class \n    11.1% \n    22.2% \n    11.1% \n    25.9% \n    24.1% \n    5.6% \n  \n  \n    Flow charts \n    1.9% \n    37% \n    22.2% \n    20.4% \n    11.1% \n    7.4% \n  \n  \n    README files \n    3.7% \n    25.9% \n    13% \n    18.5% \n    27.8% \n    11.1% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    24.1% \n  \n  \n    No \n    44.4% \n  \n  \n    I don't know what dependency management is \n    31.5% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    13% \n  \n  \n    No \n    48.1% \n  \n  \n    I don't know what continuous integration is \n    38.9% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    5.6% \n  \n  \n    No \n    61.1% \n  \n  \n    I don't know what reproducible workflows are \n    33.3% \n  \n\n\n\n Sample size = 54"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    70.4% \n  \n  \n    No \n    29.6% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    7.9% \n  \n  \n    Yes, and I know who the RAP Champion is \n    34.2% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    7.9% \n  \n  \n    No \n    10.5% \n  \n  \n    I don't know \n    39.5% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    31.6% \n  \n  \n    Yes, but I haven't read it \n    31.6% \n  \n  \n    No \n    36.8% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    10.5% \n    7.9% \n    7.9% \n    55.3% \n    18.4% \n  \n  \n    I feel confident implementing RAP in my work \n    7.9% \n    2.6% \n    21.1% \n    55.3% \n    13.2% \n  \n  \n    I feel supported to implement RAP in my work \n    10.5% \n    15.8% \n    21.1% \n    42.1% \n    10.5% \n  \n  \n    I know where to find resources to help me implement RAP \n    7.9% \n    18.4% \n    23.7% \n    39.5% \n    10.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.3% \n    2.6% \n    18.4% \n    36.8% \n    36.8% \n  \n  \n    I think it is important to implement RAP in my work \n    2.6% \n    2.6% \n    15.8% \n    39.5% \n    39.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    7.9% \n    0% \n    21.1% \n    52.6% \n    18.4% \n  \n\n\n\n Sample size = 38"
  },
  {
    "objectID": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-scores",
    "href": "departments/department-for-environment-food-and-rural-affairs-including-agencies-.html#rap-scores",
    "title": "Department summary: Department for Environment, Food and Rural Affairs (including agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    79.6% \n  \n  \n    Proportionate QA \n    Basic \n    59.3% \n  \n  \n    Version control \n    Basic \n    37% \n  \n  \n    Peer review \n    Basic \n    37% \n  \n  \n    Documentation \n    Basic \n    37% \n  \n  \n    Team open source code \n    Basic \n    18.5% \n  \n  \n    Functions \n    Advanced \n    61.1% \n  \n  \n    Follow code style guidelines \n    Advanced \n    51.9% \n  \n  \n    Function documentation \n    Advanced \n    29.6% \n  \n  \n    Dependency management \n    Advanced \n    24.1% \n  \n  \n    Unit testing \n    Advanced \n    22.2% \n  \n  \n    Code packages \n    Advanced \n    18.5% \n  \n  \n    Continuous integration \n    Advanced \n    13% \n  \n\n\n\n Sample size = 54"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department for Levelling Up, Housing & Communities (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Levelling Up, Housing & Communities (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    22.9% \n  \n  \n    Rarely \n    14.6% \n  \n  \n    Sometimes \n    16.7% \n  \n  \n    Regularly \n    31.2% \n  \n  \n    All the time \n    14.6% \n  \n\n\n\n Sample size = 48\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    77.1% \n    2.1% \n    20.8% \n  \n  \n    R \n    95.8% \n    0% \n    4.2% \n  \n  \n    SQL \n    68.8% \n    2.1% \n    29.2% \n  \n  \n    Matlab \n    6.2% \n    27.1% \n    66.7% \n  \n  \n    SAS \n    20.8% \n    12.5% \n    66.7% \n  \n  \n    SPSS \n    56.2% \n    2.1% \n    41.7% \n  \n  \n    Stata \n    35.4% \n    6.2% \n    58.3% \n  \n  \n    VBA \n    47.9% \n    6.2% \n    45.8% \n  \n\n\n\n Sample size = 48\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    31.2% \n    35.4% \n    33.3% \n  \n  \n    R \n    64.6% \n    20.8% \n    14.6% \n  \n  \n    SQL \n    50% \n    16.7% \n    33.3% \n  \n  \n    Matlab \n    6.2% \n    22.9% \n    70.8% \n  \n  \n    SAS \n    10.4% \n    22.9% \n    66.7% \n  \n  \n    SPSS \n    33.3% \n    22.9% \n    43.8% \n  \n  \n    Stata \n    18.8% \n    25% \n    56.2% \n  \n  \n    VBA \n    20.8% \n    29.2% \n    50% \n  \n\n\n\n Sample size = 48\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    64.6% \n  \n  \n    No \n    2.1% \n  \n  \n    I don't know \n    33.3% \n  \n\n\n\n Sample size = 48\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    47.9% \n  \n  \n    No \n    39.6% \n  \n  \n    I don't know \n    12.5% \n  \n\n\n\n Sample size = 48"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#coding-capability-and-change",
    "href": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#coding-capability-and-change",
    "title": "Department summary: Department for Levelling Up, Housing & Communities (excl. agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    21.6% \n  \n  \n    Education \n    67.6% \n  \n  \n    Previous private sector employment \n    0% \n  \n  \n    Previous public sector employment \n    10.8% \n  \n  \n    Self-taught \n    0% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    10.3% \n  \n  \n    Slightly worse \n    6.9% \n  \n  \n    Stayed the same \n    10.3% \n  \n  \n    Slightly better \n    37.9% \n  \n  \n    Significantly better \n    34.5% \n  \n\n\n\n Sample size = 29"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Levelling Up, Housing & Communities (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    0% \n    24.3% \n    18.9% \n    24.3% \n    24.3% \n    8.1% \n  \n  \n    Code review \n    0% \n    2.7% \n    8.1% \n    24.3% \n    32.4% \n    32.4% \n  \n  \n    Coding guidelines / Style guides \n    5.4% \n    21.6% \n    8.1% \n    21.6% \n    32.4% \n    10.8% \n  \n  \n    Functions \n    5.4% \n    10.8% \n    13.5% \n    16.2% \n    29.7% \n    24.3% \n  \n  \n    Open source own code \n    21.6% \n    35.1% \n    10.8% \n    16.2% \n    8.1% \n    8.1% \n  \n  \n    Packaging code \n    10.8% \n    56.8% \n    5.4% \n    13.5% \n    2.7% \n    10.8% \n  \n  \n    Proportionate quality assurance \n    5.4% \n    2.7% \n    2.7% \n    10.8% \n    59.5% \n    18.9% \n  \n  \n    Quality assurance throughout development \n    5.4% \n    10.8% \n    2.7% \n    24.3% \n    43.2% \n    13.5% \n  \n  \n    Standard directory structure \n    18.9% \n    35.1% \n    5.4% \n    16.2% \n    13.5% \n    10.8% \n  \n  \n    Unit testing \n    37.8% \n    10.8% \n    13.5% \n    13.5% \n    5.4% \n    18.9% \n  \n  \n    Use open source software \n    2.7% \n    5.4% \n    2.7% \n    16.2% \n    24.3% \n    48.6% \n  \n  \n    Version control \n    10.8% \n    35.1% \n    5.4% \n    10.8% \n    13.5% \n    24.3% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    13.5% \n    27% \n    27% \n    16.2% \n    16.2% \n    0% \n  \n  \n    Code comments \n    5.4% \n    5.4% \n    2.7% \n    13.5% \n    27% \n    45.9% \n  \n  \n    Data or assumptions registers \n    13.5% \n    21.6% \n    16.2% \n    18.9% \n    21.6% \n    8.1% \n  \n  \n    Desk notes \n    16.2% \n    16.2% \n    5.4% \n    27% \n    16.2% \n    18.9% \n  \n  \n    Documentation for each function or class \n    13.5% \n    27% \n    21.6% \n    13.5% \n    18.9% \n    5.4% \n  \n  \n    Flow charts \n    5.4% \n    27% \n    16.2% \n    40.5% \n    10.8% \n    0% \n  \n  \n    README files \n    13.5% \n    21.6% \n    16.2% \n    16.2% \n    21.6% \n    10.8% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    32.4% \n  \n  \n    No \n    21.6% \n  \n  \n    I don't know what dependency management is \n    45.9% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    21.6% \n  \n  \n    No \n    29.7% \n  \n  \n    I don't know what continuous integration is \n    48.6% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    2.7% \n  \n  \n    No \n    45.9% \n  \n  \n    I don't know what reproducible workflows are \n    51.4% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Department for Levelling Up, Housing & Communities (excl. agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    94.6% \n  \n  \n    No \n    5.4% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    2.9% \n  \n  \n    Yes, and I know who the RAP Champion is \n    51.4% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    20% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    25.7% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    42.9% \n  \n  \n    Yes, but I haven't read it \n    40% \n  \n  \n    No \n    17.1% \n  \n\n\n\n Sample size = 35\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    17.1% \n    22.9% \n    17.1% \n    22.9% \n    20% \n  \n  \n    I feel confident implementing RAP in my work \n    17.1% \n    14.3% \n    8.6% \n    40% \n    20% \n  \n  \n    I feel supported to implement RAP in my work \n    11.4% \n    2.9% \n    17.1% \n    54.3% \n    14.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    8.6% \n    8.6% \n    20% \n    48.6% \n    14.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    8.6% \n    14.3% \n    20% \n    42.9% \n    14.3% \n  \n  \n    I think it is important to implement RAP in my work \n    5.7% \n    5.7% \n    14.3% \n    40% \n    34.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.6% \n    17.1% \n    17.1% \n    42.9% \n    14.3% \n  \n\n\n\n Sample size = 35"
  },
  {
    "objectID": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-levelling-up-housing--communities-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Levelling Up, Housing & Communities (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Proportionate QA \n    Basic \n    78.4% \n  \n  \n    Use open source software \n    Basic \n    73% \n  \n  \n    Peer review \n    Basic \n    64.9% \n  \n  \n    Version control \n    Basic \n    37.8% \n  \n  \n    Documentation \n    Basic \n    29.7% \n  \n  \n    Team open source code \n    Basic \n    16.2% \n  \n  \n    Functions \n    Advanced \n    54.1% \n  \n  \n    Follow code style guidelines \n    Advanced \n    43.2% \n  \n  \n    Dependency management \n    Advanced \n    32.4% \n  \n  \n    Unit testing \n    Advanced \n    24.3% \n  \n  \n    Function documentation \n    Advanced \n    24.3% \n  \n  \n    Continuous integration \n    Advanced \n    21.6% \n  \n  \n    Code packages \n    Advanced \n    13.5% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/department-for-transport-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/department-for-transport-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    13.2% \n  \n  \n    Rarely \n    13.2% \n  \n  \n    Sometimes \n    18.4% \n  \n  \n    Regularly \n    31.6% \n  \n  \n    All the time \n    23.7% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    84.2% \n    2.6% \n    13.2% \n  \n  \n    R \n    97.4% \n    2.6% \n    0% \n  \n  \n    SQL \n    78.9% \n    2.6% \n    18.4% \n  \n  \n    Matlab \n    5.3% \n    36.8% \n    57.9% \n  \n  \n    SAS \n    0% \n    31.6% \n    68.4% \n  \n  \n    SPSS \n    21.1% \n    23.7% \n    55.3% \n  \n  \n    Stata \n    13.2% \n    23.7% \n    63.2% \n  \n  \n    VBA \n    55.3% \n    7.9% \n    36.8% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    23.7% \n    47.4% \n    28.9% \n  \n  \n    R \n    78.9% \n    18.4% \n    2.6% \n  \n  \n    SQL \n    55.3% \n    36.8% \n    7.9% \n  \n  \n    Matlab \n    5.3% \n    28.9% \n    65.8% \n  \n  \n    SAS \n    5.3% \n    28.9% \n    65.8% \n  \n  \n    SPSS \n    21.1% \n    13.2% \n    65.8% \n  \n  \n    Stata \n    10.5% \n    23.7% \n    65.8% \n  \n  \n    VBA \n    15.8% \n    36.8% \n    47.4% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    92.1% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    7.9% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    73.7% \n  \n  \n    No \n    23.7% \n  \n  \n    I don't know \n    2.6% \n  \n\n\n\n Sample size = 38"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#coding-capability-and-change",
    "href": "departments/department-for-transport-excl-agencies-.html#coding-capability-and-change",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    18.2% \n  \n  \n    Education \n    51.5% \n  \n  \n    Previous private sector employment \n    0% \n  \n  \n    Previous public sector employment \n    18.2% \n  \n  \n    Self-taught \n    6.1% \n  \n  \n    Other \n    6.1% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    11.1% \n  \n  \n    Stayed the same \n    0% \n  \n  \n    Slightly better \n    33.3% \n  \n  \n    Significantly better \n    55.6% \n  \n\n\n\n Sample size = 27"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#coding-practices",
    "href": "departments/department-for-transport-excl-agencies-.html#coding-practices",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    9.1% \n    9.1% \n    27.3% \n    27.3% \n    15.2% \n    12.1% \n  \n  \n    Code review \n    3% \n    0% \n    12.1% \n    30.3% \n    39.4% \n    15.2% \n  \n  \n    Coding guidelines / Style guides \n    9.1% \n    3% \n    6.1% \n    15.2% \n    57.6% \n    9.1% \n  \n  \n    Functions \n    12.1% \n    9.1% \n    15.2% \n    12.1% \n    27.3% \n    24.2% \n  \n  \n    Open source own code \n    21.2% \n    42.4% \n    12.1% \n    6.1% \n    18.2% \n    0% \n  \n  \n    Packaging code \n    18.2% \n    42.4% \n    18.2% \n    15.2% \n    0% \n    6.1% \n  \n  \n    Proportionate quality assurance \n    15.2% \n    3% \n    0% \n    6.1% \n    39.4% \n    36.4% \n  \n  \n    Quality assurance throughout development \n    6.1% \n    6.1% \n    9.1% \n    18.2% \n    42.4% \n    18.2% \n  \n  \n    Standard directory structure \n    33.3% \n    6.1% \n    12.1% \n    9.1% \n    30.3% \n    9.1% \n  \n  \n    Unit testing \n    27.3% \n    21.2% \n    15.2% \n    24.2% \n    6.1% \n    6.1% \n  \n  \n    Use open source software \n    3% \n    6.1% \n    3% \n    9.1% \n    30.3% \n    48.5% \n  \n  \n    Version control \n    6.1% \n    6.1% \n    21.2% \n    6.1% \n    36.4% \n    24.2% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    30.3% \n    27.3% \n    15.2% \n    18.2% \n    6.1% \n    3% \n  \n  \n    Code comments \n    6.1% \n    0% \n    0% \n    9.1% \n    21.2% \n    63.6% \n  \n  \n    Data or assumptions registers \n    12.1% \n    36.4% \n    24.2% \n    15.2% \n    9.1% \n    3% \n  \n  \n    Desk notes \n    15.2% \n    12.1% \n    15.2% \n    30.3% \n    24.2% \n    3% \n  \n  \n    Documentation for each function or class \n    18.2% \n    6.1% \n    36.4% \n    18.2% \n    9.1% \n    12.1% \n  \n  \n    Flow charts \n    12.1% \n    33.3% \n    21.2% \n    18.2% \n    6.1% \n    9.1% \n  \n  \n    README files \n    9.1% \n    12.1% \n    15.2% \n    45.5% \n    9.1% \n    9.1% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    45.5% \n  \n  \n    No \n    24.2% \n  \n  \n    I don't know what dependency management is \n    30.3% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    21.2% \n  \n  \n    No \n    45.5% \n  \n  \n    I don't know what continuous integration is \n    33.3% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    63.6% \n  \n  \n    I don't know what reproducible workflows are \n    36.4% \n  \n\n\n\n Sample size = 33"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/department-for-transport-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    84.8% \n  \n  \n    No \n    15.2% \n  \n\n\n\n Sample size = 33\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    3.6% \n  \n  \n    Yes, and I know who the RAP Champion is \n    50% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    25% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    21.4% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    39.3% \n  \n  \n    Yes, but I haven't read it \n    39.3% \n  \n  \n    No \n    21.4% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    7.1% \n    35.7% \n    14.3% \n    25% \n    17.9% \n  \n  \n    I feel confident implementing RAP in my work \n    3.6% \n    14.3% \n    21.4% \n    42.9% \n    17.9% \n  \n  \n    I feel supported to implement RAP in my work \n    0% \n    0% \n    25% \n    32.1% \n    42.9% \n  \n  \n    I know where to find resources to help me implement RAP \n    0% \n    10.7% \n    14.3% \n    46.4% \n    28.6% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.1% \n    10.7% \n    25% \n    39.3% \n    17.9% \n  \n  \n    I think it is important to implement RAP in my work \n    3.6% \n    17.9% \n    10.7% \n    42.9% \n    25% \n  \n  \n    I understand what the key components of the RAP methodology are \n    0% \n    32.1% \n    14.3% \n    32.1% \n    21.4% \n  \n\n\n\n Sample size = 28"
  },
  {
    "objectID": "departments/department-for-transport-excl-agencies-.html#rap-scores",
    "href": "departments/department-for-transport-excl-agencies-.html#rap-scores",
    "title": "Department summary: Department for Transport (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    78.8% \n  \n  \n    Proportionate QA \n    Basic \n    75.8% \n  \n  \n    Version control \n    Basic \n    60.6% \n  \n  \n    Peer review \n    Basic \n    54.5% \n  \n  \n    Team open source code \n    Basic \n    18.2% \n  \n  \n    Documentation \n    Basic \n    18.2% \n  \n  \n    Follow code style guidelines \n    Advanced \n    66.7% \n  \n  \n    Functions \n    Advanced \n    51.5% \n  \n  \n    Dependency management \n    Advanced \n    45.5% \n  \n  \n    Function documentation \n    Advanced \n    21.2% \n  \n  \n    Continuous integration \n    Advanced \n    21.2% \n  \n  \n    Unit testing \n    Advanced \n    12.1% \n  \n  \n    Code packages \n    Advanced \n    6.1% \n  \n\n\n\n Sample size = 33"
  },
  {
    "objectID": "departments/hm-land-registry.html#how-to-use-this-research",
    "href": "departments/hm-land-registry.html#how-to-use-this-research",
    "title": "Department summary: HM Land Registry",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/hm-land-registry.html#coding-frequency-and-tools",
    "href": "departments/hm-land-registry.html#coding-frequency-and-tools",
    "title": "Department summary: HM Land Registry",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    16% \n  \n  \n    Rarely \n    4% \n  \n  \n    Sometimes \n    28% \n  \n  \n    Regularly \n    16% \n  \n  \n    All the time \n    36% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    88% \n    4% \n    8% \n  \n  \n    R \n    88% \n    8% \n    4% \n  \n  \n    SQL \n    80% \n    8% \n    12% \n  \n  \n    Matlab \n    0% \n    48% \n    52% \n  \n  \n    SAS \n    0% \n    48% \n    52% \n  \n  \n    SPSS \n    0% \n    60% \n    40% \n  \n  \n    Stata \n    0% \n    52% \n    48% \n  \n  \n    VBA \n    72% \n    8% \n    20% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    48% \n    28% \n    24% \n  \n  \n    R \n    40% \n    36% \n    24% \n  \n  \n    SQL \n    64% \n    12% \n    24% \n  \n  \n    Matlab \n    4% \n    32% \n    64% \n  \n  \n    SAS \n    8% \n    32% \n    60% \n  \n  \n    SPSS \n    12% \n    36% \n    52% \n  \n  \n    Stata \n    0% \n    36% \n    64% \n  \n  \n    VBA \n    56% \n    16% \n    28% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    72% \n  \n  \n    No \n    4% \n  \n  \n    I don't know \n    24% \n  \n\n\n\n Sample size = 25\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    52% \n  \n  \n    No \n    40% \n  \n  \n    I don't know \n    8% \n  \n\n\n\n Sample size = 25"
  },
  {
    "objectID": "departments/hm-land-registry.html#coding-capability-and-change",
    "href": "departments/hm-land-registry.html#coding-capability-and-change",
    "title": "Department summary: HM Land Registry",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    23.8% \n  \n  \n    Education \n    42.9% \n  \n  \n    Previous private sector employment \n    23.8% \n  \n  \n    Previous public sector employment \n    0% \n  \n  \n    Self-taught \n    9.5% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    18.8% \n  \n  \n    Stayed the same \n    12.5% \n  \n  \n    Slightly better \n    18.8% \n  \n  \n    Significantly better \n    50% \n  \n\n\n\n Sample size = 16"
  },
  {
    "objectID": "departments/hm-land-registry.html#coding-practices",
    "href": "departments/hm-land-registry.html#coding-practices",
    "title": "Department summary: HM Land Registry",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    4.8% \n    19% \n    9.5% \n    33.3% \n    23.8% \n    9.5% \n  \n  \n    Code review \n    0% \n    9.5% \n    4.8% \n    23.8% \n    47.6% \n    14.3% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    19% \n    4.8% \n    9.5% \n    57.1% \n    9.5% \n  \n  \n    Functions \n    0% \n    9.5% \n    4.8% \n    14.3% \n    33.3% \n    38.1% \n  \n  \n    Open source own code \n    4.8% \n    38.1% \n    23.8% \n    19% \n    14.3% \n    0% \n  \n  \n    Packaging code \n    0% \n    33.3% \n    14.3% \n    38.1% \n    4.8% \n    9.5% \n  \n  \n    Proportionate quality assurance \n    4.8% \n    9.5% \n    4.8% \n    9.5% \n    33.3% \n    38.1% \n  \n  \n    Quality assurance throughout development \n    0% \n    9.5% \n    0% \n    19% \n    38.1% \n    33.3% \n  \n  \n    Standard directory structure \n    28.6% \n    14.3% \n    4.8% \n    28.6% \n    9.5% \n    14.3% \n  \n  \n    Unit testing \n    23.8% \n    19% \n    9.5% \n    23.8% \n    14.3% \n    9.5% \n  \n  \n    Use open source software \n    0% \n    4.8% \n    4.8% \n    14.3% \n    28.6% \n    47.6% \n  \n  \n    Version control \n    4.8% \n    23.8% \n    19% \n    14.3% \n    9.5% \n    28.6% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    19% \n    38.1% \n    0% \n    28.6% \n    9.5% \n    4.8% \n  \n  \n    Code comments \n    0% \n    4.8% \n    0% \n    19% \n    28.6% \n    47.6% \n  \n  \n    Data or assumptions registers \n    9.5% \n    42.9% \n    4.8% \n    23.8% \n    14.3% \n    4.8% \n  \n  \n    Desk notes \n    19% \n    14.3% \n    9.5% \n    19% \n    33.3% \n    4.8% \n  \n  \n    Documentation for each function or class \n    0% \n    19% \n    33.3% \n    19% \n    14.3% \n    14.3% \n  \n  \n    Flow charts \n    0% \n    19% \n    19% \n    23.8% \n    23.8% \n    14.3% \n  \n  \n    README files \n    0% \n    38.1% \n    19% \n    19% \n    14.3% \n    9.5% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    33.3% \n  \n  \n    No \n    38.1% \n  \n  \n    I don't know what dependency management is \n    28.6% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    14.3% \n  \n  \n    No \n    52.4% \n  \n  \n    I don't know what continuous integration is \n    33.3% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    14.3% \n  \n  \n    No \n    52.4% \n  \n  \n    I don't know what reproducible workflows are \n    33.3% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "departments/hm-land-registry.html#reproducible-analytical-pipelines-rap",
    "href": "departments/hm-land-registry.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: HM Land Registry",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    66.7% \n  \n  \n    No \n    33.3% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    14.3% \n  \n  \n    Yes, and I know who the RAP Champion is \n    35.7% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    7.1% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    42.9% \n  \n\n\n\n Sample size = 14\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    7.1% \n  \n  \n    Yes, but I haven't read it \n    64.3% \n  \n  \n    No \n    28.6% \n  \n\n\n\n Sample size = 14\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    7.1% \n    21.4% \n    50% \n    7.1% \n    14.3% \n  \n  \n    I feel confident implementing RAP in my work \n    0% \n    14.3% \n    42.9% \n    28.6% \n    14.3% \n  \n  \n    I feel supported to implement RAP in my work \n    7.1% \n    14.3% \n    50% \n    28.6% \n    0% \n  \n  \n    I know where to find resources to help me implement RAP \n    7.1% \n    21.4% \n    35.7% \n    28.6% \n    7.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    0% \n    7.1% \n    42.9% \n    35.7% \n    14.3% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    0% \n    28.6% \n    42.9% \n    28.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    7.1% \n    14.3% \n    14.3% \n    42.9% \n    21.4% \n  \n\n\n\n Sample size = 14"
  },
  {
    "objectID": "departments/hm-land-registry.html#rap-scores",
    "href": "departments/hm-land-registry.html#rap-scores",
    "title": "Department summary: HM Land Registry",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    76.2% \n  \n  \n    Proportionate QA \n    Basic \n    71.4% \n  \n  \n    Peer review \n    Basic \n    61.9% \n  \n  \n    Version control \n    Basic \n    38.1% \n  \n  \n    Documentation \n    Basic \n    19% \n  \n  \n    Team open source code \n    Basic \n    14.3% \n  \n  \n    Functions \n    Advanced \n    71.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    66.7% \n  \n  \n    Dependency management \n    Advanced \n    33.3% \n  \n  \n    Function documentation \n    Advanced \n    28.6% \n  \n  \n    Unit testing \n    Advanced \n    23.8% \n  \n  \n    Code packages \n    Advanced \n    14.3% \n  \n  \n    Continuous integration \n    Advanced \n    14.3% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "departments/hm-revenue--customs-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/hm-revenue--customs-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: HM Revenue & Customs (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/hm-revenue--customs-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/hm-revenue--customs-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: HM Revenue & Customs (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8% \n  \n  \n    Rarely \n    6% \n  \n  \n    Sometimes \n    28% \n  \n  \n    Regularly \n    31% \n  \n  \n    All the time \n    27% \n  \n\n\n\n Sample size = 100\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    37% \n    47% \n    16% \n  \n  \n    R \n    95% \n    5% \n    0% \n  \n  \n    SQL \n    67% \n    11% \n    22% \n  \n  \n    Matlab \n    2% \n    64% \n    34% \n  \n  \n    SAS \n    91% \n    5% \n    4% \n  \n  \n    SPSS \n    30% \n    36% \n    34% \n  \n  \n    Stata \n    21% \n    43% \n    36% \n  \n  \n    VBA \n    59% \n    16% \n    25% \n  \n\n\n\n Sample size = 100\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    17% \n    31% \n    52% \n  \n  \n    R \n    76% \n    18% \n    6% \n  \n  \n    SQL \n    61% \n    19% \n    20% \n  \n  \n    Matlab \n    5% \n    28% \n    67% \n  \n  \n    SAS \n    68% \n    18% \n    14% \n  \n  \n    SPSS \n    13% \n    30% \n    57% \n  \n  \n    Stata \n    11% \n    27% \n    62% \n  \n  \n    VBA \n    19% \n    31% \n    50% \n  \n\n\n\n Sample size = 100\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    70% \n  \n  \n    No \n    13% \n  \n  \n    I don't know \n    17% \n  \n\n\n\n Sample size = 100\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    56% \n  \n  \n    No \n    40% \n  \n  \n    I don't know \n    4% \n  \n\n\n\n Sample size = 100"
  },
  {
    "objectID": "departments/hm-revenue--customs-excl-agencies-.html#coding-capability-and-change",
    "href": "departments/hm-revenue--customs-excl-agencies-.html#coding-capability-and-change",
    "title": "Department summary: HM Revenue & Customs (excl. agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    18.5% \n  \n  \n    Education \n    56.5% \n  \n  \n    Previous private sector employment \n    6.5% \n  \n  \n    Previous public sector employment \n    9.8% \n  \n  \n    Self-taught \n    7.6% \n  \n  \n    Other \n    1.1% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    5.3% \n  \n  \n    Slightly worse \n    8% \n  \n  \n    Stayed the same \n    13.3% \n  \n  \n    Slightly better \n    41.3% \n  \n  \n    Significantly better \n    32% \n  \n\n\n\n Sample size = 75"
  },
  {
    "objectID": "departments/hm-revenue--customs-excl-agencies-.html#coding-practices",
    "href": "departments/hm-revenue--customs-excl-agencies-.html#coding-practices",
    "title": "Department summary: HM Revenue & Customs (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    5.4% \n    10.9% \n    9.8% \n    31.5% \n    27.2% \n    15.2% \n  \n  \n    Code review \n    1.1% \n    4.3% \n    6.5% \n    22.8% \n    35.9% \n    29.3% \n  \n  \n    Coding guidelines / Style guides \n    4.3% \n    6.5% \n    1.1% \n    27.2% \n    37% \n    23.9% \n  \n  \n    Functions \n    4.3% \n    6.5% \n    5.4% \n    14.1% \n    34.8% \n    34.8% \n  \n  \n    Open source own code \n    20.7% \n    58.7% \n    8.7% \n    7.6% \n    1.1% \n    3.3% \n  \n  \n    Packaging code \n    15.2% \n    53.3% \n    15.2% \n    7.6% \n    5.4% \n    3.3% \n  \n  \n    Proportionate quality assurance \n    3.3% \n    3.3% \n    1.1% \n    15.2% \n    37% \n    40.2% \n  \n  \n    Quality assurance throughout development \n    2.2% \n    4.3% \n    7.6% \n    17.4% \n    37% \n    31.5% \n  \n  \n    Standard directory structure \n    25% \n    18.5% \n    6.5% \n    15.2% \n    21.7% \n    13% \n  \n  \n    Unit testing \n    31.5% \n    14.1% \n    14.1% \n    25% \n    7.6% \n    7.6% \n  \n  \n    Use open source software \n    2.2% \n    8.7% \n    13% \n    19.6% \n    22.8% \n    33.7% \n  \n  \n    Version control \n    3.3% \n    41.3% \n    6.5% \n    14.1% \n    17.4% \n    17.4% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    14.1% \n    23.9% \n    12% \n    23.9% \n    19.6% \n    6.5% \n  \n  \n    Code comments \n    0% \n    2.2% \n    0% \n    9.8% \n    20.7% \n    67.4% \n  \n  \n    Data or assumptions registers \n    20.7% \n    33.7% \n    9.8% \n    12% \n    17.4% \n    6.5% \n  \n  \n    Desk notes \n    32.6% \n    19.6% \n    6.5% \n    17.4% \n    17.4% \n    6.5% \n  \n  \n    Documentation for each function or class \n    10.9% \n    20.7% \n    9.8% \n    22.8% \n    20.7% \n    15.2% \n  \n  \n    Flow charts \n    6.5% \n    17.4% \n    14.1% \n    28.3% \n    23.9% \n    9.8% \n  \n  \n    README files \n    5.4% \n    28.3% \n    7.6% \n    28.3% \n    15.2% \n    15.2% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    14.1% \n  \n  \n    No \n    47.8% \n  \n  \n    I don't know what dependency management is \n    38% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    4.3% \n  \n  \n    No \n    48.9% \n  \n  \n    I don't know what continuous integration is \n    46.7% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    3.3% \n  \n  \n    No \n    65.2% \n  \n  \n    I don't know what reproducible workflows are \n    31.5% \n  \n\n\n\n Sample size = 92"
  },
  {
    "objectID": "departments/hm-revenue--customs-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/hm-revenue--customs-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: HM Revenue & Customs (excl. agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    89.1% \n  \n  \n    No \n    10.9% \n  \n\n\n\n Sample size = 92\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    2.4% \n  \n  \n    Yes, and I know who the RAP Champion is \n    52.4% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    17.1% \n  \n  \n    No \n    3.7% \n  \n  \n    I don't know \n    24.4% \n  \n\n\n\n Sample size = 82\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    26.8% \n  \n  \n    Yes, but I haven't read it \n    47.6% \n  \n  \n    No \n    25.6% \n  \n\n\n\n Sample size = 82\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    17.1% \n    20.7% \n    12.2% \n    24.4% \n    25.6% \n  \n  \n    I feel confident implementing RAP in my work \n    11% \n    15.9% \n    12.2% \n    39% \n    22% \n  \n  \n    I feel supported to implement RAP in my work \n    9.8% \n    11% \n    18.3% \n    31.7% \n    29.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    8.5% \n    13.4% \n    19.5% \n    35.4% \n    23.2% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    9.8% \n    12.2% \n    24.4% \n    26.8% \n    26.8% \n  \n  \n    I think it is important to implement RAP in my work \n    4.9% \n    4.9% \n    18.3% \n    35.4% \n    36.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    8.5% \n    18.3% \n    3.7% \n    45.1% \n    24.4% \n  \n\n\n\n Sample size = 82"
  },
  {
    "objectID": "departments/hm-revenue--customs-excl-agencies-.html#rap-scores",
    "href": "departments/hm-revenue--customs-excl-agencies-.html#rap-scores",
    "title": "Department summary: HM Revenue & Customs (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Proportionate QA \n    Basic \n    77.2% \n  \n  \n    Peer review \n    Basic \n    65.2% \n  \n  \n    Use open source software \n    Basic \n    56.5% \n  \n  \n    Version control \n    Basic \n    34.8% \n  \n  \n    Documentation \n    Basic \n    29.3% \n  \n  \n    Team open source code \n    Basic \n    4.3% \n  \n  \n    Functions \n    Advanced \n    69.6% \n  \n  \n    Follow code style guidelines \n    Advanced \n    60.9% \n  \n  \n    Function documentation \n    Advanced \n    35.9% \n  \n  \n    Unit testing \n    Advanced \n    15.2% \n  \n  \n    Dependency management \n    Advanced \n    14.1% \n  \n  \n    Code packages \n    Advanced \n    8.7% \n  \n  \n    Continuous integration \n    Advanced \n    4.3% \n  \n\n\n\n Sample size = 92"
  },
  {
    "objectID": "departments/home-office-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/home-office-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Home Office (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/home-office-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/home-office-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Home Office (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    18.2% \n  \n  \n    Rarely \n    4.5% \n  \n  \n    Sometimes \n    27.3% \n  \n  \n    Regularly \n    31.8% \n  \n  \n    All the time \n    18.2% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    77.3% \n    9.1% \n    13.6% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SQL \n    81.8% \n    4.5% \n    13.6% \n  \n  \n    Matlab \n    0% \n    36.4% \n    63.6% \n  \n  \n    SAS \n    31.8% \n    18.2% \n    50% \n  \n  \n    SPSS \n    63.6% \n    9.1% \n    27.3% \n  \n  \n    Stata \n    18.2% \n    13.6% \n    68.2% \n  \n  \n    VBA \n    63.6% \n    4.5% \n    31.8% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    22.7% \n    40.9% \n    36.4% \n  \n  \n    R \n    50% \n    45.5% \n    4.5% \n  \n  \n    SQL \n    50% \n    31.8% \n    18.2% \n  \n  \n    Matlab \n    4.5% \n    22.7% \n    72.7% \n  \n  \n    SAS \n    4.5% \n    31.8% \n    63.6% \n  \n  \n    SPSS \n    27.3% \n    27.3% \n    45.5% \n  \n  \n    Stata \n    0% \n    31.8% \n    68.2% \n  \n  \n    VBA \n    13.6% \n    36.4% \n    50% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    50% \n  \n  \n    No \n    22.7% \n  \n  \n    I don't know \n    27.3% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    36.4% \n  \n  \n    No \n    59.1% \n  \n  \n    I don't know \n    4.5% \n  \n\n\n\n Sample size = 22"
  },
  {
    "objectID": "departments/home-office-excl-agencies-.html#coding-capability-and-change",
    "href": "departments/home-office-excl-agencies-.html#coding-capability-and-change",
    "title": "Department summary: Home Office (excl. agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    33.3% \n  \n  \n    Education \n    27.8% \n  \n  \n    Previous private sector employment \n    11.1% \n  \n  \n    Previous public sector employment \n    11.1% \n  \n  \n    Self-taught \n    16.7% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    8.3% \n  \n  \n    Slightly worse \n    0% \n  \n  \n    Stayed the same \n    16.7% \n  \n  \n    Slightly better \n    41.7% \n  \n  \n    Significantly better \n    33.3% \n  \n\n\n\n Sample size = 12"
  },
  {
    "objectID": "departments/home-office-excl-agencies-.html#coding-practices",
    "href": "departments/home-office-excl-agencies-.html#coding-practices",
    "title": "Department summary: Home Office (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    5.6% \n    22.2% \n    16.7% \n    38.9% \n    16.7% \n    0% \n  \n  \n    Code review \n    0% \n    0% \n    16.7% \n    27.8% \n    38.9% \n    16.7% \n  \n  \n    Coding guidelines / Style guides \n    11.1% \n    16.7% \n    11.1% \n    22.2% \n    27.8% \n    11.1% \n  \n  \n    Functions \n    16.7% \n    11.1% \n    5.6% \n    5.6% \n    44.4% \n    16.7% \n  \n  \n    Open source own code \n    22.2% \n    72.2% \n    5.6% \n    0% \n    0% \n    0% \n  \n  \n    Packaging code \n    16.7% \n    66.7% \n    16.7% \n    0% \n    0% \n    0% \n  \n  \n    Proportionate quality assurance \n    5.6% \n    5.6% \n    5.6% \n    11.1% \n    44.4% \n    27.8% \n  \n  \n    Quality assurance throughout development \n    5.6% \n    11.1% \n    11.1% \n    5.6% \n    44.4% \n    22.2% \n  \n  \n    Standard directory structure \n    16.7% \n    33.3% \n    5.6% \n    11.1% \n    16.7% \n    16.7% \n  \n  \n    Unit testing \n    38.9% \n    22.2% \n    11.1% \n    22.2% \n    5.6% \n    0% \n  \n  \n    Use open source software \n    0% \n    0% \n    11.1% \n    16.7% \n    11.1% \n    61.1% \n  \n  \n    Version control \n    11.1% \n    44.4% \n    16.7% \n    11.1% \n    5.6% \n    11.1% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    22.2% \n    16.7% \n    11.1% \n    11.1% \n    27.8% \n    11.1% \n  \n  \n    Code comments \n    5.6% \n    5.6% \n    5.6% \n    11.1% \n    16.7% \n    55.6% \n  \n  \n    Data or assumptions registers \n    5.6% \n    22.2% \n    5.6% \n    22.2% \n    38.9% \n    5.6% \n  \n  \n    Desk notes \n    11.1% \n    22.2% \n    5.6% \n    27.8% \n    33.3% \n    0% \n  \n  \n    Documentation for each function or class \n    11.1% \n    27.8% \n    22.2% \n    16.7% \n    16.7% \n    5.6% \n  \n  \n    Flow charts \n    11.1% \n    22.2% \n    33.3% \n    11.1% \n    22.2% \n    0% \n  \n  \n    README files \n    11.1% \n    27.8% \n    5.6% \n    22.2% \n    11.1% \n    22.2% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    11.1% \n  \n  \n    No \n    33.3% \n  \n  \n    I don't know what dependency management is \n    55.6% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    5.6% \n  \n  \n    No \n    50% \n  \n  \n    I don't know what continuous integration is \n    44.4% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    55.6% \n  \n  \n    I don't know what reproducible workflows are \n    44.4% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "departments/home-office-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/home-office-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Home Office (excl. agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    100% \n  \n  \n    No \n    0% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    11.1% \n  \n  \n    Yes, and I know who the RAP Champion is \n    38.9% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    22.2% \n  \n  \n    No \n    5.6% \n  \n  \n    I don't know \n    22.2% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    38.9% \n  \n  \n    Yes, but I haven't read it \n    33.3% \n  \n  \n    No \n    27.8% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    5.6% \n    11.1% \n    22.2% \n    38.9% \n    22.2% \n  \n  \n    I feel confident implementing RAP in my work \n    11.1% \n    11.1% \n    16.7% \n    44.4% \n    16.7% \n  \n  \n    I feel supported to implement RAP in my work \n    11.1% \n    16.7% \n    11.1% \n    38.9% \n    22.2% \n  \n  \n    I know where to find resources to help me implement RAP \n    11.1% \n    11.1% \n    27.8% \n    33.3% \n    16.7% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.6% \n    5.6% \n    16.7% \n    55.6% \n    16.7% \n  \n  \n    I think it is important to implement RAP in my work \n    5.6% \n    0% \n    0% \n    50% \n    44.4% \n  \n  \n    I understand what the key components of the RAP methodology are \n    11.1% \n    11.1% \n    11.1% \n    38.9% \n    27.8% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "departments/home-office-excl-agencies-.html#rap-scores",
    "href": "departments/home-office-excl-agencies-.html#rap-scores",
    "title": "Department summary: Home Office (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    72.2% \n  \n  \n    Proportionate QA \n    Basic \n    72.2% \n  \n  \n    Peer review \n    Basic \n    55.6% \n  \n  \n    Documentation \n    Basic \n    33.3% \n  \n  \n    Version control \n    Basic \n    16.7% \n  \n  \n    Team open source code \n    Basic \n    0% \n  \n  \n    Functions \n    Advanced \n    61.1% \n  \n  \n    Follow code style guidelines \n    Advanced \n    38.9% \n  \n  \n    Function documentation \n    Advanced \n    22.2% \n  \n  \n    Dependency management \n    Advanced \n    11.1% \n  \n  \n    Unit testing \n    Advanced \n    5.6% \n  \n  \n    Continuous integration \n    Advanced \n    5.6% \n  \n  \n    Code packages \n    Advanced \n    0% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "departments/ministry-of-defence-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/ministry-of-defence-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Ministry of Defence (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/ministry-of-defence-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/ministry-of-defence-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Ministry of Defence (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    10.5% \n  \n  \n    Rarely \n    23.7% \n  \n  \n    Sometimes \n    21.1% \n  \n  \n    Regularly \n    21.1% \n  \n  \n    All the time \n    23.7% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    36.8% \n    42.1% \n    21.1% \n  \n  \n    R \n    81.6% \n    13.2% \n    5.3% \n  \n  \n    SQL \n    78.9% \n    15.8% \n    5.3% \n  \n  \n    Matlab \n    5.3% \n    55.3% \n    39.5% \n  \n  \n    SAS \n    15.8% \n    44.7% \n    39.5% \n  \n  \n    SPSS \n    26.3% \n    42.1% \n    31.6% \n  \n  \n    Stata \n    7.9% \n    52.6% \n    39.5% \n  \n  \n    VBA \n    65.8% \n    13.2% \n    21.1% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    31.6% \n    36.8% \n    31.6% \n  \n  \n    R \n    52.6% \n    34.2% \n    13.2% \n  \n  \n    SQL \n    71.1% \n    15.8% \n    13.2% \n  \n  \n    Matlab \n    13.2% \n    31.6% \n    55.3% \n  \n  \n    SAS \n    7.9% \n    34.2% \n    57.9% \n  \n  \n    SPSS \n    10.5% \n    34.2% \n    55.3% \n  \n  \n    Stata \n    2.6% \n    39.5% \n    57.9% \n  \n  \n    VBA \n    26.3% \n    47.4% \n    26.3% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    68.4% \n  \n  \n    No \n    18.4% \n  \n  \n    I don't know \n    13.2% \n  \n\n\n\n Sample size = 38\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    52.6% \n  \n  \n    No \n    44.7% \n  \n  \n    I don't know \n    2.6% \n  \n\n\n\n Sample size = 38"
  },
  {
    "objectID": "departments/ministry-of-defence-excl-agencies-.html#coding-capability-and-change",
    "href": "departments/ministry-of-defence-excl-agencies-.html#coding-capability-and-change",
    "title": "Department summary: Ministry of Defence (excl. agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    26.5% \n  \n  \n    Education \n    44.1% \n  \n  \n    Previous private sector employment \n    0% \n  \n  \n    Previous public sector employment \n    20.6% \n  \n  \n    Self-taught \n    5.9% \n  \n  \n    Other \n    2.9% \n  \n\n\n\n Sample size = 34\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    4% \n  \n  \n    Slightly worse \n    12% \n  \n  \n    Stayed the same \n    20% \n  \n  \n    Slightly better \n    32% \n  \n  \n    Significantly better \n    32% \n  \n\n\n\n Sample size = 25"
  },
  {
    "objectID": "departments/ministry-of-defence-excl-agencies-.html#coding-practices",
    "href": "departments/ministry-of-defence-excl-agencies-.html#coding-practices",
    "title": "Department summary: Ministry of Defence (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    2.9% \n    38.2% \n    14.7% \n    17.6% \n    14.7% \n    11.8% \n  \n  \n    Code review \n    0% \n    8.8% \n    26.5% \n    44.1% \n    17.6% \n    2.9% \n  \n  \n    Coding guidelines / Style guides \n    8.8% \n    17.6% \n    23.5% \n    23.5% \n    11.8% \n    14.7% \n  \n  \n    Functions \n    8.8% \n    14.7% \n    8.8% \n    26.5% \n    26.5% \n    14.7% \n  \n  \n    Open source own code \n    20.6% \n    55.9% \n    14.7% \n    5.9% \n    2.9% \n    0% \n  \n  \n    Packaging code \n    14.7% \n    55.9% \n    14.7% \n    11.8% \n    2.9% \n    0% \n  \n  \n    Proportionate quality assurance \n    14.7% \n    5.9% \n    8.8% \n    20.6% \n    32.4% \n    17.6% \n  \n  \n    Quality assurance throughout development \n    2.9% \n    14.7% \n    20.6% \n    20.6% \n    23.5% \n    17.6% \n  \n  \n    Standard directory structure \n    32.4% \n    20.6% \n    11.8% \n    14.7% \n    11.8% \n    8.8% \n  \n  \n    Unit testing \n    17.6% \n    26.5% \n    14.7% \n    23.5% \n    14.7% \n    2.9% \n  \n  \n    Use open source software \n    2.9% \n    11.8% \n    17.6% \n    14.7% \n    26.5% \n    26.5% \n  \n  \n    Version control \n    0% \n    35.3% \n    20.6% \n    11.8% \n    14.7% \n    17.6% \n  \n\n\n\n Sample size = 34\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    5.9% \n    52.9% \n    11.8% \n    14.7% \n    11.8% \n    2.9% \n  \n  \n    Code comments \n    0% \n    2.9% \n    2.9% \n    23.5% \n    38.2% \n    32.4% \n  \n  \n    Data or assumptions registers \n    17.6% \n    52.9% \n    17.6% \n    5.9% \n    2.9% \n    2.9% \n  \n  \n    Desk notes \n    5.9% \n    23.5% \n    14.7% \n    32.4% \n    17.6% \n    5.9% \n  \n  \n    Documentation for each function or class \n    8.8% \n    32.4% \n    26.5% \n    8.8% \n    11.8% \n    11.8% \n  \n  \n    Flow charts \n    0% \n    26.5% \n    20.6% \n    41.2% \n    5.9% \n    5.9% \n  \n  \n    README files \n    5.9% \n    35.3% \n    23.5% \n    14.7% \n    14.7% \n    5.9% \n  \n\n\n\n Sample size = 34\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    20.6% \n  \n  \n    No \n    41.2% \n  \n  \n    I don't know what dependency management is \n    38.2% \n  \n\n\n\n Sample size = 34\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    17.6% \n  \n  \n    No \n    32.4% \n  \n  \n    I don't know what continuous integration is \n    50% \n  \n\n\n\n Sample size = 34\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    52.9% \n  \n  \n    I don't know what reproducible workflows are \n    47.1% \n  \n\n\n\n Sample size = 34"
  },
  {
    "objectID": "departments/ministry-of-defence-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/ministry-of-defence-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Ministry of Defence (excl. agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    64.7% \n  \n  \n    No \n    35.3% \n  \n\n\n\n Sample size = 34\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    4.5% \n  \n  \n    Yes, and I know who the RAP Champion is \n    13.6% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    22.7% \n  \n  \n    No \n    9.1% \n  \n  \n    I don't know \n    50% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    13.6% \n  \n  \n    Yes, but I haven't read it \n    50% \n  \n  \n    No \n    36.4% \n  \n\n\n\n Sample size = 22\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    22.7% \n    22.7% \n    22.7% \n    18.2% \n    13.6% \n  \n  \n    I feel confident implementing RAP in my work \n    4.5% \n    31.8% \n    27.3% \n    31.8% \n    4.5% \n  \n  \n    I feel supported to implement RAP in my work \n    4.5% \n    22.7% \n    36.4% \n    27.3% \n    9.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    9.1% \n    22.7% \n    36.4% \n    22.7% \n    9.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    9.1% \n    13.6% \n    27.3% \n    27.3% \n    22.7% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    18.2% \n    13.6% \n    36.4% \n    31.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    4.5% \n    27.3% \n    36.4% \n    22.7% \n    9.1% \n  \n\n\n\n Sample size = 22"
  },
  {
    "objectID": "departments/ministry-of-defence-excl-agencies-.html#rap-scores",
    "href": "departments/ministry-of-defence-excl-agencies-.html#rap-scores",
    "title": "Department summary: Ministry of Defence (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    52.9% \n  \n  \n    Proportionate QA \n    Basic \n    50% \n  \n  \n    Version control \n    Basic \n    32.4% \n  \n  \n    Peer review \n    Basic \n    20.6% \n  \n  \n    Documentation \n    Basic \n    20.6% \n  \n  \n    Team open source code \n    Basic \n    2.9% \n  \n  \n    Functions \n    Advanced \n    41.2% \n  \n  \n    Follow code style guidelines \n    Advanced \n    26.5% \n  \n  \n    Function documentation \n    Advanced \n    23.5% \n  \n  \n    Dependency management \n    Advanced \n    20.6% \n  \n  \n    Unit testing \n    Advanced \n    17.6% \n  \n  \n    Continuous integration \n    Advanced \n    17.6% \n  \n  \n    Code packages \n    Advanced \n    2.9% \n  \n\n\n\n Sample size = 34"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/ministry-of-justice-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/ministry-of-justice-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    9.6% \n  \n  \n    Rarely \n    7.4% \n  \n  \n    Sometimes \n    17% \n  \n  \n    Regularly \n    31.9% \n  \n  \n    All the time \n    34% \n  \n\n\n\n Sample size = 94\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    88.3% \n    4.3% \n    7.4% \n  \n  \n    R \n    98.9% \n    1.1% \n    0% \n  \n  \n    SQL \n    85.1% \n    5.3% \n    9.6% \n  \n  \n    Matlab \n    2.1% \n    45.7% \n    52.1% \n  \n  \n    SAS \n    17% \n    41.5% \n    41.5% \n  \n  \n    SPSS \n    2.1% \n    45.7% \n    52.1% \n  \n  \n    Stata \n    3.2% \n    33% \n    63.8% \n  \n  \n    VBA \n    51.1% \n    10.6% \n    38.3% \n  \n\n\n\n Sample size = 94\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    39.4% \n    36.2% \n    24.5% \n  \n  \n    R \n    76.6% \n    13.8% \n    9.6% \n  \n  \n    SQL \n    62.8% \n    25.5% \n    11.7% \n  \n  \n    Matlab \n    7.4% \n    29.8% \n    62.8% \n  \n  \n    SAS \n    11.7% \n    26.6% \n    61.7% \n  \n  \n    SPSS \n    12.8% \n    24.5% \n    62.8% \n  \n  \n    Stata \n    6.4% \n    24.5% \n    69.1% \n  \n  \n    VBA \n    11.7% \n    33% \n    55.3% \n  \n\n\n\n Sample size = 94\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    95.7% \n  \n  \n    No \n    2.1% \n  \n  \n    I don't know \n    2.1% \n  \n\n\n\n Sample size = 94\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    81.9% \n  \n  \n    No \n    16% \n  \n  \n    I don't know \n    2.1% \n  \n\n\n\n Sample size = 94"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#coding-capability-and-change",
    "href": "departments/ministry-of-justice-excl-agencies-.html#coding-capability-and-change",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    21.2% \n  \n  \n    Education \n    54.1% \n  \n  \n    Previous private sector employment \n    2.4% \n  \n  \n    Previous public sector employment \n    10.6% \n  \n  \n    Self-taught \n    7.1% \n  \n  \n    Other \n    4.7% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    1.5% \n  \n  \n    Slightly worse \n    6% \n  \n  \n    Stayed the same \n    9% \n  \n  \n    Slightly better \n    35.8% \n  \n  \n    Significantly better \n    47.8% \n  \n\n\n\n Sample size = 67"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#coding-practices",
    "href": "departments/ministry-of-justice-excl-agencies-.html#coding-practices",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    4.7% \n    20% \n    12.9% \n    31.8% \n    15.3% \n    15.3% \n  \n  \n    Code review \n    0% \n    4.7% \n    5.9% \n    8.2% \n    34.1% \n    47.1% \n  \n  \n    Coding guidelines / Style guides \n    5.9% \n    10.6% \n    7.1% \n    21.2% \n    37.6% \n    17.6% \n  \n  \n    Functions \n    3.5% \n    8.2% \n    7.1% \n    17.6% \n    27.1% \n    36.5% \n  \n  \n    Open source own code \n    17.6% \n    37.6% \n    14.1% \n    12.9% \n    9.4% \n    8.2% \n  \n  \n    Packaging code \n    10.6% \n    42.4% \n    17.6% \n    14.1% \n    7.1% \n    8.2% \n  \n  \n    Proportionate quality assurance \n    9.4% \n    5.9% \n    3.5% \n    14.1% \n    25.9% \n    41.2% \n  \n  \n    Quality assurance throughout development \n    5.9% \n    7.1% \n    4.7% \n    14.1% \n    31.8% \n    36.5% \n  \n  \n    Standard directory structure \n    35.3% \n    16.5% \n    4.7% \n    9.4% \n    20% \n    14.1% \n  \n  \n    Unit testing \n    22.4% \n    10.6% \n    14.1% \n    22.4% \n    16.5% \n    14.1% \n  \n  \n    Use open source software \n    1.2% \n    3.5% \n    3.5% \n    8.2% \n    23.5% \n    60% \n  \n  \n    Version control \n    0% \n    10.6% \n    3.5% \n    8.2% \n    22.4% \n    55.3% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    8.2% \n    16.5% \n    11.8% \n    25.9% \n    22.4% \n    15.3% \n  \n  \n    Code comments \n    1.2% \n    5.9% \n    1.2% \n    4.7% \n    31.8% \n    55.3% \n  \n  \n    Data or assumptions registers \n    5.9% \n    20% \n    9.4% \n    14.1% \n    28.2% \n    22.4% \n  \n  \n    Desk notes \n    23.5% \n    23.5% \n    11.8% \n    15.3% \n    15.3% \n    10.6% \n  \n  \n    Documentation for each function or class \n    3.5% \n    17.6% \n    17.6% \n    23.5% \n    18.8% \n    18.8% \n  \n  \n    Flow charts \n    3.5% \n    18.8% \n    28.2% \n    35.3% \n    9.4% \n    4.7% \n  \n  \n    README files \n    1.2% \n    14.1% \n    10.6% \n    21.2% \n    30.6% \n    22.4% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    64.7% \n  \n  \n    No \n    15.3% \n  \n  \n    I don't know what dependency management is \n    20% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    37.6% \n  \n  \n    No \n    16.5% \n  \n  \n    I don't know what continuous integration is \n    45.9% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    10.6% \n  \n  \n    No \n    52.9% \n  \n  \n    I don't know what reproducible workflows are \n    36.5% \n  \n\n\n\n Sample size = 85"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/ministry-of-justice-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    89.4% \n  \n  \n    No \n    10.6% \n  \n\n\n\n Sample size = 85\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    2.6% \n  \n  \n    Yes, and I know who the RAP Champion is \n    23.7% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    6.6% \n  \n  \n    No \n    2.6% \n  \n  \n    I don't know \n    64.5% \n  \n\n\n\n Sample size = 76\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    17.1% \n  \n  \n    Yes, but I haven't read it \n    38.2% \n  \n  \n    No \n    44.7% \n  \n\n\n\n Sample size = 76\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    14.5% \n    25% \n    19.7% \n    23.7% \n    17.1% \n  \n  \n    I feel confident implementing RAP in my work \n    7.9% \n    23.7% \n    23.7% \n    30.3% \n    14.5% \n  \n  \n    I feel supported to implement RAP in my work \n    7.9% \n    11.8% \n    27.6% \n    40.8% \n    11.8% \n  \n  \n    I know where to find resources to help me implement RAP \n    9.2% \n    25% \n    23.7% \n    30.3% \n    11.8% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    10.5% \n    13.2% \n    22.4% \n    34.2% \n    19.7% \n  \n  \n    I think it is important to implement RAP in my work \n    2.6% \n    9.2% \n    19.7% \n    39.5% \n    28.9% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.3% \n    28.9% \n    19.7% \n    32.9% \n    13.2% \n  \n\n\n\n Sample size = 76"
  },
  {
    "objectID": "departments/ministry-of-justice-excl-agencies-.html#rap-scores",
    "href": "departments/ministry-of-justice-excl-agencies-.html#rap-scores",
    "title": "Department summary: Ministry of Justice (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    83.5% \n  \n  \n    Peer review \n    Basic \n    81.2% \n  \n  \n    Version control \n    Basic \n    77.6% \n  \n  \n    Proportionate QA \n    Basic \n    67.1% \n  \n  \n    Documentation \n    Basic \n    49.4% \n  \n  \n    Team open source code \n    Basic \n    17.6% \n  \n  \n    Dependency management \n    Advanced \n    64.7% \n  \n  \n    Functions \n    Advanced \n    63.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    55.3% \n  \n  \n    Function documentation \n    Advanced \n    37.6% \n  \n  \n    Continuous integration \n    Advanced \n    37.6% \n  \n  \n    Unit testing \n    Advanced \n    30.6% \n  \n  \n    Code packages \n    Advanced \n    15.3% \n  \n\n\n\n Sample size = 85"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#how-to-use-this-research",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#how-to-use-this-research",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#coding-frequency-and-tools",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#coding-frequency-and-tools",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    3.3% \n  \n  \n    Rarely \n    14.8% \n  \n  \n    Sometimes \n    27.9% \n  \n  \n    Regularly \n    29.5% \n  \n  \n    All the time \n    24.6% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    36.1% \n    49.2% \n    14.8% \n  \n  \n    R \n    85.2% \n    9.8% \n    4.9% \n  \n  \n    SQL \n    77% \n    19.7% \n    3.3% \n  \n  \n    Matlab \n    1.6% \n    75.4% \n    23% \n  \n  \n    SAS \n    31.1% \n    60.7% \n    8.2% \n  \n  \n    SPSS \n    70.5% \n    23% \n    6.6% \n  \n  \n    Stata \n    4.9% \n    72.1% \n    23% \n  \n  \n    VBA \n    29.5% \n    47.5% \n    23% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    3.3% \n    42.6% \n    54.1% \n  \n  \n    R \n    59% \n    32.8% \n    8.2% \n  \n  \n    SQL \n    47.5% \n    24.6% \n    27.9% \n  \n  \n    Matlab \n    1.6% \n    32.8% \n    65.6% \n  \n  \n    SAS \n    14.8% \n    36.1% \n    49.2% \n  \n  \n    SPSS \n    57.4% \n    11.5% \n    31.1% \n  \n  \n    Stata \n    1.6% \n    34.4% \n    63.9% \n  \n  \n    VBA \n    6.6% \n    39.3% \n    54.1% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    42.6% \n  \n  \n    No \n    19.7% \n  \n  \n    I don't know \n    37.7% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    31.1% \n  \n  \n    No \n    57.4% \n  \n  \n    I don't know \n    11.5% \n  \n\n\n\n Sample size = 61"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#coding-capability-and-change",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#coding-capability-and-change",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    39% \n  \n  \n    Education \n    42.4% \n  \n  \n    Previous private sector employment \n    5.1% \n  \n  \n    Previous public sector employment \n    10.2% \n  \n  \n    Self-taught \n    3.4% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 59\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    16.7% \n  \n  \n    Stayed the same \n    19.4% \n  \n  \n    Slightly better \n    38.9% \n  \n  \n    Significantly better \n    25% \n  \n\n\n\n Sample size = 36"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#coding-practices",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#coding-practices",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    8.5% \n    22% \n    10.2% \n    32.2% \n    18.6% \n    8.5% \n  \n  \n    Code review \n    0% \n    11.9% \n    15.3% \n    42.4% \n    18.6% \n    11.9% \n  \n  \n    Coding guidelines / Style guides \n    11.9% \n    23.7% \n    10.2% \n    20.3% \n    20.3% \n    13.6% \n  \n  \n    Functions \n    8.5% \n    13.6% \n    18.6% \n    30.5% \n    20.3% \n    8.5% \n  \n  \n    Open source own code \n    15.3% \n    66.1% \n    8.5% \n    3.4% \n    3.4% \n    3.4% \n  \n  \n    Packaging code \n    16.9% \n    47.5% \n    8.5% \n    10.2% \n    13.6% \n    3.4% \n  \n  \n    Proportionate quality assurance \n    16.9% \n    11.9% \n    3.4% \n    11.9% \n    33.9% \n    22% \n  \n  \n    Quality assurance throughout development \n    6.8% \n    15.3% \n    3.4% \n    16.9% \n    35.6% \n    22% \n  \n  \n    Standard directory structure \n    27.1% \n    23.7% \n    6.8% \n    18.6% \n    16.9% \n    6.8% \n  \n  \n    Unit testing \n    40.7% \n    16.9% \n    10.2% \n    8.5% \n    18.6% \n    5.1% \n  \n  \n    Use open source software \n    1.7% \n    15.3% \n    8.5% \n    20.3% \n    27.1% \n    27.1% \n  \n  \n    Version control \n    8.5% \n    57.6% \n    13.6% \n    10.2% \n    3.4% \n    6.8% \n  \n\n\n\n Sample size = 59\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    27.1% \n    47.5% \n    3.4% \n    13.6% \n    8.5% \n    0% \n  \n  \n    Code comments \n    0% \n    8.5% \n    0% \n    11.9% \n    35.6% \n    44.1% \n  \n  \n    Data or assumptions registers \n    28.8% \n    55.9% \n    3.4% \n    6.8% \n    3.4% \n    1.7% \n  \n  \n    Desk notes \n    18.6% \n    40.7% \n    5.1% \n    11.9% \n    16.9% \n    6.8% \n  \n  \n    Documentation for each function or class \n    11.9% \n    35.6% \n    8.5% \n    25.4% \n    11.9% \n    6.8% \n  \n  \n    Flow charts \n    5.1% \n    37.3% \n    18.6% \n    23.7% \n    13.6% \n    1.7% \n  \n  \n    README files \n    6.8% \n    49.2% \n    10.2% \n    20.3% \n    11.9% \n    1.7% \n  \n\n\n\n Sample size = 59\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    18.6% \n  \n  \n    No \n    33.9% \n  \n  \n    I don't know what dependency management is \n    47.5% \n  \n\n\n\n Sample size = 59\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    8.5% \n  \n  \n    No \n    37.3% \n  \n  \n    I don't know what continuous integration is \n    54.2% \n  \n\n\n\n Sample size = 59\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    49.2% \n  \n  \n    I don't know what reproducible workflows are \n    50.8% \n  \n\n\n\n Sample size = 59"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#reproducible-analytical-pipelines-rap",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    91.5% \n  \n  \n    No \n    8.5% \n  \n\n\n\n Sample size = 59\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    1.9% \n  \n  \n    Yes, and I know who the RAP Champion is \n    35.2% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    9.3% \n  \n  \n    No \n    11.1% \n  \n  \n    I don't know \n    42.6% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    25.9% \n  \n  \n    Yes, but I haven't read it \n    46.3% \n  \n  \n    No \n    27.8% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    20.4% \n    18.5% \n    9.3% \n    29.6% \n    22.2% \n  \n  \n    I feel confident implementing RAP in my work \n    13% \n    25.9% \n    16.7% \n    24.1% \n    20.4% \n  \n  \n    I feel supported to implement RAP in my work \n    9.3% \n    18.5% \n    20.4% \n    27.8% \n    24.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.6% \n    22.2% \n    16.7% \n    35.2% \n    20.4% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.4% \n    18.5% \n    16.7% \n    31.5% \n    25.9% \n  \n  \n    I think it is important to implement RAP in my work \n    7.4% \n    5.6% \n    14.8% \n    44.4% \n    27.8% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.6% \n    18.5% \n    18.5% \n    33.3% \n    24.1% \n  \n\n\n\n Sample size = 54"
  },
  {
    "objectID": "departments/northern-ireland-statistics-and-research-agency.html#rap-scores",
    "href": "departments/northern-ireland-statistics-and-research-agency.html#rap-scores",
    "title": "Department summary: Northern Ireland Statistics and Research Agency",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Proportionate QA \n    Basic \n    55.9% \n  \n  \n    Use open source software \n    Basic \n    54.2% \n  \n  \n    Peer review \n    Basic \n    30.5% \n  \n  \n    Documentation \n    Basic \n    13.6% \n  \n  \n    Version control \n    Basic \n    10.2% \n  \n  \n    Team open source code \n    Basic \n    6.8% \n  \n  \n    Follow code style guidelines \n    Advanced \n    33.9% \n  \n  \n    Functions \n    Advanced \n    28.8% \n  \n  \n    Unit testing \n    Advanced \n    23.7% \n  \n  \n    Function documentation \n    Advanced \n    18.6% \n  \n  \n    Dependency management \n    Advanced \n    18.6% \n  \n  \n    Code packages \n    Advanced \n    16.9% \n  \n  \n    Continuous integration \n    Advanced \n    8.5% \n  \n\n\n\n Sample size = 59"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#how-to-use-this-research",
    "href": "departments/office-for-national-statistics.html#how-to-use-this-research",
    "title": "Department summary: Office for National Statistics",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/office-for-national-statistics.html#coding-frequency-and-tools",
    "href": "departments/office-for-national-statistics.html#coding-frequency-and-tools",
    "title": "Department summary: Office for National Statistics",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    12.6% \n  \n  \n    Rarely \n    13% \n  \n  \n    Sometimes \n    19.9% \n  \n  \n    Regularly \n    24.9% \n  \n  \n    All the time \n    29.5% \n  \n\n\n\n Sample size = 261\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    94.3% \n    3.8% \n    1.9% \n  \n  \n    R \n    93.5% \n    4.2% \n    2.3% \n  \n  \n    SQL \n    55.2% \n    12.3% \n    32.6% \n  \n  \n    Matlab \n    5.4% \n    35.2% \n    59.4% \n  \n  \n    SAS \n    37.5% \n    29.5% \n    33% \n  \n  \n    SPSS \n    37.9% \n    25.7% \n    36.4% \n  \n  \n    Stata \n    16.5% \n    29.9% \n    53.6% \n  \n  \n    VBA \n    19.5% \n    22.2% \n    58.2% \n  \n\n\n\n Sample size = 261\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    57.5% \n    26.4% \n    16.1% \n  \n  \n    R \n    54.8% \n    24.1% \n    21.1% \n  \n  \n    SQL \n    39.1% \n    24.5% \n    36.4% \n  \n  \n    Matlab \n    7.7% \n    25.3% \n    67% \n  \n  \n    SAS \n    16.1% \n    26.1% \n    57.9% \n  \n  \n    SPSS \n    26.1% \n    19.9% \n    54% \n  \n  \n    Stata \n    9.2% \n    26.1% \n    64.8% \n  \n  \n    VBA \n    7.7% \n    24.5% \n    67.8% \n  \n\n\n\n Sample size = 261\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    85.1% \n  \n  \n    No \n    3.8% \n  \n  \n    I don't know \n    11.1% \n  \n\n\n\n Sample size = 261\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    64% \n  \n  \n    No \n    34.5% \n  \n  \n    I don't know \n    1.5% \n  \n\n\n\n Sample size = 261"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#coding-capability-and-change",
    "href": "departments/office-for-national-statistics.html#coding-capability-and-change",
    "title": "Department summary: Office for National Statistics",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    35.5% \n  \n  \n    Education \n    46.9% \n  \n  \n    Previous private sector employment \n    4.8% \n  \n  \n    Previous public sector employment \n    6.1% \n  \n  \n    Self-taught \n    4.8% \n  \n  \n    Other \n    1.8% \n  \n\n\n\n Sample size = 228\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    2% \n  \n  \n    Slightly worse \n    6.8% \n  \n  \n    Stayed the same \n    11.6% \n  \n  \n    Slightly better \n    32% \n  \n  \n    Significantly better \n    47.6% \n  \n\n\n\n Sample size = 147"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#coding-practices",
    "href": "departments/office-for-national-statistics.html#coding-practices",
    "title": "Department summary: Office for National Statistics",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    4.8% \n    18% \n    14.9% \n    25.9% \n    19.7% \n    16.7% \n  \n  \n    Code review \n    1.3% \n    6.6% \n    7% \n    30.7% \n    30.3% \n    24.1% \n  \n  \n    Coding guidelines / Style guides \n    6.1% \n    7% \n    7.9% \n    28.1% \n    27.6% \n    23.2% \n  \n  \n    Functions \n    3.9% \n    6.6% \n    9.6% \n    25.4% \n    25.9% \n    28.5% \n  \n  \n    Open source own code \n    20.2% \n    38.2% \n    13.6% \n    13.2% \n    8.8% \n    6.1% \n  \n  \n    Packaging code \n    13.2% \n    43.4% \n    16.2% \n    10.5% \n    9.2% \n    7.5% \n  \n  \n    Proportionate quality assurance \n    14% \n    5.3% \n    5.3% \n    11.8% \n    35.1% \n    28.5% \n  \n  \n    Quality assurance throughout development \n    6.6% \n    6.1% \n    4.8% \n    18% \n    38.6% \n    25.9% \n  \n  \n    Standard directory structure \n    25.4% \n    11.4% \n    10.5% \n    16.7% \n    18.9% \n    17.1% \n  \n  \n    Unit testing \n    21.9% \n    22.8% \n    13.6% \n    16.7% \n    16.2% \n    8.8% \n  \n  \n    Use open source software \n    1.8% \n    3.5% \n    7.9% \n    11.8% \n    24.6% \n    50.4% \n  \n  \n    Version control \n    3.5% \n    19.7% \n    9.2% \n    15.8% \n    22.8% \n    28.9% \n  \n\n\n\n Sample size = 228\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    21.5% \n    38.2% \n    11% \n    16.2% \n    8.8% \n    4.4% \n  \n  \n    Code comments \n    1.8% \n    3.9% \n    1.3% \n    10.1% \n    30.3% \n    52.6% \n  \n  \n    Data or assumptions registers \n    23.2% \n    40.8% \n    10.1% \n    12.7% \n    6.1% \n    7% \n  \n  \n    Desk notes \n    9.6% \n    18.4% \n    9.6% \n    28.5% \n    19.3% \n    14.5% \n  \n  \n    Documentation for each function or class \n    8.8% \n    24.1% \n    11% \n    16.7% \n    19.3% \n    20.2% \n  \n  \n    Flow charts \n    6.1% \n    35.5% \n    14.5% \n    26.3% \n    10.5% \n    7% \n  \n  \n    README files \n    6.1% \n    29.4% \n    13.6% \n    21.5% \n    14.9% \n    14.5% \n  \n\n\n\n Sample size = 228\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    28.1% \n  \n  \n    No \n    28.5% \n  \n  \n    I don't know what dependency management is \n    43.4% \n  \n\n\n\n Sample size = 228\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    21.1% \n  \n  \n    No \n    39% \n  \n  \n    I don't know what continuous integration is \n    39.9% \n  \n\n\n\n Sample size = 228\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    5.3% \n  \n  \n    No \n    54.4% \n  \n  \n    I don't know what reproducible workflows are \n    40.4% \n  \n\n\n\n Sample size = 228"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#reproducible-analytical-pipelines-rap",
    "href": "departments/office-for-national-statistics.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Office for National Statistics",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    98.2% \n  \n  \n    No \n    1.8% \n  \n\n\n\n Sample size = 228\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    2.7% \n  \n  \n    Yes, and I know who the RAP Champion is \n    22.8% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    23.7% \n  \n  \n    No \n    1.8% \n  \n  \n    I don't know \n    49.1% \n  \n\n\n\n Sample size = 224\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    35.7% \n  \n  \n    Yes, but I haven't read it \n    36.6% \n  \n  \n    No \n    27.7% \n  \n\n\n\n Sample size = 224\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    11.2% \n    21.9% \n    23.7% \n    23.7% \n    19.6% \n  \n  \n    I feel confident implementing RAP in my work \n    7.6% \n    21% \n    24.6% \n    29% \n    17.9% \n  \n  \n    I feel supported to implement RAP in my work \n    7.1% \n    14.3% \n    25.4% \n    37.1% \n    16.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    8.5% \n    15.2% \n    18.8% \n    36.2% \n    21.4% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.1% \n    9.4% \n    28.6% \n    29% \n    25.9% \n  \n  \n    I think it is important to implement RAP in my work \n    3.1% \n    4.5% \n    14.7% \n    35.7% \n    42% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.8% \n    17.9% \n    17.4% \n    38.4% \n    20.5% \n  \n\n\n\n Sample size = 224"
  },
  {
    "objectID": "departments/office-for-national-statistics.html#rap-scores",
    "href": "departments/office-for-national-statistics.html#rap-scores",
    "title": "Department summary: Office for National Statistics",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    75% \n  \n  \n    Proportionate QA \n    Basic \n    63.6% \n  \n  \n    Peer review \n    Basic \n    54.4% \n  \n  \n    Version control \n    Basic \n    51.8% \n  \n  \n    Documentation \n    Basic \n    27.6% \n  \n  \n    Team open source code \n    Basic \n    14.9% \n  \n  \n    Functions \n    Advanced \n    54.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    50.9% \n  \n  \n    Function documentation \n    Advanced \n    39.5% \n  \n  \n    Dependency management \n    Advanced \n    28.1% \n  \n  \n    Unit testing \n    Advanced \n    25% \n  \n  \n    Continuous integration \n    Advanced \n    21.1% \n  \n  \n    Code packages \n    Advanced \n    16.7% \n  \n\n\n\n Sample size = 228"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#how-to-use-this-research",
    "href": "departments/scottish-government-excl-agencies-.html#how-to-use-this-research",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#coding-frequency-and-tools",
    "href": "departments/scottish-government-excl-agencies-.html#coding-frequency-and-tools",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    8.7% \n  \n  \n    Rarely \n    8.7% \n  \n  \n    Sometimes \n    17.4% \n  \n  \n    Regularly \n    30.4% \n  \n  \n    All the time \n    34.8% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    56.5% \n    17.4% \n    26.1% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SQL \n    34.8% \n    8.7% \n    56.5% \n  \n  \n    Matlab \n    8.7% \n    30.4% \n    60.9% \n  \n  \n    SAS \n    69.6% \n    8.7% \n    21.7% \n  \n  \n    SPSS \n    43.5% \n    17.4% \n    39.1% \n  \n  \n    Stata \n    13% \n    21.7% \n    65.2% \n  \n  \n    VBA \n    39.1% \n    8.7% \n    52.2% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    21.7% \n    39.1% \n    39.1% \n  \n  \n    R \n    82.6% \n    13% \n    4.3% \n  \n  \n    SQL \n    21.7% \n    43.5% \n    34.8% \n  \n  \n    Matlab \n    13% \n    34.8% \n    52.2% \n  \n  \n    SAS \n    43.5% \n    39.1% \n    17.4% \n  \n  \n    SPSS \n    26.1% \n    26.1% \n    47.8% \n  \n  \n    Stata \n    8.7% \n    34.8% \n    56.5% \n  \n  \n    VBA \n    8.7% \n    56.5% \n    34.8% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    78.3% \n  \n  \n    No \n    4.3% \n  \n  \n    I don't know \n    17.4% \n  \n\n\n\n Sample size = 23\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    52.2% \n  \n  \n    No \n    47.8% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 23"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#coding-capability-and-change",
    "href": "departments/scottish-government-excl-agencies-.html#coding-capability-and-change",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    14.3% \n  \n  \n    Education \n    71.4% \n  \n  \n    Previous private sector employment \n    0% \n  \n  \n    Previous public sector employment \n    14.3% \n  \n  \n    Self-taught \n    0% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    5.6% \n  \n  \n    Stayed the same \n    0% \n  \n  \n    Slightly better \n    50% \n  \n  \n    Significantly better \n    44.4% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#coding-practices",
    "href": "departments/scottish-government-excl-agencies-.html#coding-practices",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    0% \n    28.6% \n    9.5% \n    38.1% \n    23.8% \n    0% \n  \n  \n    Code review \n    0% \n    4.8% \n    9.5% \n    47.6% \n    33.3% \n    4.8% \n  \n  \n    Coding guidelines / Style guides \n    4.8% \n    0% \n    14.3% \n    23.8% \n    28.6% \n    28.6% \n  \n  \n    Functions \n    4.8% \n    0% \n    4.8% \n    38.1% \n    14.3% \n    38.1% \n  \n  \n    Open source own code \n    4.8% \n    57.1% \n    14.3% \n    14.3% \n    9.5% \n    0% \n  \n  \n    Packaging code \n    0% \n    66.7% \n    19% \n    4.8% \n    4.8% \n    4.8% \n  \n  \n    Proportionate quality assurance \n    0% \n    4.8% \n    0% \n    28.6% \n    47.6% \n    19% \n  \n  \n    Quality assurance throughout development \n    0% \n    4.8% \n    0% \n    28.6% \n    42.9% \n    23.8% \n  \n  \n    Standard directory structure \n    14.3% \n    23.8% \n    0% \n    19% \n    28.6% \n    14.3% \n  \n  \n    Unit testing \n    19% \n    28.6% \n    14.3% \n    19% \n    19% \n    0% \n  \n  \n    Use open source software \n    0% \n    4.8% \n    14.3% \n    4.8% \n    23.8% \n    52.4% \n  \n  \n    Version control \n    0% \n    38.1% \n    4.8% \n    28.6% \n    14.3% \n    14.3% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    9.5% \n    38.1% \n    0% \n    28.6% \n    9.5% \n    14.3% \n  \n  \n    Code comments \n    0% \n    0% \n    4.8% \n    0% \n    28.6% \n    66.7% \n  \n  \n    Data or assumptions registers \n    23.8% \n    42.9% \n    4.8% \n    14.3% \n    4.8% \n    9.5% \n  \n  \n    Desk notes \n    9.5% \n    0% \n    14.3% \n    14.3% \n    33.3% \n    28.6% \n  \n  \n    Documentation for each function or class \n    4.8% \n    33.3% \n    14.3% \n    19% \n    23.8% \n    4.8% \n  \n  \n    Flow charts \n    4.8% \n    14.3% \n    14.3% \n    52.4% \n    9.5% \n    4.8% \n  \n  \n    README files \n    0% \n    19% \n    28.6% \n    19% \n    19% \n    14.3% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    9.5% \n  \n  \n    No \n    52.4% \n  \n  \n    I don't know what dependency management is \n    38.1% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    9.5% \n  \n  \n    No \n    42.9% \n  \n  \n    I don't know what continuous integration is \n    47.6% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    57.1% \n  \n  \n    I don't know what reproducible workflows are \n    42.9% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "href": "departments/scottish-government-excl-agencies-.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    95.2% \n  \n  \n    No \n    4.8% \n  \n\n\n\n Sample size = 21\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    10% \n  \n  \n    Yes, and I know who the RAP Champion is \n    25% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    15% \n  \n  \n    No \n    5% \n  \n  \n    I don't know \n    45% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    40% \n  \n  \n    Yes, but I haven't read it \n    35% \n  \n  \n    No \n    25% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    20% \n    10% \n    25% \n    20% \n    25% \n  \n  \n    I feel confident implementing RAP in my work \n    10% \n    10% \n    25% \n    35% \n    20% \n  \n  \n    I feel supported to implement RAP in my work \n    10% \n    15% \n    20% \n    25% \n    30% \n  \n  \n    I know where to find resources to help me implement RAP \n    5% \n    10% \n    15% \n    35% \n    35% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    10% \n    5% \n    30% \n    30% \n    25% \n  \n  \n    I think it is important to implement RAP in my work \n    10% \n    15% \n    0% \n    25% \n    50% \n  \n  \n    I understand what the key components of the RAP methodology are \n    10% \n    5% \n    10% \n    45% \n    30% \n  \n\n\n\n Sample size = 20"
  },
  {
    "objectID": "departments/scottish-government-excl-agencies-.html#rap-scores",
    "href": "departments/scottish-government-excl-agencies-.html#rap-scores",
    "title": "Department summary: Scottish Government (excl. agencies)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    76.2% \n  \n  \n    Proportionate QA \n    Basic \n    66.7% \n  \n  \n    Peer review \n    Basic \n    38.1% \n  \n  \n    Documentation \n    Basic \n    33.3% \n  \n  \n    Version control \n    Basic \n    28.6% \n  \n  \n    Team open source code \n    Basic \n    9.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    57.1% \n  \n  \n    Functions \n    Advanced \n    52.4% \n  \n  \n    Function documentation \n    Advanced \n    28.6% \n  \n  \n    Unit testing \n    Advanced \n    19% \n  \n  \n    Code packages \n    Advanced \n    9.5% \n  \n  \n    Continuous integration \n    Advanced \n    9.5% \n  \n  \n    Dependency management \n    Advanced \n    9.5% \n  \n\n\n\n Sample size = 21"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#how-to-use-this-research",
    "href": "departments/uk-health-security-agency.html#how-to-use-this-research",
    "title": "Department summary: UK Health Security Agency",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/uk-health-security-agency.html#coding-frequency-and-tools",
    "href": "departments/uk-health-security-agency.html#coding-frequency-and-tools",
    "title": "Department summary: UK Health Security Agency",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    11.5% \n  \n  \n    Rarely \n    1.6% \n  \n  \n    Sometimes \n    14.8% \n  \n  \n    Regularly \n    29.5% \n  \n  \n    All the time \n    42.6% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    90.2% \n    3.3% \n    6.6% \n  \n  \n    R \n    96.7% \n    3.3% \n    0% \n  \n  \n    SQL \n    80.3% \n    4.9% \n    14.8% \n  \n  \n    Matlab \n    4.9% \n    21.3% \n    73.8% \n  \n  \n    SAS \n    4.9% \n    23% \n    72.1% \n  \n  \n    SPSS \n    9.8% \n    21.3% \n    68.9% \n  \n  \n    Stata \n    49.2% \n    11.5% \n    39.3% \n  \n  \n    VBA \n    32.8% \n    9.8% \n    57.4% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    45.9% \n    31.1% \n    23% \n  \n  \n    R \n    72.1% \n    16.4% \n    11.5% \n  \n  \n    SQL \n    54.1% \n    24.6% \n    21.3% \n  \n  \n    Matlab \n    8.2% \n    24.6% \n    67.2% \n  \n  \n    SAS \n    8.2% \n    24.6% \n    67.2% \n  \n  \n    SPSS \n    4.9% \n    31.1% \n    63.9% \n  \n  \n    Stata \n    21.3% \n    27.9% \n    50.8% \n  \n  \n    VBA \n    16.4% \n    27.9% \n    55.7% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    93.4% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    6.6% \n  \n\n\n\n Sample size = 61\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    80.3% \n  \n  \n    No \n    18% \n  \n  \n    I don't know \n    1.6% \n  \n\n\n\n Sample size = 61"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#coding-capability-and-change",
    "href": "departments/uk-health-security-agency.html#coding-capability-and-change",
    "title": "Department summary: UK Health Security Agency",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    11.1% \n  \n  \n    Education \n    57.4% \n  \n  \n    Previous private sector employment \n    3.7% \n  \n  \n    Previous public sector employment \n    7.4% \n  \n  \n    Self-taught \n    14.8% \n  \n  \n    Other \n    5.6% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    6.2% \n  \n  \n    Stayed the same \n    14.6% \n  \n  \n    Slightly better \n    41.7% \n  \n  \n    Significantly better \n    37.5% \n  \n\n\n\n Sample size = 48"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#coding-practices",
    "href": "departments/uk-health-security-agency.html#coding-practices",
    "title": "Department summary: UK Health Security Agency",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    9.3% \n    18.5% \n    13% \n    29.6% \n    22.2% \n    7.4% \n  \n  \n    Code review \n    0% \n    7.4% \n    22.2% \n    18.5% \n    27.8% \n    24.1% \n  \n  \n    Coding guidelines / Style guides \n    3.7% \n    7.4% \n    1.9% \n    29.6% \n    31.5% \n    25.9% \n  \n  \n    Functions \n    1.9% \n    5.6% \n    5.6% \n    13% \n    35.2% \n    38.9% \n  \n  \n    Open source own code \n    9.3% \n    31.5% \n    24.1% \n    18.5% \n    9.3% \n    7.4% \n  \n  \n    Packaging code \n    3.7% \n    46.3% \n    18.5% \n    16.7% \n    11.1% \n    3.7% \n  \n  \n    Proportionate quality assurance \n    13% \n    3.7% \n    3.7% \n    16.7% \n    37% \n    25.9% \n  \n  \n    Quality assurance throughout development \n    14.8% \n    5.6% \n    9.3% \n    16.7% \n    27.8% \n    25.9% \n  \n  \n    Standard directory structure \n    14.8% \n    7.4% \n    13% \n    18.5% \n    27.8% \n    18.5% \n  \n  \n    Unit testing \n    13% \n    18.5% \n    20.4% \n    22.2% \n    14.8% \n    11.1% \n  \n  \n    Use open source software \n    0% \n    0% \n    0% \n    5.6% \n    18.5% \n    75.9% \n  \n  \n    Version control \n    1.9% \n    9.3% \n    11.1% \n    9.3% \n    20.4% \n    48.1% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    27.8% \n    27.8% \n    16.7% \n    13% \n    13% \n    1.9% \n  \n  \n    Code comments \n    0% \n    1.9% \n    1.9% \n    5.6% \n    27.8% \n    63% \n  \n  \n    Data or assumptions registers \n    33.3% \n    42.6% \n    11.1% \n    7.4% \n    1.9% \n    3.7% \n  \n  \n    Desk notes \n    29.6% \n    14.8% \n    13% \n    18.5% \n    16.7% \n    7.4% \n  \n  \n    Documentation for each function or class \n    1.9% \n    16.7% \n    11.1% \n    20.4% \n    25.9% \n    24.1% \n  \n  \n    Flow charts \n    0% \n    31.5% \n    18.5% \n    29.6% \n    16.7% \n    3.7% \n  \n  \n    README files \n    0% \n    9.3% \n    13% \n    35.2% \n    18.5% \n    24.1% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    44.4% \n  \n  \n    No \n    33.3% \n  \n  \n    I don't know what dependency management is \n    22.2% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    31.5% \n  \n  \n    No \n    44.4% \n  \n  \n    I don't know what continuous integration is \n    24.1% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    20.4% \n  \n  \n    No \n    48.1% \n  \n  \n    I don't know what reproducible workflows are \n    31.5% \n  \n\n\n\n Sample size = 54"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#reproducible-analytical-pipelines-rap",
    "href": "departments/uk-health-security-agency.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: UK Health Security Agency",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    77.8% \n  \n  \n    No \n    22.2% \n  \n\n\n\n Sample size = 54\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    0% \n  \n  \n    Yes, and I know who the RAP Champion is \n    19% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    4.8% \n  \n  \n    No \n    19% \n  \n  \n    I don't know \n    57.1% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    26.2% \n  \n  \n    Yes, but I haven't read it \n    35.7% \n  \n  \n    No \n    38.1% \n  \n\n\n\n Sample size = 42\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    16.7% \n    19% \n    19% \n    33.3% \n    11.9% \n  \n  \n    I feel confident implementing RAP in my work \n    14.3% \n    16.7% \n    9.5% \n    57.1% \n    2.4% \n  \n  \n    I feel supported to implement RAP in my work \n    9.5% \n    19% \n    31% \n    35.7% \n    4.8% \n  \n  \n    I know where to find resources to help me implement RAP \n    11.9% \n    14.3% \n    16.7% \n    45.2% \n    11.9% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    9.5% \n    9.5% \n    26.2% \n    38.1% \n    16.7% \n  \n  \n    I think it is important to implement RAP in my work \n    4.8% \n    0% \n    19% \n    33.3% \n    42.9% \n  \n  \n    I understand what the key components of the RAP methodology are \n    11.9% \n    16.7% \n    4.8% \n    47.6% \n    19% \n  \n\n\n\n Sample size = 42"
  },
  {
    "objectID": "departments/uk-health-security-agency.html#rap-scores",
    "href": "departments/uk-health-security-agency.html#rap-scores",
    "title": "Department summary: UK Health Security Agency",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    94.4% \n  \n  \n    Version control \n    Basic \n    68.5% \n  \n  \n    Proportionate QA \n    Basic \n    63% \n  \n  \n    Peer review \n    Basic \n    51.9% \n  \n  \n    Documentation \n    Basic \n    42.6% \n  \n  \n    Team open source code \n    Basic \n    16.7% \n  \n  \n    Functions \n    Advanced \n    74.1% \n  \n  \n    Follow code style guidelines \n    Advanced \n    57.4% \n  \n  \n    Function documentation \n    Advanced \n    50% \n  \n  \n    Dependency management \n    Advanced \n    44.4% \n  \n  \n    Continuous integration \n    Advanced \n    31.5% \n  \n  \n    Unit testing \n    Advanced \n    25.9% \n  \n  \n    Code packages \n    Advanced \n    14.8% \n  \n\n\n\n Sample size = 54"
  },
  {
    "objectID": "departments/welsh-government.html#how-to-use-this-research",
    "href": "departments/welsh-government.html#how-to-use-this-research",
    "title": "Department summary: Welsh Government",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "departments/welsh-government.html#coding-frequency-and-tools",
    "href": "departments/welsh-government.html#coding-frequency-and-tools",
    "title": "Department summary: Welsh Government",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    9.8% \n  \n  \n    Rarely \n    22% \n  \n  \n    Sometimes \n    22% \n  \n  \n    Regularly \n    24.4% \n  \n  \n    All the time \n    22% \n  \n\n\n\n Sample size = 41\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    80.5% \n    4.9% \n    14.6% \n  \n  \n    R \n    85.4% \n    9.8% \n    4.9% \n  \n  \n    SQL \n    95.1% \n    2.4% \n    2.4% \n  \n  \n    Matlab \n    2.4% \n    46.3% \n    51.2% \n  \n  \n    SAS \n    53.7% \n    24.4% \n    22% \n  \n  \n    SPSS \n    46.3% \n    29.3% \n    24.4% \n  \n  \n    Stata \n    34.1% \n    31.7% \n    34.1% \n  \n  \n    VBA \n    36.6% \n    17.1% \n    46.3% \n  \n\n\n\n Sample size = 41\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    46.3% \n    34.1% \n    19.5% \n  \n  \n    R \n    70.7% \n    19.5% \n    9.8% \n  \n  \n    SQL \n    61% \n    31.7% \n    7.3% \n  \n  \n    Matlab \n    7.3% \n    24.4% \n    68.3% \n  \n  \n    SAS \n    12.2% \n    46.3% \n    41.5% \n  \n  \n    SPSS \n    19.5% \n    34.1% \n    46.3% \n  \n  \n    Stata \n    12.2% \n    31.7% \n    56.1% \n  \n  \n    VBA \n    14.6% \n    31.7% \n    53.7% \n  \n\n\n\n Sample size = 41\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    56.1% \n  \n  \n    No \n    7.3% \n  \n  \n    I don't know \n    36.6% \n  \n\n\n\n Sample size = 41\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    36.6% \n  \n  \n    No \n    56.1% \n  \n  \n    I don't know \n    7.3% \n  \n\n\n\n Sample size = 41"
  },
  {
    "objectID": "departments/welsh-government.html#coding-capability-and-change",
    "href": "departments/welsh-government.html#coding-capability-and-change",
    "title": "Department summary: Welsh Government",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    18.9% \n  \n  \n    Education \n    54.1% \n  \n  \n    Previous private sector employment \n    2.7% \n  \n  \n    Previous public sector employment \n    13.5% \n  \n  \n    Self-taught \n    10.8% \n  \n  \n    Other \n    0% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    10% \n  \n  \n    Slightly worse \n    10% \n  \n  \n    Stayed the same \n    10% \n  \n  \n    Slightly better \n    30% \n  \n  \n    Significantly better \n    40% \n  \n\n\n\n Sample size = 30"
  },
  {
    "objectID": "departments/welsh-government.html#coding-practices",
    "href": "departments/welsh-government.html#coding-practices",
    "title": "Department summary: Welsh Government",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    2.7% \n    10.8% \n    21.6% \n    32.4% \n    13.5% \n    18.9% \n  \n  \n    Code review \n    0% \n    13.5% \n    8.1% \n    18.9% \n    40.5% \n    18.9% \n  \n  \n    Coding guidelines / Style guides \n    10.8% \n    13.5% \n    18.9% \n    16.2% \n    21.6% \n    18.9% \n  \n  \n    Functions \n    2.7% \n    13.5% \n    8.1% \n    37.8% \n    18.9% \n    18.9% \n  \n  \n    Open source own code \n    24.3% \n    40.5% \n    10.8% \n    10.8% \n    2.7% \n    10.8% \n  \n  \n    Packaging code \n    10.8% \n    54.1% \n    13.5% \n    10.8% \n    5.4% \n    5.4% \n  \n  \n    Proportionate quality assurance \n    24.3% \n    2.7% \n    2.7% \n    16.2% \n    32.4% \n    21.6% \n  \n  \n    Quality assurance throughout development \n    10.8% \n    5.4% \n    8.1% \n    13.5% \n    35.1% \n    27% \n  \n  \n    Standard directory structure \n    24.3% \n    18.9% \n    8.1% \n    5.4% \n    27% \n    16.2% \n  \n  \n    Unit testing \n    37.8% \n    21.6% \n    8.1% \n    10.8% \n    18.9% \n    2.7% \n  \n  \n    Use open source software \n    0% \n    5.4% \n    10.8% \n    13.5% \n    18.9% \n    51.4% \n  \n  \n    Version control \n    10.8% \n    48.6% \n    2.7% \n    10.8% \n    2.7% \n    24.3% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    37.8% \n    27% \n    8.1% \n    18.9% \n    2.7% \n    5.4% \n  \n  \n    Code comments \n    0% \n    0% \n    0% \n    10.8% \n    29.7% \n    59.5% \n  \n  \n    Data or assumptions registers \n    21.6% \n    56.8% \n    16.2% \n    0% \n    2.7% \n    2.7% \n  \n  \n    Desk notes \n    0% \n    5.4% \n    8.1% \n    32.4% \n    35.1% \n    18.9% \n  \n  \n    Documentation for each function or class \n    16.2% \n    27% \n    13.5% \n    16.2% \n    18.9% \n    8.1% \n  \n  \n    Flow charts \n    10.8% \n    32.4% \n    18.9% \n    21.6% \n    10.8% \n    5.4% \n  \n  \n    README files \n    8.1% \n    24.3% \n    18.9% \n    27% \n    8.1% \n    13.5% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    16.2% \n  \n  \n    No \n    37.8% \n  \n  \n    I don't know what dependency management is \n    45.9% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    2.7% \n  \n  \n    No \n    43.2% \n  \n  \n    I don't know what continuous integration is \n    54.1% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    62.2% \n  \n  \n    I don't know what reproducible workflows are \n    37.8% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments/welsh-government.html#reproducible-analytical-pipelines-rap",
    "href": "departments/welsh-government.html#reproducible-analytical-pipelines-rap",
    "title": "Department summary: Welsh Government",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    97.3% \n  \n  \n    No \n    2.7% \n  \n\n\n\n Sample size = 37\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    2.8% \n  \n  \n    Yes, and I know who the RAP Champion is \n    44.4% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    22.2% \n  \n  \n    No \n    5.6% \n  \n  \n    I don't know \n    25% \n  \n\n\n\n Sample size = 36\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    27.8% \n  \n  \n    Yes, but I haven't read it \n    47.2% \n  \n  \n    No \n    25% \n  \n\n\n\n Sample size = 36\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    19.4% \n    19.4% \n    16.7% \n    19.4% \n    25% \n  \n  \n    I feel confident implementing RAP in my work \n    8.3% \n    16.7% \n    22.2% \n    25% \n    27.8% \n  \n  \n    I feel supported to implement RAP in my work \n    11.1% \n    8.3% \n    11.1% \n    38.9% \n    30.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    11.1% \n    16.7% \n    16.7% \n    30.6% \n    25% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    5.6% \n    11.1% \n    27.8% \n    22.2% \n    33.3% \n  \n  \n    I think it is important to implement RAP in my work \n    2.8% \n    8.3% \n    2.8% \n    30.6% \n    55.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    13.9% \n    5.6% \n    16.7% \n    44.4% \n    19.4% \n  \n\n\n\n Sample size = 36"
  },
  {
    "objectID": "departments/welsh-government.html#rap-scores",
    "href": "departments/welsh-government.html#rap-scores",
    "title": "Department summary: Welsh Government",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    70.3% \n  \n  \n    Peer review \n    Basic \n    59.5% \n  \n  \n    Proportionate QA \n    Basic \n    54.1% \n  \n  \n    Version control \n    Basic \n    27% \n  \n  \n    Documentation \n    Basic \n    21.6% \n  \n  \n    Team open source code \n    Basic \n    13.5% \n  \n  \n    Follow code style guidelines \n    Advanced \n    40.5% \n  \n  \n    Functions \n    Advanced \n    37.8% \n  \n  \n    Function documentation \n    Advanced \n    27% \n  \n  \n    Unit testing \n    Advanced \n    21.6% \n  \n  \n    Dependency management \n    Advanced \n    16.2% \n  \n  \n    Code packages \n    Advanced \n    10.8% \n  \n  \n    Continuous integration \n    Advanced \n    2.7% \n  \n\n\n\n Sample size = 37"
  },
  {
    "objectID": "departments.html",
    "href": "departments.html",
    "title": "Department summaries",
    "section": "",
    "text": "Note\n\n\n\nPlease note, these are the initial summary statistics for CARS 2023 and further analysis will follow. We advise linking directly to this document when distributing to ensure the most up to date information.\n\n\nBelow are links to profession-specific reports These contain summary statistics, filtered by department. Only departments with 20 or more respondents are included.\n\nDepartment for Business & Trade\nDepartment for Education (excl. agencies)\nDepartment for Energy Security & Net Zero\nDepartment for Environment, Food and Rural Affairs (excl. agencies)\nDepartment for Environment, Food and Rural Affairs (including agencies)\nDepartment for Levelling Up, Housing & Communities (excl. agencies)\nDepartment for Transport (excl. agencies)\nHM Land Registry\nHM Revenue & Customs (excl. agencies)\nHome Office (excl. agencies)\nMinistry of Defence (excl. agencies)\nMinistry of Justice (excl. agencies)\nNorthern Ireland Statistics and Research Agency\nOffice for National Statistics\nScottish Government (excl. agencies)\nUK Health Security Agency\nWelsh Government"
  },
  {
    "objectID": "index.html#how-do-analysts-use-programming-and-software-engineering-in-the-uk-public-sector",
    "href": "index.html#how-do-analysts-use-programming-and-software-engineering-in-the-uk-public-sector",
    "title": "Home",
    "section": "How do analysts use programming and software engineering in the UK Public Sector?",
    "text": "How do analysts use programming and software engineering in the UK Public Sector?\nThe Coding in Analysis and Research Survey (CARS) was developed to understand better how government analysts use programming. Most questions focused on whether and how analysts use coding in their work. The survey is also concerned with Reproducible Analytical Pipelines (RAP).\nThe survey was distributed to government analysts and researchers in the autumn of 2023. The results presented summarise the key findings from 1297 respondents from over 50 public sector organisations."
  },
  {
    "objectID": "index.html#who-is-this-research-for",
    "href": "index.html#who-is-this-research-for",
    "title": "Home",
    "section": "Who is this research for?",
    "text": "Who is this research for?\nThis research was made with senior analysts and leaders in mind. It is intended to be be useful for the development of strategies for public sector analysis and research. These findings should also be of interest to analysts and researchers in the public sector who are interested in understanding more about how their professions use programming in their work. Lastly, it will be useful to people outside the public sector who are interested in understanding the tools that are used in the public sector for analysis and research."
  },
  {
    "objectID": "index.html#how-to-use-this-research",
    "href": "index.html#how-to-use-this-research",
    "title": "Home",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present only reflect the views of the analysts who participated.\nWe cannot draw wider conclusions about the general population of government analysts from these results because the survey is not based on a random sample.\nDo:\n\nExplore the data to gain insights about current coding practices in government analysis and research\nRe-use the outputs if you wish\n\nAvoid:\n\nAttempting to estimate absolute frequencies - we did not use random sampling\nInferring differences between groups - these outputs are only intended to be descriptive and inferential tests were not carried out unless stated otherwise\n\nFor more detail, see the data collection page."
  },
  {
    "objectID": "index.html#rap",
    "href": "index.html#rap",
    "title": "Home",
    "section": "More information on reproducible analytical pipelines",
    "text": "More information on reproducible analytical pipelines\nThe Reproducible Analytical Pipelines Minimum Viable Product sets out the minimum expectations for what analysts must do for work to qualify as a RAP.\nQuality assurance for coding in analysis and research\nRAP champions network page"
  },
  {
    "objectID": "index.html#accessibility-statement",
    "href": "index.html#accessibility-statement",
    "title": "Home",
    "section": "Accessibility statement",
    "text": "Accessibility statement\nThis accessibility statement applies to the Coding in Analysis and Research Survey report. Please note that this does not include third-party content that is referenced from this site.\nThe website is managed by the Methodology and Quality division of the Office for National Statistics. We would like this guidance to be accessible for as many people as possible. This means that you should be able to:\n\nchange colours, contrast levels and fonts\nzoom in up to 300% without the text spilling off the screen\nnavigate most of the website using just a keyboard\nnavigate most of the website using speech recognition software\nlisten to most of the website using a screen reader (including the most recent versions of JAWS, NVDA and VoiceOver)\n\n\nFeedback and reporting accessibility problems\nWe’re always looking to improve the accessibility of our guidance. If you find any problems not listed on this page or think that we’re not meeting accessibility requirements, please contact us by email at gsshelp@statistics.gov.uk. Please also get in touch if you are unable to access any part of this guidance, or require the content in a different format.\nWe will consider your request and aim to get back to you within 5 working days.\n\n\nEnforcement procedure\nThe Equality and Human Rights Commission (EHRC) is responsible for enforcing the Public Sector Bodies (Websites and Mobile Applications) (No. 2) Accessibility Regulations 2018 (the ‘accessibility regulations’). If you’re not happy with how we respond to your complaint, you should contact the Equality Advisory and Support Service (EASS)."
  },
  {
    "objectID": "index.html#contact-details",
    "href": "index.html#contact-details",
    "title": "Home",
    "section": "Contact details",
    "text": "Contact details\nWe would like to know what you think of the survey and the outputs. Please contact us if you have feedback on any of the following:\n\nOutputs/analyses you would like to see added to this research\nInformation you would like to see collected in the next iteration of CARS\nAny other comments\n\nIf you are interested in this survey or any of the questions asked, or want to give feedback, please contact ASAP@ONS.gov.uk."
  },
  {
    "objectID": "professions/data-engineers.html#how-to-use-this-research",
    "href": "professions/data-engineers.html#how-to-use-this-research",
    "title": "Profession summary: government data engineers",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/data-engineers.html#coding-frequency-and-tools",
    "href": "professions/data-engineers.html#coding-frequency-and-tools",
    "title": "Profession summary: government data engineers",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0% \n  \n  \n    Rarely \n    0% \n  \n  \n    Sometimes \n    13.3% \n  \n  \n    Regularly \n    30% \n  \n  \n    All the time \n    56.7% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    93.3% \n    3.3% \n    3.3% \n  \n  \n    R \n    93.3% \n    3.3% \n    3.3% \n  \n  \n    SQL \n    83.3% \n    6.7% \n    10% \n  \n  \n    Matlab \n    13.3% \n    50% \n    36.7% \n  \n  \n    SAS \n    40% \n    23.3% \n    36.7% \n  \n  \n    SPSS \n    26.7% \n    26.7% \n    46.7% \n  \n  \n    Stata \n    13.3% \n    33.3% \n    53.3% \n  \n  \n    VBA \n    46.7% \n    23.3% \n    30% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    90% \n    3.3% \n    6.7% \n  \n  \n    R \n    46.7% \n    20% \n    33.3% \n  \n  \n    SQL \n    86.7% \n    10% \n    3.3% \n  \n  \n    Matlab \n    13.3% \n    16.7% \n    70% \n  \n  \n    SAS \n    20% \n    20% \n    60% \n  \n  \n    SPSS \n    13.3% \n    20% \n    66.7% \n  \n  \n    Stata \n    3.3% \n    20% \n    76.7% \n  \n  \n    VBA \n    10% \n    20% \n    70% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    93.3% \n  \n  \n    No \n    6.7% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    90% \n  \n  \n    No \n    10% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 30"
  },
  {
    "objectID": "professions/data-engineers.html#coding-capability-and-change",
    "href": "professions/data-engineers.html#coding-capability-and-change",
    "title": "Profession summary: government data engineers",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    16.7% \n  \n  \n    Education \n    50% \n  \n  \n    Previous private sector employment \n    6.7% \n  \n  \n    Previous public sector employment \n    6.7% \n  \n  \n    Self-taught \n    10% \n  \n  \n    Other \n    10% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    0% \n  \n  \n    Slightly worse \n    0% \n  \n  \n    Stayed the same \n    4% \n  \n  \n    Slightly better \n    28% \n  \n  \n    Significantly better \n    68% \n  \n\n\n\n Sample size = 25"
  },
  {
    "objectID": "professions/data-engineers.html#coding-practices",
    "href": "professions/data-engineers.html#coding-practices",
    "title": "Profession summary: government data engineers",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    0% \n    16.7% \n    6.7% \n    6.7% \n    23.3% \n    46.7% \n  \n  \n    Code review \n    0% \n    6.7% \n    6.7% \n    16.7% \n    16.7% \n    53.3% \n  \n  \n    Coding guidelines / Style guides \n    0% \n    10% \n    0% \n    26.7% \n    33.3% \n    30% \n  \n  \n    Functions \n    0% \n    3.3% \n    3.3% \n    10% \n    26.7% \n    56.7% \n  \n  \n    Open source own code \n    3.3% \n    30% \n    23.3% \n    26.7% \n    10% \n    6.7% \n  \n  \n    Packaging code \n    3.3% \n    23.3% \n    10% \n    23.3% \n    13.3% \n    26.7% \n  \n  \n    Proportionate quality assurance \n    13.3% \n    3.3% \n    3.3% \n    13.3% \n    23.3% \n    43.3% \n  \n  \n    Quality assurance throughout development \n    0% \n    3.3% \n    10% \n    6.7% \n    26.7% \n    53.3% \n  \n  \n    Standard directory structure \n    6.7% \n    0% \n    10% \n    20% \n    36.7% \n    26.7% \n  \n  \n    Unit testing \n    3.3% \n    0% \n    20% \n    13.3% \n    36.7% \n    26.7% \n  \n  \n    Use open source software \n    0% \n    0% \n    0% \n    13.3% \n    23.3% \n    63.3% \n  \n  \n    Version control \n    0% \n    3.3% \n    3.3% \n    13.3% \n    16.7% \n    63.3% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    16.7% \n    23.3% \n    10% \n    30% \n    13.3% \n    6.7% \n  \n  \n    Code comments \n    0% \n    3.3% \n    0% \n    6.7% \n    30% \n    60% \n  \n  \n    Data or assumptions registers \n    23.3% \n    33.3% \n    16.7% \n    13.3% \n    6.7% \n    6.7% \n  \n  \n    Desk notes \n    16.7% \n    13.3% \n    13.3% \n    26.7% \n    16.7% \n    13.3% \n  \n  \n    Documentation for each function or class \n    0% \n    6.7% \n    0% \n    23.3% \n    23.3% \n    46.7% \n  \n  \n    Flow charts \n    6.7% \n    13.3% \n    13.3% \n    26.7% \n    23.3% \n    16.7% \n  \n  \n    README files \n    0% \n    10% \n    13.3% \n    26.7% \n    20% \n    30% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    66.7% \n  \n  \n    No \n    16.7% \n  \n  \n    I don't know what dependency management is \n    16.7% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    53.3% \n  \n  \n    No \n    26.7% \n  \n  \n    I don't know what continuous integration is \n    20% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    16.7% \n  \n  \n    No \n    53.3% \n  \n  \n    I don't know what reproducible workflows are \n    30% \n  \n\n\n\n Sample size = 30"
  },
  {
    "objectID": "professions/data-engineers.html#reproducible-analytical-pipelines-rap",
    "href": "professions/data-engineers.html#reproducible-analytical-pipelines-rap",
    "title": "Profession summary: government data engineers",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    93.3% \n  \n  \n    No \n    6.7% \n  \n\n\n\n Sample size = 30\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    3.6% \n  \n  \n    Yes, and I know who the RAP Champion is \n    21.4% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    14.3% \n  \n  \n    No \n    10.7% \n  \n  \n    I don't know \n    50% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    28.6% \n  \n  \n    Yes, but I haven't read it \n    32.1% \n  \n  \n    No \n    39.3% \n  \n\n\n\n Sample size = 28\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    10.7% \n    3.6% \n    17.9% \n    39.3% \n    28.6% \n  \n  \n    I feel confident implementing RAP in my work \n    3.6% \n    0% \n    21.4% \n    39.3% \n    35.7% \n  \n  \n    I feel supported to implement RAP in my work \n    3.6% \n    10.7% \n    32.1% \n    25% \n    28.6% \n  \n  \n    I know where to find resources to help me implement RAP \n    10.7% \n    14.3% \n    17.9% \n    28.6% \n    28.6% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    10.7% \n    0% \n    17.9% \n    35.7% \n    35.7% \n  \n  \n    I think it is important to implement RAP in my work \n    7.1% \n    3.6% \n    10.7% \n    28.6% \n    50% \n  \n  \n    I understand what the key components of the RAP methodology are \n    3.6% \n    21.4% \n    14.3% \n    28.6% \n    32.1% \n  \n\n\n\n Sample size = 28"
  },
  {
    "objectID": "professions/data-engineers.html#rap-scores",
    "href": "professions/data-engineers.html#rap-scores",
    "title": "Profession summary: government data engineers",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    86.7% \n  \n  \n    Version control \n    Basic \n    80% \n  \n  \n    Peer review \n    Basic \n    70% \n  \n  \n    Proportionate QA \n    Basic \n    66.7% \n  \n  \n    Documentation \n    Basic \n    46.7% \n  \n  \n    Team open source code \n    Basic \n    16.7% \n  \n  \n    Functions \n    Advanced \n    83.3% \n  \n  \n    Function documentation \n    Advanced \n    70% \n  \n  \n    Dependency management \n    Advanced \n    66.7% \n  \n  \n    Unit testing \n    Advanced \n    63.3% \n  \n  \n    Follow code style guidelines \n    Advanced \n    63.3% \n  \n  \n    Continuous integration \n    Advanced \n    53.3% \n  \n  \n    Code packages \n    Advanced \n    40% \n  \n\n\n\n Sample size = 30"
  },
  {
    "objectID": "professions/data-scientists.html#how-to-use-this-research",
    "href": "professions/data-scientists.html#how-to-use-this-research",
    "title": "Profession summary: government data scientists",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/data-scientists.html#coding-frequency-and-tools",
    "href": "professions/data-scientists.html#coding-frequency-and-tools",
    "title": "Profession summary: government data scientists",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    0.7% \n  \n  \n    Rarely \n    2.1% \n  \n  \n    Sometimes \n    12.5% \n  \n  \n    Regularly \n    29.9% \n  \n  \n    All the time \n    54.9% \n  \n\n\n\n Sample size = 144\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    87.5% \n    6.2% \n    6.2% \n  \n  \n    R \n    97.9% \n    2.1% \n    0% \n  \n  \n    SQL \n    85.4% \n    4.2% \n    10.4% \n  \n  \n    Matlab \n    4.9% \n    55.6% \n    39.6% \n  \n  \n    SAS \n    29.9% \n    36.1% \n    34% \n  \n  \n    SPSS \n    14.6% \n    37.5% \n    47.9% \n  \n  \n    Stata \n    13.9% \n    41% \n    45.1% \n  \n  \n    VBA \n    40.3% \n    24.3% \n    35.4% \n  \n\n\n\n Sample size = 144\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    77.8% \n    14.6% \n    7.6% \n  \n  \n    R \n    84.7% \n    9.7% \n    5.6% \n  \n  \n    SQL \n    79.2% \n    14.6% \n    6.2% \n  \n  \n    Matlab \n    9.7% \n    34.7% \n    55.6% \n  \n  \n    SAS \n    16.7% \n    36.1% \n    47.2% \n  \n  \n    SPSS \n    11.1% \n    36.1% \n    52.8% \n  \n  \n    Stata \n    4.2% \n    35.4% \n    60.4% \n  \n  \n    VBA \n    14.6% \n    32.6% \n    52.8% \n  \n\n\n\n Sample size = 144\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    93.1% \n  \n  \n    No \n    4.9% \n  \n  \n    I don't know \n    2.1% \n  \n\n\n\n Sample size = 144\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    93.1% \n  \n  \n    No \n    6.2% \n  \n  \n    I don't know \n    0.7% \n  \n\n\n\n Sample size = 144"
  },
  {
    "objectID": "professions/data-scientists.html#coding-capability-and-change",
    "href": "professions/data-scientists.html#coding-capability-and-change",
    "title": "Profession summary: government data scientists",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    11.9% \n  \n  \n    Education \n    62.2% \n  \n  \n    Previous private sector employment \n    4.9% \n  \n  \n    Previous public sector employment \n    9.1% \n  \n  \n    Self-taught \n    9.8% \n  \n  \n    Other \n    2.1% \n  \n\n\n\n Sample size = 143\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    1.6% \n  \n  \n    Slightly worse \n    4.8% \n  \n  \n    Stayed the same \n    13.5% \n  \n  \n    Slightly better \n    28.6% \n  \n  \n    Significantly better \n    51.6% \n  \n\n\n\n Sample size = 126"
  },
  {
    "objectID": "professions/data-scientists.html#coding-practices",
    "href": "professions/data-scientists.html#coding-practices",
    "title": "Profession summary: government data scientists",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    4.9% \n    10.5% \n    11.9% \n    24.5% \n    23.8% \n    24.5% \n  \n  \n    Code review \n    0.7% \n    2.8% \n    8.4% \n    23.8% \n    25.9% \n    38.5% \n  \n  \n    Coding guidelines / Style guides \n    2.1% \n    5.6% \n    3.5% \n    18.2% \n    35.7% \n    35% \n  \n  \n    Functions \n    0.7% \n    2.8% \n    2.8% \n    13.3% \n    25.2% \n    55.2% \n  \n  \n    Open source own code \n    6.3% \n    33.6% \n    20.3% \n    16.1% \n    13.3% \n    10.5% \n  \n  \n    Packaging code \n    1.4% \n    28.7% \n    18.9% \n    23.8% \n    10.5% \n    16.8% \n  \n  \n    Proportionate quality assurance \n    8.4% \n    1.4% \n    2.1% \n    9.1% \n    38.5% \n    40.6% \n  \n  \n    Quality assurance throughout development \n    4.9% \n    3.5% \n    4.9% \n    16.1% \n    33.6% \n    37.1% \n  \n  \n    Standard directory structure \n    9.8% \n    10.5% \n    5.6% \n    16.1% \n    26.6% \n    31.5% \n  \n  \n    Unit testing \n    7% \n    10.5% \n    16.8% \n    26.6% \n    19.6% \n    19.6% \n  \n  \n    Use open source software \n    0% \n    0% \n    1.4% \n    3.5% \n    22.4% \n    72.7% \n  \n  \n    Version control \n    1.4% \n    5.6% \n    3.5% \n    9.8% \n    20.3% \n    59.4% \n  \n\n\n\n Sample size = 143\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    12.6% \n    28.7% \n    14% \n    26.6% \n    11.2% \n    7% \n  \n  \n    Code comments \n    0% \n    1.4% \n    0.7% \n    4.2% \n    30.1% \n    63.6% \n  \n  \n    Data or assumptions registers \n    17.5% \n    36.4% \n    19.6% \n    11.2% \n    9.8% \n    5.6% \n  \n  \n    Desk notes \n    21% \n    11.9% \n    13.3% \n    22.4% \n    18.9% \n    12.6% \n  \n  \n    Documentation for each function or class \n    1.4% \n    11.9% \n    7.7% \n    20.3% \n    27.3% \n    31.5% \n  \n  \n    Flow charts \n    4.2% \n    19.6% \n    18.2% \n    31.5% \n    16.1% \n    10.5% \n  \n  \n    README files \n    2.1% \n    13.3% \n    9.1% \n    14.7% \n    27.3% \n    33.6% \n  \n\n\n\n Sample size = 143\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    67.1% \n  \n  \n    No \n    22.4% \n  \n  \n    I don't know what dependency management is \n    10.5% \n  \n\n\n\n Sample size = 143\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    32.9% \n  \n  \n    No \n    46.2% \n  \n  \n    I don't know what continuous integration is \n    21% \n  \n\n\n\n Sample size = 143\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    11.9% \n  \n  \n    No \n    65.7% \n  \n  \n    I don't know what reproducible workflows are \n    22.4% \n  \n\n\n\n Sample size = 143"
  },
  {
    "objectID": "professions/data-scientists.html#reproducible-analytical-pipelines-rap",
    "href": "professions/data-scientists.html#reproducible-analytical-pipelines-rap",
    "title": "Profession summary: government data scientists",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    90.2% \n  \n  \n    No \n    9.8% \n  \n\n\n\n Sample size = 143\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    10.9% \n  \n  \n    Yes, and I know who the RAP Champion is \n    36.4% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    11.6% \n  \n  \n    No \n    7% \n  \n  \n    I don't know \n    34.1% \n  \n\n\n\n Sample size = 129\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    42.6% \n  \n  \n    Yes, but I haven't read it \n    35.7% \n  \n  \n    No \n    21.7% \n  \n\n\n\n Sample size = 129\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    9.3% \n    14% \n    16.3% \n    31.8% \n    28.7% \n  \n  \n    I feel confident implementing RAP in my work \n    6.2% \n    8.5% \n    10.1% \n    41.1% \n    34.1% \n  \n  \n    I feel supported to implement RAP in my work \n    6.2% \n    10.1% \n    18.6% \n    36.4% \n    28.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.4% \n    14% \n    19.4% \n    27.9% \n    33.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    8.5% \n    6.2% \n    18.6% \n    31% \n    35.7% \n  \n  \n    I think it is important to implement RAP in my work \n    3.9% \n    3.1% \n    7% \n    31.8% \n    54.3% \n  \n  \n    I understand what the key components of the RAP methodology are \n    3.1% \n    13.2% \n    9.3% \n    36.4% \n    38% \n  \n\n\n\n Sample size = 129"
  },
  {
    "objectID": "professions/data-scientists.html#rap-scores",
    "href": "professions/data-scientists.html#rap-scores",
    "title": "Profession summary: government data scientists",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    95.1% \n  \n  \n    Version control \n    Basic \n    79.7% \n  \n  \n    Proportionate QA \n    Basic \n    79% \n  \n  \n    Peer review \n    Basic \n    64.3% \n  \n  \n    Documentation \n    Basic \n    58.7% \n  \n  \n    Team open source code \n    Basic \n    23.8% \n  \n  \n    Functions \n    Advanced \n    80.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    70.6% \n  \n  \n    Dependency management \n    Advanced \n    67.1% \n  \n  \n    Function documentation \n    Advanced \n    58.7% \n  \n  \n    Unit testing \n    Advanced \n    39.2% \n  \n  \n    Continuous integration \n    Advanced \n    32.9% \n  \n  \n    Code packages \n    Advanced \n    27.3% \n  \n\n\n\n Sample size = 143"
  },
  {
    "objectID": "professions/digital-and-data.html#how-to-use-this-research",
    "href": "professions/digital-and-data.html#how-to-use-this-research",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/digital-and-data.html#coding-frequency-and-tools",
    "href": "professions/digital-and-data.html#coding-frequency-and-tools",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    3.8% \n  \n  \n    Rarely \n    13.8% \n  \n  \n    Sometimes \n    13.8% \n  \n  \n    Regularly \n    27.5% \n  \n  \n    All the time \n    41.2% \n  \n\n\n\n Sample size = 80\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    83.8% \n    11.2% \n    5% \n  \n  \n    R \n    83.8% \n    11.2% \n    5% \n  \n  \n    SQL \n    80% \n    8.8% \n    11.2% \n  \n  \n    Matlab \n    1.2% \n    52.5% \n    46.2% \n  \n  \n    SAS \n    26.2% \n    31.2% \n    42.5% \n  \n  \n    SPSS \n    12.5% \n    38.8% \n    48.8% \n  \n  \n    Stata \n    8.8% \n    41.2% \n    50% \n  \n  \n    VBA \n    50% \n    16.2% \n    33.8% \n  \n\n\n\n Sample size = 80\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    63.7% \n    15% \n    21.2% \n  \n  \n    R \n    58.8% \n    21.2% \n    20% \n  \n  \n    SQL \n    75% \n    11.2% \n    13.8% \n  \n  \n    Matlab \n    3.8% \n    22.5% \n    73.8% \n  \n  \n    SAS \n    15% \n    20% \n    65% \n  \n  \n    SPSS \n    5% \n    26.2% \n    68.8% \n  \n  \n    Stata \n    0% \n    23.8% \n    76.2% \n  \n  \n    VBA \n    22.5% \n    16.2% \n    61.3% \n  \n\n\n\n Sample size = 80\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    72.5% \n  \n  \n    No \n    12.5% \n  \n  \n    I don't know \n    15% \n  \n\n\n\n Sample size = 80\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    73.8% \n  \n  \n    No \n    21.2% \n  \n  \n    I don't know \n    5% \n  \n\n\n\n Sample size = 80"
  },
  {
    "objectID": "professions/digital-and-data.html#coding-capability-and-change",
    "href": "professions/digital-and-data.html#coding-capability-and-change",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    9.1% \n  \n  \n    Education \n    53.2% \n  \n  \n    Previous private sector employment \n    10.4% \n  \n  \n    Previous public sector employment \n    11.7% \n  \n  \n    Self-taught \n    13% \n  \n  \n    Other \n    2.6% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    4.3% \n  \n  \n    Slightly worse \n    4.3% \n  \n  \n    Stayed the same \n    20% \n  \n  \n    Slightly better \n    31.4% \n  \n  \n    Significantly better \n    40% \n  \n\n\n\n Sample size = 70"
  },
  {
    "objectID": "professions/digital-and-data.html#coding-practices",
    "href": "professions/digital-and-data.html#coding-practices",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    5.2% \n    16.9% \n    11.7% \n    26% \n    16.9% \n    23.4% \n  \n  \n    Code review \n    0% \n    14.3% \n    11.7% \n    20.8% \n    31.2% \n    22.1% \n  \n  \n    Coding guidelines / Style guides \n    1.3% \n    11.7% \n    7.8% \n    22.1% \n    31.2% \n    26% \n  \n  \n    Functions \n    1.3% \n    7.8% \n    3.9% \n    15.6% \n    26% \n    45.5% \n  \n  \n    Open source own code \n    7.8% \n    39% \n    19.5% \n    16.9% \n    13% \n    3.9% \n  \n  \n    Packaging code \n    6.5% \n    45.5% \n    9.1% \n    13% \n    16.9% \n    9.1% \n  \n  \n    Proportionate quality assurance \n    7.8% \n    7.8% \n    3.9% \n    14.3% \n    29.9% \n    36.4% \n  \n  \n    Quality assurance throughout development \n    2.6% \n    10.4% \n    7.8% \n    20.8% \n    29.9% \n    28.6% \n  \n  \n    Standard directory structure \n    10.4% \n    18.2% \n    6.5% \n    22.1% \n    18.2% \n    24.7% \n  \n  \n    Unit testing \n    9.1% \n    19.5% \n    13% \n    26% \n    20.8% \n    11.7% \n  \n  \n    Use open source software \n    1.3% \n    7.8% \n    7.8% \n    10.4% \n    19.5% \n    53.2% \n  \n  \n    Version control \n    1.3% \n    24.7% \n    7.8% \n    6.5% \n    20.8% \n    39% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    15.6% \n    35.1% \n    13% \n    24.7% \n    6.5% \n    5.2% \n  \n  \n    Code comments \n    1.3% \n    6.5% \n    1.3% \n    13% \n    26% \n    51.9% \n  \n  \n    Data or assumptions registers \n    15.6% \n    51.9% \n    15.6% \n    6.5% \n    6.5% \n    3.9% \n  \n  \n    Desk notes \n    10.4% \n    22.1% \n    13% \n    24.7% \n    22.1% \n    7.8% \n  \n  \n    Documentation for each function or class \n    5.2% \n    19.5% \n    11.7% \n    16.9% \n    24.7% \n    22.1% \n  \n  \n    Flow charts \n    3.9% \n    19.5% \n    11.7% \n    36.4% \n    20.8% \n    7.8% \n  \n  \n    README files \n    2.6% \n    20.8% \n    13% \n    15.6% \n    19.5% \n    28.6% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    49.4% \n  \n  \n    No \n    37.7% \n  \n  \n    I don't know what dependency management is \n    13% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    26% \n  \n  \n    No \n    55.8% \n  \n  \n    I don't know what continuous integration is \n    18.2% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    10.4% \n  \n  \n    No \n    67.5% \n  \n  \n    I don't know what reproducible workflows are \n    22.1% \n  \n\n\n\n Sample size = 77"
  },
  {
    "objectID": "professions/digital-and-data.html#reproducible-analytical-pipelines-rap",
    "href": "professions/digital-and-data.html#reproducible-analytical-pipelines-rap",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    77.9% \n  \n  \n    No \n    22.1% \n  \n\n\n\n Sample size = 77\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    8.3% \n  \n  \n    Yes, and I know who the RAP Champion is \n    23.3% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    16.7% \n  \n  \n    No \n    13.3% \n  \n  \n    I don't know \n    38.3% \n  \n\n\n\n Sample size = 60\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    35% \n  \n  \n    Yes, but I haven't read it \n    31.7% \n  \n  \n    No \n    33.3% \n  \n\n\n\n Sample size = 60\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    20% \n    18.3% \n    18.3% \n    20% \n    23.3% \n  \n  \n    I feel confident implementing RAP in my work \n    8.3% \n    21.7% \n    13.3% \n    25% \n    31.7% \n  \n  \n    I feel supported to implement RAP in my work \n    13.3% \n    11.7% \n    26.7% \n    23.3% \n    25% \n  \n  \n    I know where to find resources to help me implement RAP \n    13.3% \n    15% \n    15% \n    28.3% \n    28.3% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    20% \n    3.3% \n    26.7% \n    23.3% \n    26.7% \n  \n  \n    I think it is important to implement RAP in my work \n    8.3% \n    5% \n    13.3% \n    31.7% \n    41.7% \n  \n  \n    I understand what the key components of the RAP methodology are \n    10% \n    10% \n    16.7% \n    30% \n    33.3% \n  \n\n\n\n Sample size = 60"
  },
  {
    "objectID": "professions/digital-and-data.html#rap-scores",
    "href": "professions/digital-and-data.html#rap-scores",
    "title": "Profession summary: digital and data profession (DDAT)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    72.7% \n  \n  \n    Proportionate QA \n    Basic \n    66.2% \n  \n  \n    Version control \n    Basic \n    59.7% \n  \n  \n    Peer review \n    Basic \n    53.2% \n  \n  \n    Documentation \n    Basic \n    42.9% \n  \n  \n    Team open source code \n    Basic \n    16.9% \n  \n  \n    Functions \n    Advanced \n    71.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    57.1% \n  \n  \n    Dependency management \n    Advanced \n    49.4% \n  \n  \n    Function documentation \n    Advanced \n    46.8% \n  \n  \n    Unit testing \n    Advanced \n    32.5% \n  \n  \n    Code packages \n    Advanced \n    26% \n  \n  \n    Continuous integration \n    Advanced \n    26% \n  \n\n\n\n Sample size = 77"
  },
  {
    "objectID": "professions/government-economic-service.html#how-to-use-this-research",
    "href": "professions/government-economic-service.html#how-to-use-this-research",
    "title": "Profession summary: government economic service (GES)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-economic-service.html#coding-frequency-and-tools",
    "href": "professions/government-economic-service.html#coding-frequency-and-tools",
    "title": "Profession summary: government economic service (GES)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    20.2% \n  \n  \n    Rarely \n    21.8% \n  \n  \n    Sometimes \n    29% \n  \n  \n    Regularly \n    17.7% \n  \n  \n    All the time \n    11.3% \n  \n\n\n\n Sample size = 124\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    72.6% \n    8.1% \n    19.4% \n  \n  \n    R \n    95.2% \n    2.4% \n    2.4% \n  \n  \n    SQL \n    55.6% \n    7.3% \n    37.1% \n  \n  \n    Matlab \n    5.6% \n    26.6% \n    67.7% \n  \n  \n    SAS \n    22.6% \n    17.7% \n    59.7% \n  \n  \n    SPSS \n    29.8% \n    15.3% \n    54.8% \n  \n  \n    Stata \n    42.7% \n    19.4% \n    37.9% \n  \n  \n    VBA \n    33.1% \n    14.5% \n    52.4% \n  \n\n\n\n Sample size = 124\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    19.4% \n    47.6% \n    33.1% \n  \n  \n    R \n    58.9% \n    29% \n    12.1% \n  \n  \n    SQL \n    29.8% \n    37.1% \n    33.1% \n  \n  \n    Matlab \n    4.8% \n    41.1% \n    54% \n  \n  \n    SAS \n    9.7% \n    41.1% \n    49.2% \n  \n  \n    SPSS \n    6.5% \n    41.9% \n    51.6% \n  \n  \n    Stata \n    29% \n    32.3% \n    38.7% \n  \n  \n    VBA \n    11.3% \n    40.3% \n    48.4% \n  \n\n\n\n Sample size = 124\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    63.7% \n  \n  \n    No \n    5.6% \n  \n  \n    I don't know \n    30.6% \n  \n\n\n\n Sample size = 124\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    40.3% \n  \n  \n    No \n    55.6% \n  \n  \n    I don't know \n    4% \n  \n\n\n\n Sample size = 124"
  },
  {
    "objectID": "professions/government-economic-service.html#coding-capability-and-change",
    "href": "professions/government-economic-service.html#coding-capability-and-change",
    "title": "Profession summary: government economic service (GES)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    33.3% \n  \n  \n    Education \n    36.4% \n  \n  \n    Previous private sector employment \n    3% \n  \n  \n    Previous public sector employment \n    15.2% \n  \n  \n    Self-taught \n    10.1% \n  \n  \n    Other \n    2% \n  \n\n\n\n Sample size = 99\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    7.6% \n  \n  \n    Slightly worse \n    12.1% \n  \n  \n    Stayed the same \n    19.7% \n  \n  \n    Slightly better \n    34.8% \n  \n  \n    Significantly better \n    25.8% \n  \n\n\n\n Sample size = 66"
  },
  {
    "objectID": "professions/government-economic-service.html#coding-practices",
    "href": "professions/government-economic-service.html#coding-practices",
    "title": "Profession summary: government economic service (GES)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    8.1% \n    30.3% \n    19.2% \n    18.2% \n    21.2% \n    3% \n  \n  \n    Code review \n    3% \n    9.1% \n    12.1% \n    18.2% \n    34.3% \n    23.2% \n  \n  \n    Coding guidelines / Style guides \n    12.1% \n    16.2% \n    8.1% \n    22.2% \n    34.3% \n    7.1% \n  \n  \n    Functions \n    11.1% \n    11.1% \n    12.1% \n    22.2% \n    28.3% \n    15.2% \n  \n  \n    Open source own code \n    33.3% \n    45.5% \n    12.1% \n    5.1% \n    4% \n    0% \n  \n  \n    Packaging code \n    20.2% \n    52.5% \n    12.1% \n    4% \n    9.1% \n    2% \n  \n  \n    Proportionate quality assurance \n    10.1% \n    10.1% \n    2% \n    12.1% \n    43.4% \n    22.2% \n  \n  \n    Quality assurance throughout development \n    10.1% \n    12.1% \n    10.1% \n    12.1% \n    33.3% \n    22.2% \n  \n  \n    Standard directory structure \n    38.4% \n    20.2% \n    10.1% \n    9.1% \n    15.2% \n    7.1% \n  \n  \n    Unit testing \n    44.4% \n    27.3% \n    6.1% \n    11.1% \n    8.1% \n    3% \n  \n  \n    Use open source software \n    2% \n    9.1% \n    12.1% \n    17.2% \n    28.3% \n    31.3% \n  \n  \n    Version control \n    7.1% \n    39.4% \n    11.1% \n    11.1% \n    17.2% \n    14.1% \n  \n\n\n\n Sample size = 99\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    10.1% \n    28.3% \n    13.1% \n    27.3% \n    15.2% \n    6.1% \n  \n  \n    Code comments \n    7.1% \n    8.1% \n    2% \n    7.1% \n    25.3% \n    50.5% \n  \n  \n    Data or assumptions registers \n    16.2% \n    33.3% \n    9.1% \n    18.2% \n    14.1% \n    9.1% \n  \n  \n    Desk notes \n    28.3% \n    25.3% \n    6.1% \n    18.2% \n    12.1% \n    10.1% \n  \n  \n    Documentation for each function or class \n    15.2% \n    34.3% \n    19.2% \n    15.2% \n    11.1% \n    5.1% \n  \n  \n    Flow charts \n    9.1% \n    35.4% \n    22.2% \n    20.2% \n    8.1% \n    5.1% \n  \n  \n    README files \n    11.1% \n    30.3% \n    11.1% \n    24.2% \n    15.2% \n    8.1% \n  \n\n\n\n Sample size = 99\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    14.1% \n  \n  \n    No \n    41.4% \n  \n  \n    I don't know what dependency management is \n    44.4% \n  \n\n\n\n Sample size = 99\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    10.1% \n  \n  \n    No \n    35.4% \n  \n  \n    I don't know what continuous integration is \n    54.5% \n  \n\n\n\n Sample size = 99\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    2% \n  \n  \n    No \n    54.5% \n  \n  \n    I don't know what reproducible workflows are \n    43.4% \n  \n\n\n\n Sample size = 99"
  },
  {
    "objectID": "professions/government-economic-service.html#reproducible-analytical-pipelines-rap",
    "href": "professions/government-economic-service.html#reproducible-analytical-pipelines-rap",
    "title": "Profession summary: government economic service (GES)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    82.8% \n  \n  \n    No \n    17.2% \n  \n\n\n\n Sample size = 99\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    3.7% \n  \n  \n    Yes, and I know who the RAP Champion is \n    35.4% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    19.5% \n  \n  \n    No \n    1.2% \n  \n  \n    I don't know \n    40.2% \n  \n\n\n\n Sample size = 82\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    17.1% \n  \n  \n    Yes, but I haven't read it \n    50% \n  \n  \n    No \n    32.9% \n  \n\n\n\n Sample size = 82\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    26.8% \n    29.3% \n    22% \n    14.6% \n    7.3% \n  \n  \n    I feel confident implementing RAP in my work \n    13.4% \n    19.5% \n    35.4% \n    29.3% \n    2.4% \n  \n  \n    I feel supported to implement RAP in my work \n    7.3% \n    20.7% \n    35.4% \n    30.5% \n    6.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    6.1% \n    20.7% \n    26.8% \n    36.6% \n    9.8% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    11% \n    17.1% \n    28% \n    36.6% \n    7.3% \n  \n  \n    I think it is important to implement RAP in my work \n    4.9% \n    8.5% \n    24.4% \n    39% \n    23.2% \n  \n  \n    I understand what the key components of the RAP methodology are \n    7.3% \n    30.5% \n    18.3% \n    36.6% \n    7.3% \n  \n\n\n\n Sample size = 82"
  },
  {
    "objectID": "professions/government-economic-service.html#rap-scores",
    "href": "professions/government-economic-service.html#rap-scores",
    "title": "Profession summary: government economic service (GES)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Proportionate QA \n    Basic \n    65.7% \n  \n  \n    Use open source software \n    Basic \n    59.6% \n  \n  \n    Peer review \n    Basic \n    57.6% \n  \n  \n    Version control \n    Basic \n    31.3% \n  \n  \n    Documentation \n    Basic \n    21.2% \n  \n  \n    Team open source code \n    Basic \n    4% \n  \n  \n    Functions \n    Advanced \n    43.4% \n  \n  \n    Follow code style guidelines \n    Advanced \n    41.4% \n  \n  \n    Function documentation \n    Advanced \n    16.2% \n  \n  \n    Dependency management \n    Advanced \n    14.1% \n  \n  \n    Unit testing \n    Advanced \n    11.1% \n  \n  \n    Code packages \n    Advanced \n    11.1% \n  \n  \n    Continuous integration \n    Advanced \n    10.1% \n  \n\n\n\n Sample size = 99"
  },
  {
    "objectID": "professions/government-geography.html#how-to-use-this-research",
    "href": "professions/government-geography.html#how-to-use-this-research",
    "title": "Profession summary: government geography profession",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-geography.html#coding-frequency-and-tools",
    "href": "professions/government-geography.html#coding-frequency-and-tools",
    "title": "Profession summary: government geography profession",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    5% \n  \n  \n    Rarely \n    20% \n  \n  \n    Sometimes \n    10% \n  \n  \n    Regularly \n    15% \n  \n  \n    All the time \n    50% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    80% \n    15% \n    5% \n  \n  \n    R \n    100% \n    0% \n    0% \n  \n  \n    SQL \n    80% \n    10% \n    10% \n  \n  \n    Matlab \n    5% \n    30% \n    65% \n  \n  \n    SAS \n    40% \n    30% \n    30% \n  \n  \n    SPSS \n    40% \n    30% \n    30% \n  \n  \n    Stata \n    25% \n    20% \n    55% \n  \n  \n    VBA \n    55% \n    20% \n    25% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    55% \n    30% \n    15% \n  \n  \n    R \n    80% \n    15% \n    5% \n  \n  \n    SQL \n    60% \n    20% \n    20% \n  \n  \n    Matlab \n    10% \n    20% \n    70% \n  \n  \n    SAS \n    20% \n    25% \n    55% \n  \n  \n    SPSS \n    30% \n    25% \n    45% \n  \n  \n    Stata \n    10% \n    35% \n    55% \n  \n  \n    VBA \n    15% \n    30% \n    55% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    70% \n  \n  \n    No \n    10% \n  \n  \n    I don't know \n    20% \n  \n\n\n\n Sample size = 20\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    50% \n  \n  \n    No \n    50% \n  \n  \n    I don't know \n    0% \n  \n\n\n\n Sample size = 20"
  },
  {
    "objectID": "professions/government-geography.html#coding-capability-and-change",
    "href": "professions/government-geography.html#coding-capability-and-change",
    "title": "Profession summary: government geography profession",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    10.5% \n  \n  \n    Education \n    68.4% \n  \n  \n    Previous private sector employment \n    0% \n  \n  \n    Previous public sector employment \n    15.8% \n  \n  \n    Self-taught \n    0% \n  \n  \n    Other \n    5.3% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    11.8% \n  \n  \n    Slightly worse \n    0% \n  \n  \n    Stayed the same \n    23.5% \n  \n  \n    Slightly better \n    35.3% \n  \n  \n    Significantly better \n    29.4% \n  \n\n\n\n Sample size = 17"
  },
  {
    "objectID": "professions/government-geography.html#coding-practices",
    "href": "professions/government-geography.html#coding-practices",
    "title": "Profession summary: government geography profession",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    0% \n    36.8% \n    15.8% \n    21.1% \n    5.3% \n    21.1% \n  \n  \n    Code review \n    0% \n    21.1% \n    5.3% \n    36.8% \n    21.1% \n    15.8% \n  \n  \n    Coding guidelines / Style guides \n    15.8% \n    10.5% \n    26.3% \n    21.1% \n    15.8% \n    10.5% \n  \n  \n    Functions \n    10.5% \n    10.5% \n    10.5% \n    5.3% \n    36.8% \n    26.3% \n  \n  \n    Open source own code \n    15.8% \n    42.1% \n    10.5% \n    15.8% \n    15.8% \n    0% \n  \n  \n    Packaging code \n    21.1% \n    57.9% \n    10.5% \n    5.3% \n    5.3% \n    0% \n  \n  \n    Proportionate quality assurance \n    21.1% \n    5.3% \n    10.5% \n    15.8% \n    15.8% \n    31.6% \n  \n  \n    Quality assurance throughout development \n    10.5% \n    10.5% \n    10.5% \n    10.5% \n    31.6% \n    26.3% \n  \n  \n    Standard directory structure \n    31.6% \n    10.5% \n    15.8% \n    5.3% \n    15.8% \n    21.1% \n  \n  \n    Unit testing \n    42.1% \n    10.5% \n    10.5% \n    26.3% \n    5.3% \n    5.3% \n  \n  \n    Use open source software \n    0% \n    0% \n    21.1% \n    15.8% \n    15.8% \n    47.4% \n  \n  \n    Version control \n    5.3% \n    42.1% \n    5.3% \n    10.5% \n    21.1% \n    15.8% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    26.3% \n    36.8% \n    5.3% \n    26.3% \n    0% \n    5.3% \n  \n  \n    Code comments \n    0% \n    5.3% \n    15.8% \n    5.3% \n    21.1% \n    52.6% \n  \n  \n    Data or assumptions registers \n    21.1% \n    36.8% \n    5.3% \n    26.3% \n    5.3% \n    5.3% \n  \n  \n    Desk notes \n    10.5% \n    21.1% \n    10.5% \n    21.1% \n    21.1% \n    15.8% \n  \n  \n    Documentation for each function or class \n    10.5% \n    36.8% \n    10.5% \n    5.3% \n    26.3% \n    10.5% \n  \n  \n    Flow charts \n    10.5% \n    26.3% \n    10.5% \n    36.8% \n    10.5% \n    5.3% \n  \n  \n    README files \n    5.3% \n    31.6% \n    10.5% \n    21.1% \n    15.8% \n    15.8% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    26.3% \n  \n  \n    No \n    42.1% \n  \n  \n    I don't know what dependency management is \n    31.6% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    57.9% \n  \n  \n    I don't know what continuous integration is \n    42.1% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    0% \n  \n  \n    No \n    73.7% \n  \n  \n    I don't know what reproducible workflows are \n    26.3% \n  \n\n\n\n Sample size = 19"
  },
  {
    "objectID": "professions/government-geography.html#reproducible-analytical-pipelines-rap",
    "href": "professions/government-geography.html#reproducible-analytical-pipelines-rap",
    "title": "Profession summary: government geography profession",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    94.7% \n  \n  \n    No \n    5.3% \n  \n\n\n\n Sample size = 19\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    0% \n  \n  \n    Yes, and I know who the RAP Champion is \n    27.8% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    22.2% \n  \n  \n    No \n    0% \n  \n  \n    I don't know \n    50% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    33.3% \n  \n  \n    Yes, but I haven't read it \n    38.9% \n  \n  \n    No \n    27.8% \n  \n\n\n\n Sample size = 18\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    22.2% \n    22.2% \n    22.2% \n    22.2% \n    11.1% \n  \n  \n    I feel confident implementing RAP in my work \n    5.6% \n    16.7% \n    33.3% \n    27.8% \n    16.7% \n  \n  \n    I feel supported to implement RAP in my work \n    5.6% \n    11.1% \n    27.8% \n    44.4% \n    11.1% \n  \n  \n    I know where to find resources to help me implement RAP \n    5.6% \n    16.7% \n    27.8% \n    38.9% \n    11.1% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    11.1% \n    22.2% \n    16.7% \n    33.3% \n    16.7% \n  \n  \n    I think it is important to implement RAP in my work \n    0% \n    5.6% \n    11.1% \n    66.7% \n    16.7% \n  \n  \n    I understand what the key components of the RAP methodology are \n    5.6% \n    16.7% \n    11.1% \n    50% \n    16.7% \n  \n\n\n\n Sample size = 18"
  },
  {
    "objectID": "professions/government-geography.html#rap-scores",
    "href": "professions/government-geography.html#rap-scores",
    "title": "Profession summary: government geography profession",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    63.2% \n  \n  \n    Proportionate QA \n    Basic \n    47.4% \n  \n  \n    Version control \n    Basic \n    36.8% \n  \n  \n    Peer review \n    Basic \n    36.8% \n  \n  \n    Documentation \n    Basic \n    26.3% \n  \n  \n    Team open source code \n    Basic \n    15.8% \n  \n  \n    Functions \n    Advanced \n    63.2% \n  \n  \n    Function documentation \n    Advanced \n    36.8% \n  \n  \n    Follow code style guidelines \n    Advanced \n    26.3% \n  \n  \n    Dependency management \n    Advanced \n    26.3% \n  \n  \n    Unit testing \n    Advanced \n    10.5% \n  \n  \n    Code packages \n    Advanced \n    5.3% \n  \n  \n    Continuous integration \n    Advanced \n    0% \n  \n\n\n\n Sample size = 19"
  },
  {
    "objectID": "professions/government-operational-research.html#how-to-use-this-research",
    "href": "professions/government-operational-research.html#how-to-use-this-research",
    "title": "Profession summary: government operational research (GORS)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-operational-research.html#coding-frequency-and-tools",
    "href": "professions/government-operational-research.html#coding-frequency-and-tools",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    2.8% \n  \n  \n    Rarely \n    12.1% \n  \n  \n    Sometimes \n    19.9% \n  \n  \n    Regularly \n    32.6% \n  \n  \n    All the time \n    32.6% \n  \n\n\n\n Sample size = 141\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    83% \n    10.6% \n    6.4% \n  \n  \n    R \n    97.2% \n    2.1% \n    0.7% \n  \n  \n    SQL \n    80.1% \n    7.8% \n    12.1% \n  \n  \n    Matlab \n    3.5% \n    59.6% \n    36.9% \n  \n  \n    SAS \n    33.3% \n    26.2% \n    40.4% \n  \n  \n    SPSS \n    19.9% \n    31.9% \n    48.2% \n  \n  \n    Stata \n    16.3% \n    33.3% \n    50.4% \n  \n  \n    VBA \n    69.5% \n    8.5% \n    22% \n  \n\n\n\n Sample size = 141\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    53.9% \n    26.2% \n    19.9% \n  \n  \n    R \n    86.5% \n    9.2% \n    4.3% \n  \n  \n    SQL \n    62.4% \n    20.6% \n    17% \n  \n  \n    Matlab \n    15.6% \n    22% \n    62.4% \n  \n  \n    SAS \n    24.1% \n    23.4% \n    52.5% \n  \n  \n    SPSS \n    9.2% \n    27% \n    63.8% \n  \n  \n    Stata \n    1.4% \n    31.2% \n    67.4% \n  \n  \n    VBA \n    36.2% \n    23.4% \n    40.4% \n  \n\n\n\n Sample size = 141\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    83.7% \n  \n  \n    No \n    7.8% \n  \n  \n    I don't know \n    8.5% \n  \n\n\n\n Sample size = 141\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    78% \n  \n  \n    No \n    19.9% \n  \n  \n    I don't know \n    2.1% \n  \n\n\n\n Sample size = 141"
  },
  {
    "objectID": "professions/government-operational-research.html#coding-capability-and-change",
    "href": "professions/government-operational-research.html#coding-capability-and-change",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    11.7% \n  \n  \n    Education \n    67.2% \n  \n  \n    Previous private sector employment \n    5.1% \n  \n  \n    Previous public sector employment \n    7.3% \n  \n  \n    Self-taught \n    8% \n  \n  \n    Other \n    0.7% \n  \n\n\n\n Sample size = 137\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    3.3% \n  \n  \n    Slightly worse \n    11.6% \n  \n  \n    Stayed the same \n    12.4% \n  \n  \n    Slightly better \n    34.7% \n  \n  \n    Significantly better \n    38% \n  \n\n\n\n Sample size = 121"
  },
  {
    "objectID": "professions/government-operational-research.html#coding-practices",
    "href": "professions/government-operational-research.html#coding-practices",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    2.9% \n    10.2% \n    21.9% \n    30.7% \n    21.9% \n    12.4% \n  \n  \n    Code review \n    0% \n    4.4% \n    4.4% \n    27% \n    34.3% \n    29.9% \n  \n  \n    Coding guidelines / Style guides \n    4.4% \n    7.3% \n    8.8% \n    21.2% \n    37.2% \n    21.2% \n  \n  \n    Functions \n    1.5% \n    3.6% \n    6.6% \n    13.1% \n    39.4% \n    35.8% \n  \n  \n    Open source own code \n    12.4% \n    46% \n    19% \n    13.1% \n    3.6% \n    5.8% \n  \n  \n    Packaging code \n    6.6% \n    46.7% \n    21.9% \n    15.3% \n    6.6% \n    2.9% \n  \n  \n    Proportionate quality assurance \n    2.9% \n    0.7% \n    5.1% \n    15.3% \n    30.7% \n    45.3% \n  \n  \n    Quality assurance throughout development \n    2.9% \n    0.7% \n    8.8% \n    19.7% \n    32.8% \n    35% \n  \n  \n    Standard directory structure \n    24.1% \n    13.1% \n    5.8% \n    22.6% \n    19% \n    15.3% \n  \n  \n    Unit testing \n    21.2% \n    13.1% \n    12.4% \n    29.9% \n    14.6% \n    8.8% \n  \n  \n    Use open source software \n    0% \n    4.4% \n    7.3% \n    10.9% \n    24.8% \n    52.6% \n  \n  \n    Version control \n    2.2% \n    19.7% \n    10.2% \n    19% \n    19% \n    29.9% \n  \n\n\n\n Sample size = 137\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    4.4% \n    15.3% \n    11.7% \n    29.9% \n    26.3% \n    12.4% \n  \n  \n    Code comments \n    0.7% \n    0.7% \n    0.7% \n    8% \n    21.9% \n    67.9% \n  \n  \n    Data or assumptions registers \n    6.6% \n    19.7% \n    16.1% \n    19% \n    23.4% \n    15.3% \n  \n  \n    Desk notes \n    24.8% \n    15.3% \n    10.9% \n    19% \n    20.4% \n    9.5% \n  \n  \n    Documentation for each function or class \n    2.9% \n    15.3% \n    18.2% \n    22.6% \n    23.4% \n    17.5% \n  \n  \n    Flow charts \n    0.7% \n    14.6% \n    26.3% \n    33.6% \n    16.1% \n    8.8% \n  \n  \n    README files \n    1.5% \n    21.2% \n    13.1% \n    27% \n    19.7% \n    17.5% \n  \n\n\n\n Sample size = 137\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    33.6% \n  \n  \n    No \n    35.8% \n  \n  \n    I don't know what dependency management is \n    30.7% \n  \n\n\n\n Sample size = 137\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    18.2% \n  \n  \n    No \n    31.4% \n  \n  \n    I don't know what continuous integration is \n    50.4% \n  \n\n\n\n Sample size = 137\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    6.6% \n  \n  \n    No \n    62% \n  \n  \n    I don't know what reproducible workflows are \n    31.4% \n  \n\n\n\n Sample size = 137"
  },
  {
    "objectID": "professions/government-operational-research.html#reproducible-analytical-pipelines-rap",
    "href": "professions/government-operational-research.html#reproducible-analytical-pipelines-rap",
    "title": "Profession summary: government operational research (GORS)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    95.6% \n  \n  \n    No \n    4.4% \n  \n\n\n\n Sample size = 137\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    3.1% \n  \n  \n    Yes, and I know who the RAP Champion is \n    36.6% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    16.8% \n  \n  \n    No \n    7.6% \n  \n  \n    I don't know \n    35.9% \n  \n\n\n\n Sample size = 131\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    23.7% \n  \n  \n    Yes, but I haven't read it \n    48.1% \n  \n  \n    No \n    28.2% \n  \n\n\n\n Sample size = 131\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    16% \n    24.4% \n    22.9% \n    26.7% \n    9.9% \n  \n  \n    I feel confident implementing RAP in my work \n    6.1% \n    16% \n    24.4% \n    36.6% \n    16.8% \n  \n  \n    I feel supported to implement RAP in my work \n    5.3% \n    15.3% \n    25.2% \n    38.9% \n    15.3% \n  \n  \n    I know where to find resources to help me implement RAP \n    4.6% \n    20.6% \n    22.1% \n    35.1% \n    17.6% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    7.6% \n    13% \n    29.8% \n    35.1% \n    14.5% \n  \n  \n    I think it is important to implement RAP in my work \n    4.6% \n    4.6% \n    16.8% \n    43.5% \n    30.5% \n  \n  \n    I understand what the key components of the RAP methodology are \n    3.8% \n    17.6% \n    19.8% \n    38.9% \n    19.8% \n  \n\n\n\n Sample size = 131"
  },
  {
    "objectID": "professions/government-operational-research.html#rap-scores",
    "href": "professions/government-operational-research.html#rap-scores",
    "title": "Profession summary: government operational research (GORS)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    77.4% \n  \n  \n    Proportionate QA \n    Basic \n    75.9% \n  \n  \n    Peer review \n    Basic \n    64.2% \n  \n  \n    Version control \n    Basic \n    48.9% \n  \n  \n    Documentation \n    Basic \n    35% \n  \n  \n    Team open source code \n    Basic \n    9.5% \n  \n  \n    Functions \n    Advanced \n    75.2% \n  \n  \n    Follow code style guidelines \n    Advanced \n    58.4% \n  \n  \n    Function documentation \n    Advanced \n    40.9% \n  \n  \n    Dependency management \n    Advanced \n    33.6% \n  \n  \n    Unit testing \n    Advanced \n    23.4% \n  \n  \n    Continuous integration \n    Advanced \n    18.2% \n  \n  \n    Code packages \n    Advanced \n    9.5% \n  \n\n\n\n Sample size = 137"
  },
  {
    "objectID": "professions/government-social-research.html#how-to-use-this-research",
    "href": "professions/government-social-research.html#how-to-use-this-research",
    "title": "Profession summary: government social research (GSR)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-social-research.html#coding-frequency-and-tools",
    "href": "professions/government-social-research.html#coding-frequency-and-tools",
    "title": "Profession summary: government social research (GSR)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    31.9% \n  \n  \n    Rarely \n    20.7% \n  \n  \n    Sometimes \n    15.9% \n  \n  \n    Regularly \n    19.8% \n  \n  \n    All the time \n    11.6% \n  \n\n\n\n Sample size = 232\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    71.1% \n    6.9% \n    22% \n  \n  \n    R \n    91.4% \n    3.4% \n    5.2% \n  \n  \n    SQL \n    43.1% \n    9.9% \n    47% \n  \n  \n    Matlab \n    4.3% \n    23.7% \n    72% \n  \n  \n    SAS \n    24.1% \n    28% \n    47.8% \n  \n  \n    SPSS \n    52.2% \n    22% \n    25.9% \n  \n  \n    Stata \n    15.5% \n    24.6% \n    59.9% \n  \n  \n    VBA \n    16.4% \n    17.2% \n    66.4% \n  \n\n\n\n Sample size = 232\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    23.7% \n    41.8% \n    34.5% \n  \n  \n    R \n    41.4% \n    36.6% \n    22% \n  \n  \n    SQL \n    19% \n    36.6% \n    44.4% \n  \n  \n    Matlab \n    0.9% \n    34.5% \n    64.7% \n  \n  \n    SAS \n    12.5% \n    33.2% \n    54.3% \n  \n  \n    SPSS \n    40.5% \n    21.6% \n    37.9% \n  \n  \n    Stata \n    9.5% \n    31.5% \n    59.1% \n  \n  \n    VBA \n    3.4% \n    33.6% \n    62.9% \n  \n\n\n\n Sample size = 232\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    62.1% \n  \n  \n    No \n    3.9% \n  \n  \n    I don't know \n    34.1% \n  \n\n\n\n Sample size = 232\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    42.2% \n  \n  \n    No \n    53% \n  \n  \n    I don't know \n    4.7% \n  \n\n\n\n Sample size = 232"
  },
  {
    "objectID": "professions/government-social-research.html#coding-capability-and-change",
    "href": "professions/government-social-research.html#coding-capability-and-change",
    "title": "Profession summary: government social research (GSR)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    44.9% \n  \n  \n    Education \n    39.2% \n  \n  \n    Previous private sector employment \n    3.2% \n  \n  \n    Previous public sector employment \n    8.9% \n  \n  \n    Self-taught \n    2.5% \n  \n  \n    Other \n    1.3% \n  \n\n\n\n Sample size = 158\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    10.3% \n  \n  \n    Slightly worse \n    10.3% \n  \n  \n    Stayed the same \n    16.1% \n  \n  \n    Slightly better \n    29.9% \n  \n  \n    Significantly better \n    33.3% \n  \n\n\n\n Sample size = 87"
  },
  {
    "objectID": "professions/government-social-research.html#coding-practices",
    "href": "professions/government-social-research.html#coding-practices",
    "title": "Profession summary: government social research (GSR)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    8.9% \n    36.1% \n    14.6% \n    23.4% \n    12% \n    5.1% \n  \n  \n    Code review \n    2.5% \n    9.5% \n    9.5% \n    26.6% \n    29.7% \n    22.2% \n  \n  \n    Coding guidelines / Style guides \n    10.1% \n    12.7% \n    13.9% \n    25.3% \n    29.7% \n    8.2% \n  \n  \n    Functions \n    11.4% \n    15.8% \n    16.5% \n    27.2% \n    22.8% \n    6.3% \n  \n  \n    Open source own code \n    30.4% \n    43% \n    9.5% \n    8.9% \n    5.1% \n    3.2% \n  \n  \n    Packaging code \n    21.5% \n    57% \n    13.3% \n    4.4% \n    3.2% \n    0.6% \n  \n  \n    Proportionate quality assurance \n    15.8% \n    11.4% \n    5.7% \n    10.8% \n    33.5% \n    22.8% \n  \n  \n    Quality assurance throughout development \n    10.1% \n    13.9% \n    5.7% \n    19% \n    32.9% \n    18.4% \n  \n  \n    Standard directory structure \n    35.4% \n    20.9% \n    9.5% \n    13.9% \n    12% \n    8.2% \n  \n  \n    Unit testing \n    38% \n    29.7% \n    12% \n    8.2% \n    9.5% \n    2.5% \n  \n  \n    Use open source software \n    5.7% \n    7% \n    14.6% \n    17.7% \n    25.9% \n    29.1% \n  \n  \n    Version control \n    11.4% \n    28.5% \n    12.7% \n    19.6% \n    16.5% \n    11.4% \n  \n\n\n\n Sample size = 158\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    30.4% \n    38% \n    7% \n    12.7% \n    7.6% \n    4.4% \n  \n  \n    Code comments \n    6.3% \n    9.5% \n    4.4% \n    8.2% \n    27.2% \n    44.3% \n  \n  \n    Data or assumptions registers \n    25.3% \n    35.4% \n    5.1% \n    12% \n    12% \n    10.1% \n  \n  \n    Desk notes \n    17.1% \n    25.9% \n    10.1% \n    22.8% \n    15.2% \n    8.9% \n  \n  \n    Documentation for each function or class \n    19% \n    34.2% \n    15.8% \n    13.9% \n    10.8% \n    6.3% \n  \n  \n    Flow charts \n    12.7% \n    42.4% \n    12% \n    19% \n    10.8% \n    3.2% \n  \n  \n    README files \n    13.9% \n    40.5% \n    13.3% \n    19% \n    8.9% \n    4.4% \n  \n\n\n\n Sample size = 158\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    10.1% \n  \n  \n    No \n    27.8% \n  \n  \n    I don't know what dependency management is \n    62% \n  \n\n\n\n Sample size = 158\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    13.3% \n  \n  \n    No \n    30.4% \n  \n  \n    I don't know what continuous integration is \n    56.3% \n  \n\n\n\n Sample size = 158\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    3.8% \n  \n  \n    No \n    41.8% \n  \n  \n    I don't know what reproducible workflows are \n    54.4% \n  \n\n\n\n Sample size = 158"
  },
  {
    "objectID": "professions/government-social-research.html#reproducible-analytical-pipelines-rap",
    "href": "professions/government-social-research.html#reproducible-analytical-pipelines-rap",
    "title": "Profession summary: government social research (GSR)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    88% \n  \n  \n    No \n    12% \n  \n\n\n\n Sample size = 158\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    0.7% \n  \n  \n    Yes, and I know who the RAP Champion is \n    18.7% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    22.3% \n  \n  \n    No \n    2.9% \n  \n  \n    I don't know \n    55.4% \n  \n\n\n\n Sample size = 139\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    23.7% \n  \n  \n    Yes, but I haven't read it \n    37.4% \n  \n  \n    No \n    38.8% \n  \n\n\n\n Sample size = 139\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    18% \n    28.8% \n    25.2% \n    19.4% \n    8.6% \n  \n  \n    I feel confident implementing RAP in my work \n    15.1% \n    30.9% \n    26.6% \n    22.3% \n    5% \n  \n  \n    I feel supported to implement RAP in my work \n    14.4% \n    15.1% \n    33.1% \n    30.9% \n    6.5% \n  \n  \n    I know where to find resources to help me implement RAP \n    14.4% \n    18.7% \n    19.4% \n    41% \n    6.5% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    10.8% \n    17.3% \n    27.3% \n    31.7% \n    12.9% \n  \n  \n    I think it is important to implement RAP in my work \n    2.9% \n    6.5% \n    24.5% \n    39.6% \n    26.6% \n  \n  \n    I understand what the key components of the RAP methodology are \n    11.5% \n    25.9% \n    17.3% \n    38.8% \n    6.5% \n  \n\n\n\n Sample size = 139"
  },
  {
    "objectID": "professions/government-social-research.html#rap-scores",
    "href": "professions/government-social-research.html#rap-scores",
    "title": "Profession summary: government social research (GSR)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Proportionate QA \n    Basic \n    56.3% \n  \n  \n    Use open source software \n    Basic \n    55.1% \n  \n  \n    Peer review \n    Basic \n    51.9% \n  \n  \n    Version control \n    Basic \n    27.8% \n  \n  \n    Documentation \n    Basic \n    12.7% \n  \n  \n    Team open source code \n    Basic \n    8.2% \n  \n  \n    Follow code style guidelines \n    Advanced \n    38% \n  \n  \n    Functions \n    Advanced \n    29.1% \n  \n  \n    Function documentation \n    Advanced \n    17.1% \n  \n  \n    Continuous integration \n    Advanced \n    13.3% \n  \n  \n    Unit testing \n    Advanced \n    12% \n  \n  \n    Dependency management \n    Advanced \n    10.1% \n  \n  \n    Code packages \n    Advanced \n    3.8% \n  \n\n\n\n Sample size = 158"
  },
  {
    "objectID": "professions/government-statistician-group.html#how-to-use-this-research",
    "href": "professions/government-statistician-group.html#how-to-use-this-research",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "professions/government-statistician-group.html#coding-frequency-and-tools",
    "href": "professions/government-statistician-group.html#coding-frequency-and-tools",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\n\nHow often analysts are using code at work\nWe asked respondents “In your current role, how often do you write code to complete your work objectives?”\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Coding frequency \n    Percent \n  \n \n\n  \n    Never \n    7.3% \n  \n  \n    Rarely \n    9.5% \n  \n  \n    Sometimes \n    20.4% \n  \n  \n    Regularly \n    32.8% \n  \n  \n    All the time \n    29.9% \n  \n\n\n\n Sample size = 411\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Don't Know \n  \n \n\n  \n    Python \n    71% \n    16.1% \n    12.9% \n  \n  \n    R \n    97.1% \n    1.9% \n    1% \n  \n  \n    SQL \n    73.7% \n    9.2% \n    17% \n  \n  \n    Matlab \n    2.4% \n    50.1% \n    47.4% \n  \n  \n    SAS \n    39.2% \n    30.7% \n    30.2% \n  \n  \n    SPSS \n    33.8% \n    31.1% \n    35% \n  \n  \n    Stata \n    15.1% \n    35.8% \n    49.1% \n  \n  \n    VBA \n    41.6% \n    19.2% \n    39.2% \n  \n\n\n\n Sample size = 411\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Programming tool \n    Yes \n    No \n    Not required for my work \n  \n \n\n  \n    Python \n    35% \n    32.8% \n    32.1% \n  \n  \n    R \n    75.4% \n    17.3% \n    7.3% \n  \n  \n    SQL \n    56.7% \n    22.6% \n    20.7% \n  \n  \n    Matlab \n    7.8% \n    24.3% \n    67.9% \n  \n  \n    SAS \n    21.7% \n    27.3% \n    51.1% \n  \n  \n    SPSS \n    23.6% \n    20.9% \n    55.5% \n  \n  \n    Stata \n    8% \n    25.5% \n    66.4% \n  \n  \n    VBA \n    9% \n    36.3% \n    54.7% \n  \n\n\n\n Sample size = 411\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    82% \n  \n  \n    No \n    5.1% \n  \n  \n    I don't know \n    12.9% \n  \n\n\n\n Sample size = 411\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Response \n    Percent \n  \n \n\n  \n    Yes \n    60.3% \n  \n  \n    No \n    36.7% \n  \n  \n    I don't know \n    2.9% \n  \n\n\n\n Sample size = 411"
  },
  {
    "objectID": "professions/government-statistician-group.html#coding-capability-and-change",
    "href": "professions/government-statistician-group.html#coding-capability-and-change",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Where learned \n    Percent \n  \n \n\n  \n    Current employment \n    20.7% \n  \n  \n    Education \n    56.7% \n  \n  \n    Previous private sector employment \n    3.9% \n  \n  \n    Previous public sector employment \n    12.1% \n  \n  \n    Self-taught \n    4.7% \n  \n  \n    Other \n    1.8% \n  \n\n\n\n Sample size = 381\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Ability change \n    Percent \n  \n \n\n  \n    Significantly worse \n    2.6% \n  \n  \n    Slightly worse \n    6.6% \n  \n  \n    Stayed the same \n    11.6% \n  \n  \n    Slightly better \n    37.4% \n  \n  \n    Significantly better \n    41.7% \n  \n\n\n\n Sample size = 302"
  },
  {
    "objectID": "professions/government-statistician-group.html#coding-practices",
    "href": "professions/government-statistician-group.html#coding-practices",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "Coding practices",
    "text": "Coding practices\nWe asked respondents who said they currently use code in their work, how often they carry out various coding practices. For more information on the practices presented below, please read our guidance on Quality Assurance of Code for Analysis and Research\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\nConsistency of good coding practices\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Automated data quality assurance \n    2.6% \n    16.8% \n    13.4% \n    29.9% \n    23.1% \n    14.2% \n  \n  \n    Code review \n    0.5% \n    5.2% \n    9.4% \n    27.3% \n    33.9% \n    23.6% \n  \n  \n    Coding guidelines / Style guides \n    5.8% \n    9.2% \n    8.9% \n    22.8% \n    31.2% \n    22% \n  \n  \n    Functions \n    4.5% \n    7.6% \n    10.8% \n    19.9% \n    29.1% \n    28.1% \n  \n  \n    Open source own code \n    14.7% \n    46.5% \n    14.7% \n    11% \n    6.3% \n    6.8% \n  \n  \n    Packaging code \n    11% \n    50.9% \n    12.9% \n    11.8% \n    8.7% \n    4.7% \n  \n  \n    Proportionate quality assurance \n    8.1% \n    5% \n    3.4% \n    12.3% \n    39.6% \n    31.5% \n  \n  \n    Quality assurance throughout development \n    3.7% \n    6.3% \n    5.2% \n    16.8% \n    40.9% \n    27% \n  \n  \n    Standard directory structure \n    23.4% \n    15.2% \n    9.7% \n    14.7% \n    20.5% \n    16.5% \n  \n  \n    Unit testing \n    24.9% \n    19.2% \n    15.5% \n    17.8% \n    13.9% \n    8.7% \n  \n  \n    Use open source software \n    1% \n    6.3% \n    7.6% \n    12.1% \n    22.8% \n    50.1% \n  \n  \n    Version control \n    3.9% \n    28.9% \n    10% \n    11.5% \n    18.6% \n    27% \n  \n\n\n\n Sample size = 381\n\n\n\n\n\n\n\n\n\nDocumentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    I don't understand this question (%) \n    Never (%) \n    Rarely (%) \n    Sometimes (%) \n    Regularly (%) \n    All the time (%) \n  \n \n\n  \n    Analytical Quality Assurance (AQA) logs \n    18.9% \n    30.4% \n    15.2% \n    17.8% \n    11.8% \n    5.8% \n  \n  \n    Code comments \n    1% \n    2.9% \n    1.8% \n    8.1% \n    27.8% \n    58.3% \n  \n  \n    Data or assumptions registers \n    15.5% \n    35.4% \n    15.7% \n    14.4% \n    11% \n    7.9% \n  \n  \n    Desk notes \n    11.3% \n    14.4% \n    8.9% \n    25.7% \n    27.6% \n    12.1% \n  \n  \n    Documentation for each function or class \n    8.4% \n    21.5% \n    14.2% \n    22.8% \n    18.6% \n    14.4% \n  \n  \n    Flow charts \n    3.9% \n    28.6% \n    20.7% \n    28.6% \n    12.9% \n    5.2% \n  \n  \n    README files \n    4.5% \n    23.9% \n    13.9% \n    23.9% \n    20.5% \n    13.4% \n  \n\n\n\n Sample size = 381\n\n\n\n\n\n\n\n\n\nDependency Management\nWe asked respondents who reported writing code at work if they manage dependencies for their projects.\nWe provided examples of tools that may be used for dependency management:\n\nRequirements files, e.g. python requirements.txt or R DESCRIPTION files\n\nVirtual environments (e.g. venv or renv) or virtual machines\n\nContainers e.g. Docker\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use dependency management software \n    Percent \n  \n \n\n  \n    Yes \n    29.9% \n  \n  \n    No \n    36.5% \n  \n  \n    I don't know what dependency management is \n    33.6% \n  \n\n\n\n Sample size = 381\n\n\n\n\n\n\n\n\n\nContinuous integration\nWe asked respondents who reported writing code at work if they use continuous integration.\nWe provided some examples of continuous integration technologies:\n\nGitHub actions\n\nJenkins\n\nTravis\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use continuous integration \n    Percent \n  \n \n\n  \n    Yes \n    17.1% \n  \n  \n    No \n    39.6% \n  \n  \n    I don't know what continuous integration is \n    43.3% \n  \n\n\n\n Sample size = 381\n\n\n\n\n\n\n\n\n\nReproducible workflow packages\nWe asked respondents who reported writing code at work whether they use reproducible workflow packages.\nWe provided some examples of packages:\n\ndrake\n\nmake\n\npymake\ntargets\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Use reproducible workflow packages \n    Percent \n  \n \n\n  \n    Yes \n    3.9% \n  \n  \n    No \n    59.3% \n  \n  \n    I don't know what reproducible workflows are \n    36.7% \n  \n\n\n\n Sample size = 381"
  },
  {
    "objectID": "professions/government-statistician-group.html#reproducible-analytical-pipelines-rap",
    "href": "professions/government-statistician-group.html#reproducible-analytical-pipelines-rap",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nWe asked respondents about their knowledge of and opinions on reproducible analytical pipelines (RAP). RAP refers to the use of practices from software engineering to make analysis more reproducible. These practices build on the advantages of writing analysis as code by ensuring increased quality, trust, efficiency, business continuity and knowledge management.\nThe RAP champions are a network of analysts across government who promote and support RAP development in their departments. Please contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\nKnowledge of RAP\nWe asked respondents who reported writing code at work, if they had heard of RAP.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes \n    95.8% \n  \n  \n    No \n    4.2% \n  \n\n\n\n Sample size = 381\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Knowledge \n    Percent \n  \n \n\n  \n    Yes, and I am a RAP Champion \n    7.9% \n  \n  \n    Yes, and I know who the RAP Champion is \n    40.8% \n  \n  \n    Yes, but I don't know who the RAP Champion is \n    17.3% \n  \n  \n    No \n    2.7% \n  \n  \n    I don't know \n    31.2% \n  \n\n\n\n Sample size = 365\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP strategy knowledge \n    Percent \n  \n \n\n  \n    Yes \n    39.7% \n  \n  \n    Yes, but I haven't read it \n    41.4% \n  \n  \n    No \n    18.9% \n  \n\n\n\n Sample size = 365\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    Statement \n    Strongly Disagree (%) \n    Disagree (%) \n    Neutral (%) \n    Agree (%) \n    Strongly Agree (%) \n  \n \n\n  \n    I and/or my team are currently implementing RAP \n    9% \n    19.5% \n    15.3% \n    29.9% \n    26.3% \n  \n  \n    I feel confident implementing RAP in my work \n    4.9% \n    16.4% \n    15.6% \n    39.7% \n    23.3% \n  \n  \n    I feel supported to implement RAP in my work \n    4.7% \n    13.7% \n    18.1% \n    38.9% \n    24.7% \n  \n  \n    I know where to find resources to help me implement RAP \n    4.1% \n    13.7% \n    18.4% \n    40% \n    23.8% \n  \n  \n    I or my team are planning on implementing RAP in the next 12 months \n    3.3% \n    9.9% \n    22.5% \n    32.9% \n    31.5% \n  \n  \n    I think it is important to implement RAP in my work \n    1.6% \n    7.1% \n    9.9% \n    36.4% \n    44.9% \n  \n  \n    I understand what the key components of the RAP methodology are \n    3.8% \n    13.2% \n    14% \n    44.4% \n    24.7% \n  \n\n\n\n Sample size = 365"
  },
  {
    "objectID": "professions/government-statistician-group.html#rap-scores",
    "href": "professions/government-statistician-group.html#rap-scores",
    "title": "Profession summary: government statistician group (GSG)",
    "section": "RAP scores",
    "text": "RAP scores\nIn this section we present RAP components and RAP scores.\nFor each RAP component a percent positive was calculated. Positive responses were recorded where an answer of “regularly” or “all the time” was given. For documentation, a positive response was recorded if both code comments and README files questions received positive responses. For the continuous integration and dependency management components, responses of “yes” were recorded as positive.\n“Basic” components are the components which make up the RAP MVP. “Advanced” components are components which help improve reproducibility, but are not considered part of the minimum standard.\n\nRAP components\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n \n  \n    RAP component \n    Type \n    Percentage of analysts who code in their work \n  \n \n\n  \n    Use open source software \n    Basic \n    73% \n  \n  \n    Proportionate QA \n    Basic \n    71.1% \n  \n  \n    Peer review \n    Basic \n    57.5% \n  \n  \n    Version control \n    Basic \n    45.7% \n  \n  \n    Documentation \n    Basic \n    32.3% \n  \n  \n    Team open source code \n    Basic \n    13.1% \n  \n  \n    Functions \n    Advanced \n    57.2% \n  \n  \n    Follow code style guidelines \n    Advanced \n    53.3% \n  \n  \n    Function documentation \n    Advanced \n    33.1% \n  \n  \n    Dependency management \n    Advanced \n    29.9% \n  \n  \n    Unit testing \n    Advanced \n    22.6% \n  \n  \n    Continuous integration \n    Advanced \n    17.1% \n  \n  \n    Code packages \n    Advanced \n    13.4% \n  \n\n\n\n Sample size = 381"
  },
  {
    "objectID": "professions.html",
    "href": "professions.html",
    "title": "Profession summaries",
    "section": "",
    "text": "Note\n\n\n\nPlease note, these are the initial summary statistics for CARS 2023 and further analysis will follow. We advise linking directly to this document when distributing to ensure the most up to date information.\n\n\nBelow are links to profession-specific reports These contain summary statistics, filtered by profession. Only professions with 20 or more respondents are included.\n\nGovernment data engineers\nGovernment data scientists\nDigital and data profession (DDAT)\nGovernment economic service (GES)\nGovernment geography profession\nGovernment operational research (GORS)\nGovernment social research (GSR)\nGovernment statistician group (GSG)"
  },
  {
    "objectID": "summary.html#how-to-use-this-research",
    "href": "summary.html#how-to-use-this-research",
    "title": "The state of UK public sector analysis code: 2023",
    "section": "How to use this research",
    "text": "How to use this research\nResponding to CARS is voluntary. The results presented here are from a self-selecting sample of government analysts. Because respondents are self-selecting, the results we present reflect the views of the analysts who participated.\nFor more detail, see the data collection page."
  },
  {
    "objectID": "summary.html#coding-frequency-and-tools",
    "href": "summary.html#coding-frequency-and-tools",
    "title": "The state of UK public sector analysis code: 2023",
    "section": "Coding frequency and tools",
    "text": "Coding frequency and tools\nWe asked all respondents “In your current role, how often do you write code to complete your work objectives?”\n\n2023 data\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nIn your current role, how often do you write code to complete your work objectives?\nPercent\n\n\n\n\nNever\n13.3%\n\n\nRarely\n11.7%\n\n\nSometimes\n19.7%\n\n\nRegularly\n27.4%\n\n\nAll the time\n27.9%\n\n\n\n Sample size = 1297\n\n\n\n\n\n\n\n\n\n\n\n\nCoding frequency over time\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nIn your current role, how often do you write code to complete your work objectives?\n2020\n2021\n2022\n2023\n\n\n\n\nNever\n15.1%\n12%\n12.3%\n13.3%\n\n\nRarely\n12.9%\n13%\n10.6%\n11.7%\n\n\nSometimes\n20.4%\n18.4%\n18.2%\n19.7%\n\n\nRegularly\n29.7%\n30.9%\n29%\n27.4%\n\n\nAll the time\n21.9%\n25.7%\n29.9%\n27.9%\n\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of programming languages\nGiven a list of programming tools, we asked all respondents if the tool was available to use for their work.\nAccess to tools does not necessarily refer to official policy. Some analysts may have access to tools others cannot access within the same organisation.\n\n\nAccess to coding tools\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nProgramming tool\nYes\nNo\nDon't know\n\n\n\n\nPython\n74.2%\n12.6%\n13.2%\n\n\nR\n92.1%\n4.9%\n3%\n\n\nSQL\n68.5%\n9%\n22.4%\n\n\nMatlab\n5.1%\n42.9%\n52%\n\n\nSAS\n28.7%\n30.3%\n41%\n\n\nSPSS\n29%\n31.2%\n39.8%\n\n\nStata\n17%\n33.4%\n49.6%\n\n\nVBA\n40.6%\n17.2%\n42.2%\n\n\n\n Sample size = 1297\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the same list of programming tools, all respondents were asked if they knew how to program with the tool to a level suitable for their work, answering “Yes”, “No” or “Not required for my work”.\nPlease note that capability in programming languages is self-reported here and was not objectively defined or tested. The statement “not required for my work” was similarly not defined.\n\n\nKnowledge of coding tools\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nProgramming tool\nYes\nNo\nNot required for my work\n\n\n\n\nPython\n36.6%\n33.9%\n29.5%\n\n\nR\n63.5%\n22.3%\n14.2%\n\n\nSQL\n50.2%\n24.7%\n25.1%\n\n\nMatlab\n7.2%\n27.1%\n65.8%\n\n\nSAS\n16.6%\n28.8%\n54.7%\n\n\nSPSS\n18.8%\n25%\n56.2%\n\n\nStata\n8.4%\n28.1%\n63.5%\n\n\nVBA\n13.9%\n31.8%\n54.4%\n\n\n\n Sample size = 1297\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOpen source capability over time\nThe proportion of respondents who report having the capability to use R and Python, is shown alongside the proportion who are able to use SAS, SPSS or Stata, for the past four years of the survey.\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nProgramming language type\nYear\nKnow how to programme with these tools (percent)\nLower confidence limit (percent)\nUpper confidence limit (percent)\n\n\n\n\nOpen Source\n2020\n69.2%\n66.3%\n71.9%\n\n\nOpen Source\n2021\n77%\n74.1%\n79.6%\n\n\nOpen Source\n2022\n80.3%\n78%\n82.3%\n\n\nOpen Source\n2023\n72.6%\n70.1%\n74.9%\n\n\nProprietary\n2020\n60.5%\n57.5%\n63.4%\n\n\nProprietary\n2021\n60.1%\n56.9%\n63.2%\n\n\nProprietary\n2022\n56.3%\n53.6%\n58.9%\n\n\nProprietary\n2023\n36.1%\n33.5%\n38.7%\n\n\n\n\n\n\n\n\n\n\nProfessions capability in different tools\nDifferences in preferred languages may lead to silos between analytical professions. Here we show the percentage of respondents reporting capability in different tools, within the different analytical professions.\nPlease note that respondents might be members of more than one profession, and may report capability in more than one tool.\n\n\n\n\n\nProfession\nPython\nR\nSQL\nMatlab\nSAS\nSPSS\nStata\nVBA\n\n\n\n\nData engineers\n90%\n46.7%\n86.7%\n13.3%\n20%\n13.3%\n3.3%\n10%\n\n\nData scientists\n77.8%\n84.7%\n79.2%\n9.7%\n16.7%\n11.1%\n4.2%\n14.6%\n\n\nDigital and data (DDAT)\n63.7%\n58.8%\n75%\n3.8%\n15%\n5%\n0%\n22.5%\n\n\nEconomists (GES)\n19.4%\n58.9%\n29.8%\n4.8%\n9.7%\n6.5%\n29%\n11.3%\n\n\nGeographers\n55%\n80%\n60%\n10%\n20%\n30%\n10%\n15%\n\n\nOperational researchers (GORS)\n53.9%\n86.5%\n62.4%\n15.6%\n24.1%\n9.2%\n1.4%\n36.2%\n\n\nSocial researchers (GSR)\n23.7%\n41.4%\n19%\n0.9%\n12.5%\n40.5%\n9.5%\n3.4%\n\n\nStatisticians (GSG)\n35%\n75.4%\n56.7%\n7.8%\n21.7%\n23.6%\n8%\n9%\n\n\n\n\n\n\n\n\n\nAccess to and knowledge of git\nWe asked respondents to answer “Yes”, “No” or “Don’t know” for the following questions:\n\nIs git available to use in your work?\nDo you know how to use git to version-control your work?\n\nPlease note these outputs include people who do not code at work.\n\n\nAccess to git\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nResponse\nPercent\n\n\n\n\nYes\n74.3%\n\n\nNo\n7%\n\n\nI don't know\n18.7%\n\n\n\n Sample size = 1297\n\n\n\n\n\n\n\n\n\n\n\n\nKnowledge of git\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nResponse\nPercent\n\n\n\n\nYes\n59%\n\n\nNo\n37.5%\n\n\nI don't know\n3.5%\n\n\n\n Sample size = 1297"
  },
  {
    "objectID": "summary.html#coding-capability-and-change",
    "href": "summary.html#coding-capability-and-change",
    "title": "The state of UK public sector analysis code: 2023",
    "section": "Coding capability and change",
    "text": "Coding capability and change\n\nWhere respondents first learned to code\nRespondents with coding experience outside their current role were asked where they first learned to code. Those analysts who code in their current role but reported no other coding experience, are included as having learned ‘In current role’. Those who reported first learning to code outside of a work or educational environment were categorised as ‘self-taught’ based on free-text responses.\nThese data only show where people first learned to code. They do not show all the settings in which they had learned to code, to what extent, or how long ago.\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nWhere learned\nPercent\n\n\n\n\nCurrent employment\n23.9%\n\n\nEducation\n52.2%\n\n\nPrevious private sector employment\n4.4%\n\n\nPrevious public sector employment\n10.2%\n\n\nSelf-taught\n7.3%\n\n\nOther\n2%\n\n\n\n Sample size = 1125\n\n\n\n\n\n\n\n\n\n\n\n\nChange in coding ability during current role\nWe asked “Has your coding ability changed during your current role?”\nThis question was only asked of respondents with coding experience outside of their current role. This means analysts who first learned to code in their current role are not included in the data.\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nAbility change\nPercent\n\n\n\n\nSignificantly worse\n3.6%\n\n\nSlightly worse\n8.3%\n\n\nStayed the same\n13.7%\n\n\nSlightly better\n35%\n\n\nSignificantly better\n39.4%\n\n\n\n Sample size = 856"
  },
  {
    "objectID": "summary.html#reproducible-analytical-pipelines-rap",
    "href": "summary.html#reproducible-analytical-pipelines-rap",
    "title": "The state of UK public sector analysis code: 2023",
    "section": "Reproducible analytical pipelines (RAP)",
    "text": "Reproducible analytical pipelines (RAP)\nRAP refers to the use of good software engineering practices to make analysis pipelines more reproducible. This approach aims to use automation to improve the quality and efficiency of analytical processes.\nThe following links contain more resources on RAP:\n\nyou can find minimum RAP standards in the RAP MVP\nyou can find guidance on quality assuring code in the Duck Book\n\n\nAwareness of RAP over time\nWe asked respondents who used coding at work, if they had heard of RAP.\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nYear\nHeard of RAP (percent)\nLower confidence limit\nUpper confidence limit\n\n\n\n\n2020\n68.4%\n65.3%\n71.4%\n\n\n2021\n75.8%\n72.8%\n78.7%\n\n\n2022\n82.1%\n79.8%\n84.2%\n\n\n2023\n88.2%\n86.2%\n89.9%\n\n\n\n\n\n\n\n\n\n\nRAP Champions\nWe asked respondents who had heard of RAP, if their department has a RAP champion and if they know who it is.\nRAP champions support and promote the use of RAP across government.\nPlease contact the analysis standards and pipelines team for any enquiries about RAP or the champions network.\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nKnowledge\nPercent\n\n\n\n\nYes, and I am a RAP Champion\n5%\n\n\nYes, and I know who the RAP Champion is\n31.2%\n\n\nYes, but I don't know who the RAP Champion is\n15.2%\n\n\nNo\n9%\n\n\nI don't know\n39.5%\n\n\n\n Sample size = 992\n\n\n\n\n\n\n\n\n\n\n\n\nAwareness of RAP strategy\nWe asked respondents who had heard of RAP, if they had heard of the RAP strategy.\nThe Analysis Function RAP strategy was released in June 2022 and sets out plans for adopting RAP across government.\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nAwareness of the RAP strategy\nPercent\n\n\n\n\nYes\n29.1%\n\n\nYes, but I haven't read it\n41%\n\n\nNo\n29.8%\n\n\n\n Sample size = 992\n\n\n\n\n\n\n\n\n\n\n\n\nOpinions on RAP\nWe asked respondents who had heard of RAP whether they agreed with a series of statements.\n\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nStatement\nStrongly Disagree (%)\nDisagree (%)\nNeutral (%)\nAgree (%)\nStrongly Agree (%)\n\n\n\n\nI and/or my team are currently implementing RAP\n15.7%\n21.4%\n18.9%\n26%\n18%\n\n\nI feel confident implementing RAP in my work\n9.2%\n19.6%\n21.1%\n33.2%\n17%\n\n\nI feel supported to implement RAP in my work\n8.1%\n15%\n24.7%\n35.1%\n17.1%\n\n\nI know where to find resources to help me implement RAP\n7.5%\n17.6%\n19.2%\n37.1%\n18.6%\n\n\nI or my team are planning on implementing RAP in the next 12 months\n8.3%\n11.9%\n24.5%\n32.4%\n23%\n\n\nI think it is important to implement RAP in my work\n3.7%\n5.6%\n16.6%\n37.1%\n36.9%\n\n\nI understand what the key components of the RAP methodology are\n7.2%\n17.5%\n16.4%\n38.9%\n20%\n\n\n\n Sample size = 992"
  },
  {
    "objectID": "summary.html#good-coding-practices",
    "href": "summary.html#good-coding-practices",
    "title": "The state of UK public sector analysis code: 2023",
    "section": "Good coding practices",
    "text": "Good coding practices\nWe asked respondents who reported writing code at work about the good practices they apply when writing code at work. These questions cover many of the coding practices recommended in the quality assurance of code for analysis and research guidance, as well as the minimum RAP standards set by the cross-government RAP champions network.\nCoding practices have been classified as either ‘Basic’ or ‘Advanced’. Basic practices are those that make up the minimum RAP standards, while Advanced practices help improve reproducibility. The percentage of respondents who reported applying these practices either ‘Regularly’ or ‘All the time’ is shown below.\nOpen sourcing was defined as ‘making code freely available to be modified and redistributed’\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nRAP component\nType\nPercentage of analysts who code in their work\n\n\n\n\nUse open source software\nBasic\n71.2%\n\n\nProportionate QA\nBasic\n65.6%\n\n\nPeer review\nBasic\n53.6%\n\n\nVersion control\nBasic\n44.7%\n\n\nDocumentation\nBasic\n29.4%\n\n\nTeam open source code\nBasic\n12.5%\n\n\nFunctions\nAdvanced\n55.9%\n\n\nFollow code style guidelines\nAdvanced\n49.3%\n\n\nFunction documentation\nAdvanced\n31.6%\n\n\nDependency management\nAdvanced\n29.4%\n\n\nUnit testing\nAdvanced\n22.1%\n\n\nContinuous integration\nAdvanced\n17.4%\n\n\nCode packages\nAdvanced\n11.9%\n\n\n\n Sample size = 1125\n\n\n\n\n\n\n\n\n\n\n\n\nConsistency of good coding practices\nWe asked respondents who reported writing code at work how frequently they apply good coding practices when writing code at work.\n\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nStatement\nI don't understand this question (%)\nNever (%)\nRarely (%)\nSometimes (%)\nRegularly (%)\nAll the time (%)\n\n\n\n\nAutomated data quality assurance\n6.6%\n20.1%\n15.5%\n26.9%\n18.9%\n12%\n\n\nCode review\n1.1%\n7.8%\n10.3%\n27.2%\n29.4%\n24.2%\n\n\nCoding guidelines / Style guides\n6.8%\n11.4%\n9.4%\n23.1%\n30.5%\n18.8%\n\n\nFunctions\n5.2%\n8.6%\n10.1%\n20.2%\n28.4%\n27.6%\n\n\nOpen source own code\n17.6%\n45.1%\n13.1%\n11.7%\n6.8%\n5.7%\n\n\nPackaging code\n12.4%\n49.7%\n14.3%\n11.6%\n6.9%\n5%\n\n\nProportionate quality assurance\n11.2%\n6.4%\n3.4%\n13.4%\n36%\n29.6%\n\n\nQuality assurance throughout development\n6.8%\n8.1%\n6.8%\n18%\n35.5%\n24.9%\n\n\nStandard directory structure\n25.5%\n16.7%\n8.6%\n15.7%\n19.1%\n14.3%\n\n\nUnit testing\n25.8%\n20%\n13.8%\n18.3%\n13.7%\n8.4%\n\n\nUse open source software\n1.8%\n6.1%\n8.4%\n12.5%\n23.8%\n47.4%\n\n\nVersion control\n4.8%\n27.7%\n9.5%\n13.2%\n18.3%\n26.4%\n\n\n\n Sample size = 1125\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode documentation\nWe asked respondents who reported writing code at work how frequently they write different forms of documentation when programming in their current role.\nEmbedded documentation is one of the components which make up a RAP minimum viable product. Documentation is important to help others be clear on how to use the product and what the code is intended to do.\n\n\n\n\n\n\n  \n\n Show chart \n Show table \n\n\n\n\n\n\n\n\n\nStatement\nI don't understand this question (%)\nNever (%)\nRarely (%)\nSometimes (%)\nRegularly (%)\nAll the time (%)\n\n\n\n\nAnalytical Quality Assurance (AQA) logs\n19.6%\n30.8%\n12.2%\n18.9%\n12.4%\n6%\n\n\nCode comments\n2.3%\n4.2%\n1.8%\n8.3%\n27.8%\n55.6%\n\n\nData or assumptions registers\n20.1%\n36%\n11.7%\n13.1%\n10.9%\n8.2%\n\n\nDesk notes\n20.3%\n19.5%\n10.2%\n20.5%\n19.6%\n10%\n\n\nDocumentation for each function or class\n9.8%\n24.4%\n14.5%\n19.6%\n17.8%\n13.9%\n\n\nFlow charts\n6.3%\n28.2%\n20.3%\n26.8%\n12.9%\n5.6%\n\n\nREADME files\n5.8%\n26.3%\n13.7%\n23.5%\n17.1%\n13.7%\n\n\n\n Sample size = 1125"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "The state of UK public sector analysis code: 2023",
    "section": "",
    "text": "Note\n\n\n\nPlease note, these are the initial summary statistics for CARS 2023 and further analysis will follow. We advise linking directly to this document when distributing to ensure the most up to date information."
  }
]