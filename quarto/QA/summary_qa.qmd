---
title: "Summary QA"
execute:
  echo: false
output:
  html_document
---

```{r output = FALSE}
library(magrittr)

# loads CARS from local repo to include recent changes
devtools::load_all()

data <- CARS::get_tidy_data_file("2023_data.csv") %>%
  CARS::rename_cols() %>%
  CARS::apply_skip_logic() %>%
  CARS::clean_data() %>%
  CARS::derive_vars()


raw_data <- CARS::get_tidy_data_file("2023_data.csv") %>%
  CARS::rename_cols() %>%
  CARS::clean_data() %>%
  CARS::derive_vars()

all_wave_data <- CARS::get_all_waves(mode = "file")

tables <- CARS::summarise_all(data, all_tables = TRUE, sample = TRUE)

exp_samples <- CARS::sample_sizes(raw_data)

```

### QA checklist:

* Spelling, grammar and readability
* All charts and tables are present
* All charts have titles, legends and axis labels
* All links work as expected

In addition, this document can be used to QA the data underlying each of the frequency tables and charts. Denominator checks take the expected sample size based on the raw data following the logic rules of the sample_sizes function, as an additional check for question routing. The expected sample size will vary for each question depending on question streaming rules. Other checks include raw data tables used for percentage calculations, which can be used to cross-check calculations are correct.

The datasets used in this document are:

* data: data as used in the final publication, with question skip logic applied
* raw_data: data without question skip logic applied, used to determine the expected sample sizes based on question streaming logic
* all_wave_data: data as used in the final publication for each year, with question skip logic applied

## Coding frequency and tools
#### Summarise coding frequency
Check data against figure
```{r echo = FALSE}
knitr::kable(tables$code_freq)
```

Denominator check:
```{r echo = FALSE}
if(tables$code_freq$sample[1] != exp_samples$all) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$all))
}
```
#### Coding frequency over time
Sample size should be the total response for each year. Percentages are calculated within the summary.qmd code.
```{r echo = FALSE}

all_wave_data$code_freq <- factor(all_wave_data$code_freq, levels = c(
  "Never", 
  "Rarely",
  "Sometimes",
  "Regularly",
  "All the time"
))

table(all_wave_data$year, all_wave_data$code_freq) %>% 
  data.frame %>% 
  dplyr::group_by(Var1) %>% 
  dplyr::summarise(sample = sum(Freq)) %>%
  knitr::kable()
  
```

### Access to and knowledge of programming languages
#### Access
Check data against figure, check proportions are correct
```{r echo = FALSE}
knitr::kable(tables$access)
```
Denominator check:
```{r echo = FALSE}

if(tables$access$sample[1] != exp_samples$all) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$all))
  
}
```

#### Knowledge
Check data against figure, check proportions are correct
```{r echo = FALSE}
knitr::kable(tables$knowledge)
```
Denominator check:
```{r echo = FALSE}

if(tables$knowledge$sample[1] != exp_samples$all) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$all))
  
}
```

#### Open source capability
Check percentages are correct from the data in the table:
```{r echo = FALSE}
knitr::kable(CARS::summarise_os_vs_prop(all_wave_data))
```

#### Different professions have capability in different tools
Check percentages are correct from the data in the table (final column = group sample size):
```{r echo = FALSE}
knitr::kable(tables$languages_by_prof)
```
Denominator check - numbers of respondents in each profession, cross check with above:
```{r echo = FALSE}
raw_data %>%
  tidyr::pivot_longer(contains("prof"), names_to = "prof", values_to = "value") %>%
  dplyr::group_by(prof) %>%
  dplyr::summarise(n = sum(value == "Yes")) %>%
  knitr::kable()
```
#### Access to git
Check data against figure, check proportions are correct
```{r echo = FALSE}
knitr::kable(tables$git_access)
```
Denominator check:
```{r echo = FALSE}

if(tables$git_access$sample[1] != exp_samples$all) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$all))
}
```

## Capability
#### First learned
Check data against figure, check proportions are correct
```{r echo = FALSE}
knitr::kable(tables$where_learned)
```
Denominator check:
```{r echo = FALSE}

if(tables$where_learned$sample[1] != exp_samples$code_at_work) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$code_at_work))
  
}
```

#### Ability change
Check data against figure, check proportions are correct
```{r echo = FALSE}
knitr::kable(tables$ability_change)
```
Denominator check:
```{r echo = FALSE}

if(tables$ability_change$sample[1] != exp_samples$other_code_experience) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$other_code_experience))
}
```

#### Ability change by frequency
Check data against figure, check proportions are correct
```{r echo = FALSE}
knitr::kable(tables$capability_change_by_freq)
```

Sample size check:
```{r echo = FALSE}

if(tables$capability_change_by_freq$sample[1] != exp_samples$other_code_experience) {
  warning("Sample size different from expected")
  print(paste0("Expected: ", exp_samples$other_code_experience))
  print(paste0("Actual: ", tables$capability_change_by_freq$sample[1]))
} else {
  print(paste0("Sample size as expected: ", exp_samples$other_code_experience))
}
```

## RAP
#### Awareness of RAP
Check that the percentages in the chart and the figures in the text are correct
```{r echo = FALSE}
knitr::kable(CARS::summarise_rap_awareness_over_time(all_wave_data))
```

#### RAP knowledge
Check data against figure, check proportions are correct
```{r echo = FALSE}
knitr::kable(tables$rap_knowledge)
```

Denominator check:
```{r echo = FALSE}

if(tables$rap_knowledge$sample[1] != exp_samples$code_at_work) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$code_at_work))
}
```


#### RAP champs
Check data against figure, check proportions are correct
```{r echo = FALSE}
knitr::kable(tables$rap_champ_status)
```

Denominator check:
```{r echo = FALSE}

if(tables$rap_champ_status$sample[1] != exp_samples$heard_of_RAP) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$heard_of_RAP))
}
```


#### RAP strategy knowledge
Check data against figure, check proportions are correct
```{r echo = FALSE}
knitr::kable(tables$strategy_knowledge)
```

Denominator check:
```{r echo = FALSE}

if(tables$strategy_knowledge$sample[1] != exp_samples$heard_of_RAP) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$heard_of_RAP))
}
```


#### RAP opinions
Check data against figure, check proportions are correct
```{r}
knitr::kable(tables$rap_opinions)
```

Denominator check:
```{r echo = FALSE}

if(tables$rap_opinions$sample[1] != exp_samples$heard_of_RAP) {
  warning("Denominator different from expected")
  print(paste0("Expected: ", exp_samples$heard_of_RAP))
  print(paste0("Actual: ", tables$rap_opinions[1]))
} else {
  print(paste0("Denominator as expected: ", exp_samples$heard_of_RAP))
}
```

### Coding practices
Check data against figure, check proportions are correct
```{r}
knitr::kable(tables$rap_components)
```

Denominator check:
In this function, denominator is derived directly from data based on logic rules as below
```{r echo = FALSE}

if(sum(data$code_freq != "Never", na.rm = TRUE) != exp_samples$code_at_work) {
  warning("Denominator different from expected")
} else {
  print(paste0("Denominator as expected: ", exp_samples$code_at_work))
  
}
```

#### Coding practices: frequency
Check data against figure, check proportions are correct
```{r}
knitr::kable(tables$coding_practices)
```

Denominator check:
```{r}

if(tables$coding_practices$sample[1] != exp_samples$code_at_work) {
  warning("Denominator different from expected")
  print(paste0("Expected: ", exp_samples$code_at_work))
  print(paste0("Actual: ", tables$coding_practices$sample[1]))
} else {
  print(paste0("Denominator as expected: ", exp_samples$code_at_work))
}

```

#### Documentation
Check data against figure, check proportions are correct
```{r}
knitr::kable(tables$doc)
```

Denominator check:
```{r}

if(tables$doc$sample[1] != exp_samples$code_at_work) {
  warning("Denominator different from expected")
  print(paste0("Expected: ", exp_samples$code_at_work))
  print(paste0("Actual: ", tables$doc$sample[1]))
} else {
  print(paste0("Denominator as expected: ", exp_samples$code_at_work))
}

```
